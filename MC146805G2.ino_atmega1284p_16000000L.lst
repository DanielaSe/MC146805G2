
/var/folders/_2/dd104tjx2pgdfwt7qph9wdnh0000gn/T/arduino_build_751625/MC146805G2.ino.elf:     file format elf32-avr


Disassembly of section .text:

00000000 <__vectors>:
__vectors():
       0:	0c 94 14 03 	jmp	0x628	; 0x628 <__dtors_end>
       4:	0c 94 3e 03 	jmp	0x67c	; 0x67c <__bad_interrupt>
       8:	0c 94 3e 03 	jmp	0x67c	; 0x67c <__bad_interrupt>
       c:	0c 94 3e 03 	jmp	0x67c	; 0x67c <__bad_interrupt>
      10:	0c 94 3e 03 	jmp	0x67c	; 0x67c <__bad_interrupt>
      14:	0c 94 b6 26 	jmp	0x4d6c	; 0x4d6c <__vector_5>
      18:	0c 94 31 27 	jmp	0x4e62	; 0x4e62 <__vector_6>
      1c:	0c 94 3e 03 	jmp	0x67c	; 0x67c <__bad_interrupt>
      20:	0c 94 3e 03 	jmp	0x67c	; 0x67c <__bad_interrupt>
      24:	0c 94 3e 03 	jmp	0x67c	; 0x67c <__bad_interrupt>
      28:	0c 94 3e 03 	jmp	0x67c	; 0x67c <__bad_interrupt>
      2c:	0c 94 3e 03 	jmp	0x67c	; 0x67c <__bad_interrupt>
      30:	0c 94 3e 03 	jmp	0x67c	; 0x67c <__bad_interrupt>
      34:	0c 94 3e 03 	jmp	0x67c	; 0x67c <__bad_interrupt>
      38:	0c 94 3e 03 	jmp	0x67c	; 0x67c <__bad_interrupt>
      3c:	0c 94 3e 03 	jmp	0x67c	; 0x67c <__bad_interrupt>
      40:	0c 94 3e 03 	jmp	0x67c	; 0x67c <__bad_interrupt>
      44:	0c 94 3e 03 	jmp	0x67c	; 0x67c <__bad_interrupt>
      48:	0c 94 fa 33 	jmp	0x67f4	; 0x67f4 <__vector_18>
      4c:	0c 94 3e 03 	jmp	0x67c	; 0x67c <__bad_interrupt>
      50:	0c 94 e3 36 	jmp	0x6dc6	; 0x6dc6 <__vector_20>
      54:	0c 94 19 37 	jmp	0x6e32	; 0x6e32 <__vector_21>
      58:	0c 94 3e 03 	jmp	0x67c	; 0x67c <__bad_interrupt>
      5c:	0c 94 3e 03 	jmp	0x67c	; 0x67c <__bad_interrupt>
      60:	0c 94 3e 03 	jmp	0x67c	; 0x67c <__bad_interrupt>
      64:	0c 94 3e 03 	jmp	0x67c	; 0x67c <__bad_interrupt>
      68:	0c 94 86 32 	jmp	0x650c	; 0x650c <__vector_26>
      6c:	0c 94 3e 03 	jmp	0x67c	; 0x67c <__bad_interrupt>
      70:	0c 94 3e 03 	jmp	0x67c	; 0x67c <__bad_interrupt>
      74:	0c 94 3e 03 	jmp	0x67c	; 0x67c <__bad_interrupt>
      78:	0c 94 3e 03 	jmp	0x67c	; 0x67c <__bad_interrupt>
      7c:	0c 94 3e 03 	jmp	0x67c	; 0x67c <__bad_interrupt>
      80:	0c 94 3e 03 	jmp	0x67c	; 0x67c <__bad_interrupt>
      84:	0c 94 3e 03 	jmp	0x67c	; 0x67c <__bad_interrupt>
      88:	0c 94 3e 03 	jmp	0x67c	; 0x67c <__bad_interrupt>

0000008c <__trampolines_end>:
__trampolines_start():
      8c:	00 01       	movw	r0, r0
      8e:	03 07       	cpc	r16, r19
      90:	0f 1f       	adc	r16, r31
      92:	3f 7f       	andi	r19, 0xFF	; 255

00000094 <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)::premask>:
      94:	00 80 c0 e0 f0 f8 fc fe                             ........

0000009c <font>:
      9c:	00 00 00 00 00 3e 5b 4f 5b 3e 3e 6b 4f 6b 3e 1c     .....>[O[>>kOk>.
      ac:	3e 7c 3e 1c 18 3c 7e 3c 18 1c 57 7d 57 1c 1c 5e     >|>..<~<..W}W..^
      bc:	7f 5e 1c 00 18 3c 18 00 ff e7 c3 e7 ff 00 18 24     .^...<.........$
      cc:	18 00 ff e7 db e7 ff 30 48 3a 06 0e 26 29 79 29     .......0H:..&)y)
      dc:	26 40 7f 05 05 07 40 7f 05 25 3f 5a 3c e7 3c 5a     &@....@..%?Z<.<Z
      ec:	7f 3e 1c 1c 08 08 1c 1c 3e 7f 14 22 7f 22 14 5f     .>......>.."."._
      fc:	5f 00 5f 5f 06 09 7f 01 7f 00 66 89 95 6a 60 60     _.__......f..j``
     10c:	60 60 60 94 a2 ff a2 94 08 04 7e 04 08 10 20 7e     ```.......~... ~
     11c:	20 10 08 08 2a 1c 08 08 1c 2a 08 08 1e 10 10 10      ...*....*......
     12c:	10 0c 1e 0c 1e 0c 30 38 3e 38 30 06 0e 3e 0e 06     ......08>80..>..
     13c:	00 00 00 00 00 00 00 5f 00 00 00 07 00 07 00 14     ......._........
     14c:	7f 14 7f 14 24 2a 7f 2a 12 23 13 08 64 62 36 49     ....$*.*.#..db6I
     15c:	56 20 50 00 08 07 03 00 00 1c 22 41 00 00 41 22     V P......."A..A"
     16c:	1c 00 2a 1c 7f 1c 2a 08 08 3e 08 08 00 80 70 30     ..*...*..>....p0
     17c:	00 08 08 08 08 08 00 00 60 60 00 20 10 08 04 02     ........``. ....
     18c:	3e 51 49 45 3e 00 42 7f 40 00 72 49 49 49 46 21     >QIE>.B.@.rIIIF!
     19c:	41 49 4d 33 18 14 12 7f 10 27 45 45 45 39 3c 4a     AIM3.....'EEE9<J
     1ac:	49 49 31 41 21 11 09 07 36 49 49 49 36 46 49 49     II1A!...6III6FII
     1bc:	29 1e 00 00 14 00 00 00 40 34 00 00 00 08 14 22     ).......@4....."
     1cc:	41 14 14 14 14 14 00 41 22 14 08 02 01 59 09 06     A......A"....Y..
     1dc:	3e 41 5d 59 4e 7c 12 11 12 7c 7f 49 49 49 36 3e     >A]YN|...|.III6>
     1ec:	41 41 41 22 7f 41 41 41 3e 7f 49 49 49 41 7f 09     AAA".AAA>.IIIA..
     1fc:	09 09 01 3e 41 41 51 73 7f 08 08 08 7f 00 41 7f     ...>AAQs......A.
     20c:	41 00 20 40 41 3f 01 7f 08 14 22 41 7f 40 40 40     A. @A?...."A.@@@
     21c:	40 7f 02 1c 02 7f 7f 04 08 10 7f 3e 41 41 41 3e     @..........>AAA>
     22c:	7f 09 09 09 06 3e 41 51 21 5e 7f 09 19 29 46 26     .....>AQ!^...)F&
     23c:	49 49 49 32 03 01 7f 01 03 3f 40 40 40 3f 1f 20     III2.....?@@@?. 
     24c:	40 20 1f 3f 40 38 40 3f 63 14 08 14 63 03 04 78     @ .?@8@?c...c..x
     25c:	04 03 61 59 49 4d 43 00 7f 41 41 41 02 04 08 10     ..aYIMC..AAA....
     26c:	20 00 41 41 41 7f 04 02 01 02 04 40 40 40 40 40      .AAA......@@@@@
     27c:	00 03 07 08 00 20 54 54 78 40 7f 28 44 44 38 38     ..... TTx@.(DD88
     28c:	44 44 44 28 38 44 44 28 7f 38 54 54 54 18 00 08     DDD(8DD(.8TTT...
     29c:	7e 09 02 18 a4 a4 9c 78 7f 08 04 04 78 00 44 7d     ~......x....x.D}
     2ac:	40 00 20 40 40 3d 00 7f 10 28 44 00 00 41 7f 40     @. @@=...(D..A.@
     2bc:	00 7c 04 78 04 78 7c 08 04 04 78 38 44 44 44 38     .|.x.x|...x8DDD8
     2cc:	fc 18 24 24 18 18 24 24 18 fc 7c 08 04 04 08 48     ..$$..$$..|....H
     2dc:	54 54 54 24 04 04 3f 44 24 3c 40 40 20 7c 1c 20     TTT$..?D$<@@ |. 
     2ec:	40 20 1c 3c 40 30 40 3c 44 28 10 28 44 4c 90 90     @ .<@0@<D(.(DL..
     2fc:	90 7c 44 64 54 4c 44 00 08 36 41 00 00 00 77 00     .|DdTLD..6A...w.
     30c:	00 00 41 36 08 00 02 01 02 04 02 3c 26 23 26 3c     ..A6.......<&#&<
     31c:	1e a1 a1 61 12 3a 40 40 20 7a 38 54 54 55 59 21     ...a.:@@ z8TTUY!
     32c:	55 55 79 41 22 54 54 78 42 21 55 54 78 40 20 54     UUyA"TTxB!UTx@ T
     33c:	55 79 40 0c 1e 52 72 12 39 55 55 55 59 39 54 54     Uy@..Rr.9UUUY9TT
     34c:	54 59 39 55 54 54 58 00 00 45 7c 41 00 02 45 7d     TY9UTTX..E|A..E}
     35c:	42 00 01 45 7c 40 7d 12 11 12 7d f0 28 25 28 f0     B..E|@}...}.(%(.
     36c:	7c 54 55 45 00 20 54 54 7c 54 7c 0a 09 7f 49 32     |TUE. TT|T|...I2
     37c:	49 49 49 32 3a 44 44 44 3a 32 4a 48 48 30 3a 41     III2:DDD:2JHH0:A
     38c:	41 21 7a 3a 42 40 20 78 00 9d a0 a0 7d 3d 42 42     A!z:B@ x....}=BB
     39c:	42 3d 3d 40 40 40 3d 3c 24 ff 24 24 48 7e 49 43     B==@@@=<$.$$H~IC
     3ac:	66 2b 2f fc 2f 2b ff 09 29 f6 20 c0 88 7e 09 03     f+/./+..). ..~..
     3bc:	20 54 54 79 41 00 00 44 7d 41 30 48 48 4a 32 38      TTyA..D}A0HHJ28
     3cc:	40 40 22 7a 00 7a 0a 0a 72 7d 0d 19 31 7d 26 29     @@"z.z..r}..1}&)
     3dc:	29 2f 28 26 29 29 29 26 30 48 4d 40 20 38 08 08     )/(&)))&0HM@ 8..
     3ec:	08 08 08 08 08 08 38 2f 10 c8 ac ba 2f 10 28 34     ......8/..../.(4
     3fc:	fa 00 00 7b 00 00 08 14 2a 14 22 22 14 2a 14 08     ...{....*."".*..
     40c:	55 00 55 00 55 aa 55 aa 55 aa ff 55 ff 55 ff 00     U.U.U.U.U..U.U..
     41c:	00 00 ff 00 10 10 10 ff 00 14 14 14 ff 00 10 10     ................
     42c:	ff 00 ff 10 10 f0 10 f0 14 14 14 fc 00 14 14 f7     ................
     43c:	00 ff 00 00 ff 00 ff 14 14 f4 04 fc 14 14 17 10     ................
     44c:	1f 10 10 1f 10 1f 14 14 14 1f 00 10 10 10 f0 00     ................
     45c:	00 00 00 1f 10 10 10 10 1f 10 10 10 10 f0 10 00     ................
     46c:	00 00 ff 10 10 10 10 10 10 10 10 10 ff 10 00 00     ................
     47c:	00 ff 14 00 00 ff 00 ff 00 00 1f 10 17 00 00 fc     ................
     48c:	04 f4 14 14 17 10 17 14 14 f4 04 f4 00 00 ff 00     ................
     49c:	f7 14 14 14 14 14 14 14 f7 00 f7 14 14 14 17 14     ................
     4ac:	10 10 1f 10 1f 14 14 14 f4 14 10 10 f0 10 f0 00     ................
     4bc:	00 1f 10 1f 00 00 00 1f 14 00 00 00 fc 14 00 00     ................
     4cc:	f0 10 f0 10 10 ff 10 ff 14 14 14 ff 14 10 10 10     ................
     4dc:	1f 00 00 00 00 f0 10 ff ff ff ff ff f0 f0 f0 f0     ................
     4ec:	f0 ff ff ff 00 00 00 00 00 ff ff 0f 0f 0f 0f 0f     ................
     4fc:	38 44 44 38 44 fc 4a 4a 4a 34 7e 02 02 06 06 02     8DD8D.JJJ4~.....
     50c:	7e 02 7e 02 63 55 49 41 63 38 44 44 3c 04 40 7e     ~.~.cUIAc8DD<.@~
     51c:	20 1e 20 06 02 7e 02 02 99 a5 e7 a5 99 1c 2a 49      . ..~........*I
     52c:	2a 1c 4c 72 01 72 4c 30 4a 4d 4d 30 30 48 78 48     *.Lr.rL0JMM00HxH
     53c:	30 bc 62 5a 46 3d 3e 49 49 49 00 7e 01 01 01 7e     0.bZF=>III.~...~
     54c:	2a 2a 2a 2a 2a 44 44 5f 44 44 40 51 4a 44 40 40     *****DD_DD@QJD@@
     55c:	44 4a 51 40 00 00 ff 01 03 e0 80 ff 00 00 08 08     DJQ@............
     56c:	6b 6b 08 36 12 36 24 36 06 0f 09 0f 06 00 00 18     kk.6.6$6........
     57c:	18 00 00 00 10 10 00 30 40 ff 01 01 00 1f 01 01     .......0@.......
     58c:	1e 00 19 1d 17 12 00 3c 3c 3c 3c 00 00 00 00 00     .......<<<<.....

0000059c <digital_pin_to_timer_PGM>:
     59c:	00 00 00 02 03 00 0a 0b 00 00 00 00 05 04 09 08     ................
	...

000005bc <digital_pin_to_bit_mask_PGM>:
     5bc:	01 02 04 08 10 20 40 80 01 02 04 08 10 20 40 80     ..... @...... @.
     5cc:	01 02 04 08 10 20 40 80 01 02 04 08 10 20 40 80     ..... @...... @.

000005dc <digital_pin_to_port_PGM>:
     5dc:	02 02 02 02 02 02 02 02 04 04 04 04 04 04 04 04     ................
     5ec:	03 03 03 03 03 03 03 03 01 01 01 01 01 01 01 01     ................

000005fc <port_to_input_PGM>:
     5fc:	00 00 20 00 23 00 26 00 29 00                       .. .#.&.).

00000606 <port_to_output_PGM>:
     606:	00 00 22 00 25 00 28 00 2b 00                       ..".%.(.+.

00000610 <port_to_mode_PGM>:
     610:	00 00 21 00 24 00 27 00 2a 00                       ..!.$.'.*.

0000061a <__ctors_start>:
__ctors_start():
     61a:	cf 07       	cpc	r28, r31
     61c:	ba 0a       	sbc	r11, r26
     61e:	ac 31       	cpi	r26, 0x1C	; 28
     620:	ba 33       	cpi	r27, 0x3A	; 58
     622:	4d 37       	cpi	r20, 0x7D	; 125

00000624 <__ctors_end>:
__dtors_start():
     624:	e9 07       	cpc	r30, r25
     626:	e7 0a       	sbc	r14, r23

00000628 <__dtors_end>:
__dtors_end():
     628:	11 24       	eor	r1, r1
     62a:	1f be       	out	0x3f, r1	; 63
     62c:	cf ef       	ldi	r28, 0xFF	; 255
     62e:	d0 e4       	ldi	r29, 0x40	; 64
     630:	de bf       	out	0x3e, r29	; 62
     632:	cd bf       	out	0x3d, r28	; 61

00000634 <__do_copy_data>:
__do_copy_data():
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2373
     634:	17 e0       	ldi	r17, 0x07	; 7
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2374
     636:	a0 e0       	ldi	r26, 0x00	; 0
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2375
     638:	b1 e0       	ldi	r27, 0x01	; 1
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2376
     63a:	e8 e6       	ldi	r30, 0x68	; 104
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2377
     63c:	f9 e7       	ldi	r31, 0x79	; 121
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2378
     63e:	00 e0       	ldi	r16, 0x00	; 0
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2379
     640:	0b bf       	out	0x3b, r16	; 59
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2380
     642:	02 c0       	rjmp	.+4      	; 0x648 <__do_copy_data+0x14>
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2382
     644:	07 90       	elpm	r0, Z+
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2383
     646:	0d 92       	st	X+, r0
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2385
     648:	ac 38       	cpi	r26, 0x8C	; 140
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2386
     64a:	b1 07       	cpc	r27, r17
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2387
     64c:	d9 f7       	brne	.-10     	; 0x644 <__do_copy_data+0x10>

0000064e <__do_clear_bss>:
__do_clear_bss():
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2441
     64e:	2b e0       	ldi	r18, 0x0B	; 11
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2442
     650:	ac e8       	ldi	r26, 0x8C	; 140
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2443
     652:	b7 e0       	ldi	r27, 0x07	; 7
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2444
     654:	01 c0       	rjmp	.+2      	; 0x658 <.do_clear_bss_start>

00000656 <.do_clear_bss_loop>:
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2446
     656:	1d 92       	st	X+, r1

00000658 <.do_clear_bss_start>:
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2448
     658:	a3 37       	cpi	r26, 0x73	; 115
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2449
     65a:	b2 07       	cpc	r27, r18
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2450
     65c:	e1 f7       	brne	.-8      	; 0x656 <.do_clear_bss_loop>

0000065e <__do_global_ctors>:
__do_global_ctors():
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2466
     65e:	13 e0       	ldi	r17, 0x03	; 3
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2467
     660:	c2 e1       	ldi	r28, 0x12	; 18
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2468
     662:	d3 e0       	ldi	r29, 0x03	; 3
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2472
     664:	04 c0       	rjmp	.+8      	; 0x66e <__do_global_ctors+0x10>
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2474
     666:	21 97       	sbiw	r28, 0x01	; 1
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2480
     668:	fe 01       	movw	r30, r28
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2481
     66a:	0e 94 43 3a 	call	0x7486	; 0x7486 <__tablejump2__>
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2483
     66e:	cd 30       	cpi	r28, 0x0D	; 13
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2484
     670:	d1 07       	cpc	r29, r17
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2489
     672:	c9 f7       	brne	.-14     	; 0x666 <__do_global_ctors+0x8>
     674:	0e 94 f2 39 	call	0x73e4	; 0x73e4 <main>
     678:	0c 94 a7 3c 	jmp	0x794e	; 0x794e <__do_global_dtors>

0000067c <__bad_interrupt>:
__vector_22():
     67c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000680 <NewTrack()>:
_Z8NewTrackv():
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:248


bool CHECK_BIT(int value, int b) 
{
    return value & b;
}
     680:	0f 93       	push	r16
     682:	1f 93       	push	r17
     684:	0e 94 44 34 	call	0x6888	; 0x6888 <millis>
     688:	00 91 8c 07 	lds	r16, 0x078C	; 0x80078c <__data_end>
     68c:	10 91 8d 07 	lds	r17, 0x078D	; 0x80078d <__data_end+0x1>
     690:	20 91 8e 07 	lds	r18, 0x078E	; 0x80078e <__data_end+0x2>
     694:	30 91 8f 07 	lds	r19, 0x078F	; 0x80078f <__data_end+0x3>
     698:	60 17       	cp	r22, r16
     69a:	71 07       	cpc	r23, r17
     69c:	82 07       	cpc	r24, r18
     69e:	93 07       	cpc	r25, r19
     6a0:	c4 f0       	brlt	.+48     	; 0x6d2 <NewTrack()+0x52>
     6a2:	60 56       	subi	r22, 0x60	; 96
     6a4:	70 4f       	sbci	r23, 0xF0	; 240
     6a6:	8f 4f       	sbci	r24, 0xFF	; 255
     6a8:	9f 4f       	sbci	r25, 0xFF	; 255
     6aa:	60 93 8c 07 	sts	0x078C, r22	; 0x80078c <__data_end>
     6ae:	70 93 8d 07 	sts	0x078D, r23	; 0x80078d <__data_end+0x1>
     6b2:	80 93 8e 07 	sts	0x078E, r24	; 0x80078e <__data_end+0x2>
     6b6:	90 93 8f 07 	sts	0x078F, r25	; 0x80078f <__data_end+0x3>
     6ba:	88 e9       	ldi	r24, 0x98	; 152
     6bc:	97 e0       	ldi	r25, 0x07	; 7
     6be:	0e 94 a3 15 	call	0x2b46	; 0x2b46 <TTapeController::NewTrack()>
     6c2:	64 e5       	ldi	r22, 0x54	; 84
     6c4:	71 e0       	ldi	r23, 0x01	; 1
     6c6:	82 ed       	ldi	r24, 0xD2	; 210
     6c8:	9a e0       	ldi	r25, 0x0A	; 10
     6ca:	1f 91       	pop	r17
     6cc:	0f 91       	pop	r16
     6ce:	0c 94 e9 37 	jmp	0x6fd2	; 0x6fd2 <Print::println(char const*)>
     6d2:	1f 91       	pop	r17
     6d4:	0f 91       	pop	r16
     6d6:	08 95       	ret

000006d8 <CDPlayerStartsNewTrack()>:
_Z22CDPlayerStartsNewTrackv():
     6d8:	0f 93       	push	r16
     6da:	1f 93       	push	r17
     6dc:	62 e6       	ldi	r22, 0x62	; 98
     6de:	71 e0       	ldi	r23, 0x01	; 1
     6e0:	82 ed       	ldi	r24, 0xD2	; 210
     6e2:	9a e0       	ldi	r25, 0x0A	; 10
     6e4:	0e 94 e9 37 	call	0x6fd2	; 0x6fd2 <Print::println(char const*)>
     6e8:	0e 94 44 34 	call	0x6888	; 0x6888 <millis>
     6ec:	00 91 90 07 	lds	r16, 0x0790	; 0x800790 <IgnoreCDEvent>
     6f0:	10 91 91 07 	lds	r17, 0x0791	; 0x800791 <IgnoreCDEvent+0x1>
     6f4:	20 91 92 07 	lds	r18, 0x0792	; 0x800792 <IgnoreCDEvent+0x2>
     6f8:	30 91 93 07 	lds	r19, 0x0793	; 0x800793 <IgnoreCDEvent+0x3>
     6fc:	60 17       	cp	r22, r16
     6fe:	71 07       	cpc	r23, r17
     700:	82 07       	cpc	r24, r18
     702:	93 07       	cpc	r25, r19
     704:	4c f1       	brlt	.+82     	; 0x758 <CDPlayerStartsNewTrack()+0x80>
     706:	68 51       	subi	r22, 0x18	; 24
     708:	7c 4f       	sbci	r23, 0xFC	; 252
     70a:	8f 4f       	sbci	r24, 0xFF	; 255
     70c:	9f 4f       	sbci	r25, 0xFF	; 255
     70e:	60 93 90 07 	sts	0x0790, r22	; 0x800790 <IgnoreCDEvent>
     712:	70 93 91 07 	sts	0x0791, r23	; 0x800791 <IgnoreCDEvent+0x1>
     716:	80 93 92 07 	sts	0x0792, r24	; 0x800792 <IgnoreCDEvent+0x2>
     71a:	90 93 93 07 	sts	0x0793, r25	; 0x800793 <IgnoreCDEvent+0x3>
     71e:	88 e9       	ldi	r24, 0x98	; 152
     720:	97 e0       	ldi	r25, 0x07	; 7
     722:	0e 94 43 15 	call	0x2a86	; 0x2a86 <TTapeController::IsOnAutoRecord()>
     726:	88 23       	and	r24, r24
     728:	b9 f0       	breq	.+46     	; 0x758 <CDPlayerStartsNewTrack()+0x80>
     72a:	88 e9       	ldi	r24, 0x98	; 152
     72c:	97 e0       	ldi	r25, 0x07	; 7
     72e:	0e 94 35 15 	call	0x2a6a	; 0x2a6a <TTapeController::IsRecording()>
     732:	88 23       	and	r24, r24
     734:	89 f0       	breq	.+34     	; 0x758 <CDPlayerStartsNewTrack()+0x80>
     736:	6e e7       	ldi	r22, 0x7E	; 126
     738:	71 e0       	ldi	r23, 0x01	; 1
     73a:	82 ed       	ldi	r24, 0xD2	; 210
     73c:	9a e0       	ldi	r25, 0x0A	; 10
     73e:	0e 94 e9 37 	call	0x6fd2	; 0x6fd2 <Print::println(char const*)>
     742:	61 e0       	ldi	r22, 0x01	; 1
     744:	8a ea       	ldi	r24, 0xAA	; 170
     746:	98 e0       	ldi	r25, 0x08	; 8
     748:	0e 94 91 08 	call	0x1122	; 0x1122 <TCDController::Pause(bool)>
     74c:	88 e9       	ldi	r24, 0x98	; 152
     74e:	97 e0       	ldi	r25, 0x07	; 7
     750:	1f 91       	pop	r17
     752:	0f 91       	pop	r16
     754:	0c 94 a5 19 	jmp	0x334a	; 0x334a <TTapeController::NewAutoRecordTrackStarted()>
     758:	1f 91       	pop	r17
     75a:	0f 91       	pop	r16
     75c:	08 95       	ret

0000075e <setup>:
setup():
     75e:	cf 93       	push	r28
     760:	df 93       	push	r29
attachPinChangeInterrupt():
     762:	0e 94 8d 26 	call	0x4d1a	; 0x4d1a <attachPinChangeInterrupt1()>
     766:	80 e4       	ldi	r24, 0x40	; 64
     768:	93 e0       	ldi	r25, 0x03	; 3
     76a:	90 93 13 01 	sts	0x0113, r25	; 0x800113 <callbackPCINT9+0x1>
     76e:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <callbackPCINT9>
     772:	e1 ef       	ldi	r30, 0xF1	; 241
     774:	f9 e0       	ldi	r31, 0x09	; 9
     776:	81 81       	ldd	r24, Z+1	; 0x01
     778:	82 60       	ori	r24, 0x02	; 2
     77a:	81 83       	std	Z+1, r24	; 0x01
     77c:	41 e0       	ldi	r20, 0x01	; 1
     77e:	62 e0       	ldi	r22, 0x02	; 2
     780:	81 e0       	ldi	r24, 0x01	; 1
     782:	0e 94 49 26 	call	0x4c92	; 0x4c92 <enablePinChangeInterruptHelper(unsigned char, unsigned char, unsigned char)>
     786:	0e 94 08 27 	call	0x4e10	; 0x4e10 <attachPinChangeInterrupt2()>
     78a:	8c e6       	ldi	r24, 0x6C	; 108
     78c:	93 e0       	ldi	r25, 0x03	; 3
     78e:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <callbackPCINT18+0x1>
     792:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <callbackPCINT18>
     796:	ed ee       	ldi	r30, 0xED	; 237
     798:	f9 e0       	ldi	r31, 0x09	; 9
     79a:	82 81       	ldd	r24, Z+2	; 0x02
     79c:	84 60       	ori	r24, 0x04	; 4
     79e:	82 83       	std	Z+2, r24	; 0x02
     7a0:	42 e0       	ldi	r20, 0x02	; 2
     7a2:	64 e0       	ldi	r22, 0x04	; 4
     7a4:	82 e0       	ldi	r24, 0x02	; 2
     7a6:	0e 94 49 26 	call	0x4c92	; 0x4c92 <enablePinChangeInterruptHelper(unsigned char, unsigned char, unsigned char)>
setup():
     7aa:	61 e0       	ldi	r22, 0x01	; 1
     7ac:	87 e0       	ldi	r24, 0x07	; 7
     7ae:	0e 94 18 35 	call	0x6a30	; 0x6a30 <pinMode>
     7b2:	6a e0       	ldi	r22, 0x0A	; 10
     7b4:	70 e0       	ldi	r23, 0x00	; 0
     7b6:	80 e0       	ldi	r24, 0x00	; 0
     7b8:	90 e0       	ldi	r25, 0x00	; 0
     7ba:	0e 94 75 34 	call	0x68ea	; 0x68ea <delay>
     7be:	88 e5       	ldi	r24, 0x58	; 88
     7c0:	98 e0       	ldi	r25, 0x08	; 8
     7c2:	0e 94 6c 09 	call	0x12d8	; 0x12d8 <TCounter::Init()>
     7c6:	88 e5       	ldi	r24, 0x58	; 88
     7c8:	98 e0       	ldi	r25, 0x08	; 8
     7ca:	0e 94 e2 08 	call	0x11c4	; 0x11c4 <TCounter::GetWhiteLeverReleaseTime()>
     7ce:	c8 e9       	ldi	r28, 0x98	; 152
     7d0:	d7 e0       	ldi	r29, 0x07	; 7
     7d2:	9d 83       	std	Y+5, r25	; 0x05
     7d4:	8c 83       	std	Y+4, r24	; 0x04
_ZN14HardwareSerial5beginEm():
     7d6:	26 e0       	ldi	r18, 0x06	; 6
     7d8:	40 e8       	ldi	r20, 0x80	; 128
     7da:	55 e2       	ldi	r21, 0x25	; 37
     7dc:	60 e0       	ldi	r22, 0x00	; 0
     7de:	70 e0       	ldi	r23, 0x00	; 0
     7e0:	82 ed       	ldi	r24, 0xD2	; 210
     7e2:	9a e0       	ldi	r25, 0x0A	; 10
     7e4:	0e 94 8b 36 	call	0x6d16	; 0x6d16 <HardwareSerial::begin(unsigned long, unsigned char)>
setup():
     7e8:	6b e8       	ldi	r22, 0x8B	; 139
     7ea:	77 e0       	ldi	r23, 0x07	; 7
     7ec:	82 ed       	ldi	r24, 0xD2	; 210
     7ee:	9a e0       	ldi	r25, 0x0A	; 10
     7f0:	0e 94 e9 37 	call	0x6fd2	; 0x6fd2 <Print::println(char const*)>
     7f4:	6b e8       	ldi	r22, 0x8B	; 139
     7f6:	77 e0       	ldi	r23, 0x07	; 7
     7f8:	82 ed       	ldi	r24, 0xD2	; 210
     7fa:	9a e0       	ldi	r25, 0x0A	; 10
     7fc:	0e 94 e9 37 	call	0x6fd2	; 0x6fd2 <Print::println(char const*)>
     800:	6f e8       	ldi	r22, 0x8F	; 143
     802:	71 e0       	ldi	r23, 0x01	; 1
     804:	82 ed       	ldi	r24, 0xD2	; 210
     806:	9a e0       	ldi	r25, 0x0A	; 10
     808:	0e 94 e9 37 	call	0x6fd2	; 0x6fd2 <Print::println(char const*)>
     80c:	66 e9       	ldi	r22, 0x96	; 150
     80e:	71 e0       	ldi	r23, 0x01	; 1
     810:	82 ed       	ldi	r24, 0xD2	; 210
     812:	9a e0       	ldi	r25, 0x0A	; 10
     814:	0e 94 c4 37 	call	0x6f88	; 0x6f88 <Print::print(char const*)>
     818:	6c 81       	ldd	r22, Y+4	; 0x04
     81a:	7d 81       	ldd	r23, Y+5	; 0x05
     81c:	4a e0       	ldi	r20, 0x0A	; 10
     81e:	50 e0       	ldi	r21, 0x00	; 0
     820:	82 ed       	ldi	r24, 0xD2	; 210
     822:	9a e0       	ldi	r25, 0x0A	; 10
     824:	df 91       	pop	r29
     826:	cf 91       	pop	r28
     828:	0c 94 9b 38 	jmp	0x7136	; 0x7136 <Print::println(int, int)>

0000082c <StateToString(int)>:
_Z13StateToStringi():
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:251

String StateToString(int value) 
{
     82c:	ef 92       	push	r14
     82e:	ff 92       	push	r15
     830:	0f 93       	push	r16
     832:	1f 93       	push	r17
     834:	cf 93       	push	r28
     836:	df 93       	push	r29
     838:	cd b7       	in	r28, 0x3d	; 61
     83a:	de b7       	in	r29, 0x3e	; 62
     83c:	2c 97       	sbiw	r28, 0x0c	; 12
     83e:	0f b6       	in	r0, 0x3f	; 63
     840:	f8 94       	cli
     842:	de bf       	out	0x3e, r29	; 62
     844:	0f be       	out	0x3f, r0	; 63
     846:	cd bf       	out	0x3d, r28	; 61
     848:	8c 01       	movw	r16, r24
     84a:	7b 01       	movw	r14, r22
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:252
    String result = "+Tape: " + String(value,DEC) + " ";   
     84c:	4a e0       	ldi	r20, 0x0A	; 10
     84e:	ce 01       	movw	r24, r28
     850:	07 96       	adiw	r24, 0x07	; 7
     852:	0e 94 3b 39 	call	0x7276	; 0x7276 <String::String(int, unsigned char)>
_ZN15StringSumHelperC4EPKc():
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/WString.h:217

class StringSumHelper : public String
{
public:
  StringSumHelper(const String &s) : String(s) {}
  StringSumHelper(const char *p) : String(p) {}
     856:	6e ea       	ldi	r22, 0xAE	; 174
     858:	71 e0       	ldi	r23, 0x01	; 1
     85a:	ce 01       	movw	r24, r28
     85c:	01 96       	adiw	r24, 0x01	; 1
     85e:	0e 94 1c 39 	call	0x7238	; 0x7238 <String::String(char const*)>
_Z13StateToStringi():
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:252
     862:	be 01       	movw	r22, r28
     864:	69 5f       	subi	r22, 0xF9	; 249
     866:	7f 4f       	sbci	r23, 0xFF	; 255
     868:	ce 01       	movw	r24, r28
     86a:	01 96       	adiw	r24, 0x01	; 1
     86c:	0e 94 c2 39 	call	0x7384	; 0x7384 <operator+(StringSumHelper const&, String const&)>
     870:	61 eb       	ldi	r22, 0xB1	; 177
     872:	74 e0       	ldi	r23, 0x04	; 4
     874:	0e 94 d5 39 	call	0x73aa	; 0x73aa <operator+(StringSumHelper const&, char const*)>
     878:	bc 01       	movw	r22, r24
     87a:	c8 01       	movw	r24, r16
     87c:	0e 94 7e 39 	call	0x72fc	; 0x72fc <String::String(String const&)>
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/WString.h:213
       #if __cplusplus >= 201103L || defined(__GXX_EXPERIMENTAL_CXX0X__)
  void move(String &rhs);
  #endif
};

class StringSumHelper : public String
     880:	ce 01       	movw	r24, r28
     882:	01 96       	adiw	r24, 0x01	; 1
     884:	0e 94 ad 38 	call	0x715a	; 0x715a <String::~String()>
     888:	ce 01       	movw	r24, r28
     88a:	07 96       	adiw	r24, 0x07	; 7
     88c:	0e 94 ad 38 	call	0x715a	; 0x715a <String::~String()>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:253
    if (CHECK_BIT(value, input.IN_HEAD_SERVO)) { result += "HeadServo "; }
     890:	e2 fe       	sbrs	r14, 2
     892:	05 c0       	rjmp	.+10     	; 0x89e <StateToString(int)+0x72>
_ZN6StringpLEPKc():
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/WString.h:114
  unsigned char concat(const __FlashStringHelper * str);

  // if there's not enough memory for the concatenated value, the string
  // will be left unchanged (but this isn't signalled in any way)
  String & operator += (const String &rhs)  {concat(rhs); return (*this);}
  String & operator += (const char *cstr)   {concat(cstr); return (*this);}
     894:	66 eb       	ldi	r22, 0xB6	; 182
     896:	71 e0       	ldi	r23, 0x01	; 1
     898:	c8 01       	movw	r24, r16
     89a:	0e 94 b3 39 	call	0x7366	; 0x7366 <String::concat(char const*)>
_Z13StateToStringi():
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:254
    if (CHECK_BIT(value, input.IN_PAUSE_CASS)) { result += "Pause "; }
     89e:	e3 fe       	sbrs	r14, 3
     8a0:	05 c0       	rjmp	.+10     	; 0x8ac <StateToString(int)+0x80>
_ZN6StringpLEPKc():
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/WString.h:114
     8a2:	61 ec       	ldi	r22, 0xC1	; 193
     8a4:	71 e0       	ldi	r23, 0x01	; 1
     8a6:	c8 01       	movw	r24, r16
     8a8:	0e 94 b3 39 	call	0x7366	; 0x7366 <String::concat(char const*)>
_Z13StateToStringi():
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:255
    if (CHECK_BIT(value, input.IN_REC)) { result += "Rec "; }
     8ac:	e1 fe       	sbrs	r14, 1
     8ae:	05 c0       	rjmp	.+10     	; 0x8ba <StateToString(int)+0x8e>
_ZN6StringpLEPKc():
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/WString.h:114
     8b0:	68 ec       	ldi	r22, 0xC8	; 200
     8b2:	71 e0       	ldi	r23, 0x01	; 1
     8b4:	c8 01       	movw	r24, r16
     8b6:	0e 94 b3 39 	call	0x7366	; 0x7366 <String::concat(char const*)>
_Z13StateToStringi():
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:256
    if (CHECK_BIT(value, input.IN_REC_DISC_END)) { result += "RecDiscEnd "; }
     8ba:	e6 fe       	sbrs	r14, 6
     8bc:	05 c0       	rjmp	.+10     	; 0x8c8 <StateToString(int)+0x9c>
_ZN6StringpLEPKc():
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/WString.h:114
     8be:	6d ec       	ldi	r22, 0xCD	; 205
     8c0:	71 e0       	ldi	r23, 0x01	; 1
     8c2:	c8 01       	movw	r24, r16
     8c4:	0e 94 b3 39 	call	0x7366	; 0x7366 <String::concat(char const*)>
_Z13StateToStringi():
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:257
    if (CHECK_BIT(value, input.IN_REC_SIDE_A)) { result += "RecSideA "; }
     8c8:	e7 fe       	sbrs	r14, 7
     8ca:	05 c0       	rjmp	.+10     	; 0x8d6 <StateToString(int)+0xaa>
_ZN6StringpLEPKc():
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/WString.h:114
     8cc:	69 ed       	ldi	r22, 0xD9	; 217
     8ce:	71 e0       	ldi	r23, 0x01	; 1
     8d0:	c8 01       	movw	r24, r16
     8d2:	0e 94 b3 39 	call	0x7366	; 0x7366 <String::concat(char const*)>
_Z13StateToStringi():
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:258
    if (CHECK_BIT(value, input.IN_REC_SIDE_B)) { result += "RecSideB "; }
     8d6:	f0 fe       	sbrs	r15, 0
     8d8:	05 c0       	rjmp	.+10     	; 0x8e4 <StateToString(int)+0xb8>
_ZN6StringpLEPKc():
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/WString.h:114
     8da:	63 ee       	ldi	r22, 0xE3	; 227
     8dc:	71 e0       	ldi	r23, 0x01	; 1
     8de:	c8 01       	movw	r24, r16
     8e0:	0e 94 b3 39 	call	0x7366	; 0x7366 <String::concat(char const*)>
_Z13StateToStringi():
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:259
    if (CHECK_BIT(value, input.IN_REEL_MOTOR)) { result += "ReelMotor "; }
     8e4:	e5 fe       	sbrs	r14, 5
     8e6:	05 c0       	rjmp	.+10     	; 0x8f2 <StateToString(int)+0xc6>
_ZN6StringpLEPKc():
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/WString.h:114
     8e8:	6d ee       	ldi	r22, 0xED	; 237
     8ea:	71 e0       	ldi	r23, 0x01	; 1
     8ec:	c8 01       	movw	r24, r16
     8ee:	0e 94 b3 39 	call	0x7366	; 0x7366 <String::concat(char const*)>
_Z13StateToStringi():
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:260
    if (CHECK_BIT(value, input.IN_SLIDE_SERVO)) { result += "SlideServo "; }
     8f2:	e0 fe       	sbrs	r14, 0
     8f4:	05 c0       	rjmp	.+10     	; 0x900 <StateToString(int)+0xd4>
_ZN6StringpLEPKc():
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/WString.h:114
     8f6:	68 ef       	ldi	r22, 0xF8	; 248
     8f8:	71 e0       	ldi	r23, 0x01	; 1
     8fa:	c8 01       	movw	r24, r16
     8fc:	0e 94 b3 39 	call	0x7366	; 0x7366 <String::concat(char const*)>
_Z13StateToStringi():
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:261
    if (CHECK_BIT(value, input.IN_TAPE_READER)) { result += "TapeReader "; }
     900:	e4 fe       	sbrs	r14, 4
     902:	05 c0       	rjmp	.+10     	; 0x90e <StateToString(int)+0xe2>
_ZN6StringpLEPKc():
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/WString.h:114
     904:	64 e0       	ldi	r22, 0x04	; 4
     906:	72 e0       	ldi	r23, 0x02	; 2
     908:	c8 01       	movw	r24, r16
     90a:	0e 94 b3 39 	call	0x7366	; 0x7366 <String::concat(char const*)>
_Z13StateToStringi():
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:263
    return result;
}
     90e:	c8 01       	movw	r24, r16
     910:	2c 96       	adiw	r28, 0x0c	; 12
     912:	0f b6       	in	r0, 0x3f	; 63
     914:	f8 94       	cli
     916:	de bf       	out	0x3e, r29	; 62
     918:	0f be       	out	0x3f, r0	; 63
     91a:	cd bf       	out	0x3d, r28	; 61
     91c:	df 91       	pop	r29
     91e:	cf 91       	pop	r28
     920:	1f 91       	pop	r17
     922:	0f 91       	pop	r16
     924:	ff 90       	pop	r15
     926:	ef 90       	pop	r14
     928:	08 95       	ret

0000092a <KeyToString(int)>:
_Z11KeyToStringi():
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:266

String KeyToString(int value) 
{
     92a:	cf 93       	push	r28
     92c:	df 93       	push	r29
     92e:	ec 01       	movw	r28, r24
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:267
    switch (value)
     930:	60 38       	cpi	r22, 0x80	; 128
     932:	71 05       	cpc	r23, r1
     934:	09 f4       	brne	.+2      	; 0x938 <KeyToString(int)+0xe>
     936:	56 c0       	rjmp	.+172    	; 0x9e4 <KeyToString(int)+0xba>
     938:	2c f5       	brge	.+74     	; 0x984 <KeyToString(int)+0x5a>
     93a:	68 30       	cpi	r22, 0x08	; 8
     93c:	71 05       	cpc	r23, r1
     93e:	09 f4       	brne	.+2      	; 0x942 <KeyToString(int)+0x18>
     940:	48 c0       	rjmp	.+144    	; 0x9d2 <KeyToString(int)+0xa8>
     942:	9c f4       	brge	.+38     	; 0x96a <KeyToString(int)+0x40>
     944:	62 30       	cpi	r22, 0x02	; 2
     946:	71 05       	cpc	r23, r1
     948:	f1 f1       	breq	.+124    	; 0x9c6 <KeyToString(int)+0x9c>
     94a:	64 30       	cpi	r22, 0x04	; 4
     94c:	71 05       	cpc	r23, r1
     94e:	f1 f1       	breq	.+124    	; 0x9cc <KeyToString(int)+0xa2>
     950:	61 30       	cpi	r22, 0x01	; 1
     952:	71 05       	cpc	r23, r1
     954:	09 f0       	breq	.+2      	; 0x958 <KeyToString(int)+0x2e>
     956:	58 c0       	rjmp	.+176    	; 0xa08 <KeyToString(int)+0xde>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:270
    {

        case 0x0001 : return "+Key:Reverse Mode";
     958:	60 e1       	ldi	r22, 0x10	; 16
     95a:	72 e0       	ldi	r23, 0x02	; 2
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:291
        case 0x1000 : return "+Key:CD Play"; 
        case 0x2000 : return "+Key:CD Stop"; 
        case 0x4000 : return "+Key:CD Pause"; 

    }
    return "+Key:Unknonw"; 
     95c:	ce 01       	movw	r24, r28
     95e:	0e 94 1c 39 	call	0x7238	; 0x7238 <String::String(char const*)>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:292
}
     962:	ce 01       	movw	r24, r28
     964:	df 91       	pop	r29
     966:	cf 91       	pop	r28
     968:	08 95       	ret
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:267
    return result;
}

String KeyToString(int value) 
{
    switch (value)
     96a:	60 32       	cpi	r22, 0x20	; 32
     96c:	71 05       	cpc	r23, r1
     96e:	a1 f1       	breq	.+104    	; 0x9d8 <KeyToString(int)+0xae>
     970:	60 34       	cpi	r22, 0x40	; 64
     972:	71 05       	cpc	r23, r1
     974:	a1 f1       	breq	.+104    	; 0x9de <KeyToString(int)+0xb4>
     976:	60 31       	cpi	r22, 0x10	; 16
     978:	71 05       	cpc	r23, r1
     97a:	09 f0       	breq	.+2      	; 0x97e <KeyToString(int)+0x54>
     97c:	45 c0       	rjmp	.+138    	; 0xa08 <KeyToString(int)+0xde>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:275
        case 0x0001 : return "+Key:Reverse Mode";
        case 0x0002 : return "+Key:Rec Mode"; 
        case 0x0004 : return "+Key:Direction"; 

        case 0x0008 : return "+Key:Play";
        case 0x0010 : return "+Key:Rewind"; 
     97e:	69 e4       	ldi	r22, 0x49	; 73
     980:	72 e0       	ldi	r23, 0x02	; 2
     982:	ec cf       	rjmp	.-40     	; 0x95c <KeyToString(int)+0x32>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:267
    return result;
}

String KeyToString(int value) 
{
    switch (value)
     984:	61 15       	cp	r22, r1
     986:	88 e0       	ldi	r24, 0x08	; 8
     988:	78 07       	cpc	r23, r24
     98a:	a9 f1       	breq	.+106    	; 0x9f6 <KeyToString(int)+0xcc>
     98c:	74 f4       	brge	.+28     	; 0x9aa <KeyToString(int)+0x80>
     98e:	61 15       	cp	r22, r1
     990:	82 e0       	ldi	r24, 0x02	; 2
     992:	78 07       	cpc	r23, r24
     994:	51 f1       	breq	.+84     	; 0x9ea <KeyToString(int)+0xc0>
     996:	61 15       	cp	r22, r1
     998:	84 e0       	ldi	r24, 0x04	; 4
     99a:	78 07       	cpc	r23, r24
     99c:	49 f1       	breq	.+82     	; 0x9f0 <KeyToString(int)+0xc6>
     99e:	61 15       	cp	r22, r1
     9a0:	71 40       	sbci	r23, 0x01	; 1
     9a2:	91 f5       	brne	.+100    	; 0xa08 <KeyToString(int)+0xde>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:280
        case 0x0010 : return "+Key:Rewind"; 
        case 0x0020 : return "+Key:Forward"; 

        case 0x0040 : return "+Key:Stop/Clear"; 
        case 0x0080 : return "+Key:Pause"; 
        case 0x0100 : return "+Key:Rec"; 
     9a4:	6d e7       	ldi	r22, 0x7D	; 125
     9a6:	72 e0       	ldi	r23, 0x02	; 2
     9a8:	d9 cf       	rjmp	.-78     	; 0x95c <KeyToString(int)+0x32>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:267
    return result;
}

String KeyToString(int value) 
{
    switch (value)
     9aa:	61 15       	cp	r22, r1
     9ac:	80 e2       	ldi	r24, 0x20	; 32
     9ae:	78 07       	cpc	r23, r24
     9b0:	29 f1       	breq	.+74     	; 0x9fc <KeyToString(int)+0xd2>
     9b2:	61 15       	cp	r22, r1
     9b4:	80 e4       	ldi	r24, 0x40	; 64
     9b6:	78 07       	cpc	r23, r24
     9b8:	21 f1       	breq	.+72     	; 0xa02 <KeyToString(int)+0xd8>
     9ba:	61 15       	cp	r22, r1
     9bc:	70 41       	sbci	r23, 0x10	; 16
     9be:	21 f5       	brne	.+72     	; 0xa08 <KeyToString(int)+0xde>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:286

        case 0x0200 : return "+Key:Next"; 
        case 0x0400 : return "+Key:Previous";
        case 0x0800 : return "+Key:Program"; 

        case 0x1000 : return "+Key:CD Play"; 
     9c0:	6b ea       	ldi	r22, 0xAB	; 171
     9c2:	72 e0       	ldi	r23, 0x02	; 2
     9c4:	cb cf       	rjmp	.-106    	; 0x95c <KeyToString(int)+0x32>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:271
{
    switch (value)
    {

        case 0x0001 : return "+Key:Reverse Mode";
        case 0x0002 : return "+Key:Rec Mode"; 
     9c6:	62 e2       	ldi	r22, 0x22	; 34
     9c8:	72 e0       	ldi	r23, 0x02	; 2
     9ca:	c8 cf       	rjmp	.-112    	; 0x95c <KeyToString(int)+0x32>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:272
        case 0x0004 : return "+Key:Direction"; 
     9cc:	60 e3       	ldi	r22, 0x30	; 48
     9ce:	72 e0       	ldi	r23, 0x02	; 2
     9d0:	c5 cf       	rjmp	.-118    	; 0x95c <KeyToString(int)+0x32>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:274

        case 0x0008 : return "+Key:Play";
     9d2:	6f e3       	ldi	r22, 0x3F	; 63
     9d4:	72 e0       	ldi	r23, 0x02	; 2
     9d6:	c2 cf       	rjmp	.-124    	; 0x95c <KeyToString(int)+0x32>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:276
        case 0x0010 : return "+Key:Rewind"; 
        case 0x0020 : return "+Key:Forward"; 
     9d8:	65 e5       	ldi	r22, 0x55	; 85
     9da:	72 e0       	ldi	r23, 0x02	; 2
     9dc:	bf cf       	rjmp	.-130    	; 0x95c <KeyToString(int)+0x32>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:278

        case 0x0040 : return "+Key:Stop/Clear"; 
     9de:	62 e6       	ldi	r22, 0x62	; 98
     9e0:	72 e0       	ldi	r23, 0x02	; 2
     9e2:	bc cf       	rjmp	.-136    	; 0x95c <KeyToString(int)+0x32>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:279
        case 0x0080 : return "+Key:Pause"; 
     9e4:	62 e7       	ldi	r22, 0x72	; 114
     9e6:	72 e0       	ldi	r23, 0x02	; 2
     9e8:	b9 cf       	rjmp	.-142    	; 0x95c <KeyToString(int)+0x32>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:282
        case 0x0100 : return "+Key:Rec"; 

        case 0x0200 : return "+Key:Next"; 
     9ea:	66 e8       	ldi	r22, 0x86	; 134
     9ec:	72 e0       	ldi	r23, 0x02	; 2
     9ee:	b6 cf       	rjmp	.-148    	; 0x95c <KeyToString(int)+0x32>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:283
        case 0x0400 : return "+Key:Previous";
     9f0:	60 e9       	ldi	r22, 0x90	; 144
     9f2:	72 e0       	ldi	r23, 0x02	; 2
     9f4:	b3 cf       	rjmp	.-154    	; 0x95c <KeyToString(int)+0x32>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:284
        case 0x0800 : return "+Key:Program"; 
     9f6:	6e e9       	ldi	r22, 0x9E	; 158
     9f8:	72 e0       	ldi	r23, 0x02	; 2
     9fa:	b0 cf       	rjmp	.-160    	; 0x95c <KeyToString(int)+0x32>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:287

        case 0x1000 : return "+Key:CD Play"; 
        case 0x2000 : return "+Key:CD Stop"; 
     9fc:	68 eb       	ldi	r22, 0xB8	; 184
     9fe:	72 e0       	ldi	r23, 0x02	; 2
     a00:	ad cf       	rjmp	.-166    	; 0x95c <KeyToString(int)+0x32>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:288
        case 0x4000 : return "+Key:CD Pause"; 
     a02:	65 ec       	ldi	r22, 0xC5	; 197
     a04:	72 e0       	ldi	r23, 0x02	; 2
     a06:	aa cf       	rjmp	.-172    	; 0x95c <KeyToString(int)+0x32>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:291

    }
    return "+Key:Unknonw"; 
     a08:	63 ed       	ldi	r22, 0xD3	; 211
     a0a:	72 e0       	ldi	r23, 0x02	; 2
     a0c:	a7 cf       	rjmp	.-178    	; 0x95c <KeyToString(int)+0x32>

00000a0e <loop>:
loop():
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:296
}


void loop() 
{
     a0e:	0f 93       	push	r16
     a10:	1f 93       	push	r17
     a12:	cf 93       	push	r28
     a14:	df 93       	push	r29
     a16:	00 d0       	rcall	.+0      	; 0xa18 <loop+0xa>
     a18:	00 d0       	rcall	.+0      	; 0xa1a <loop+0xc>
     a1a:	00 d0       	rcall	.+0      	; 0xa1c <loop+0xe>
     a1c:	cd b7       	in	r28, 0x3d	; 61
     a1e:	de b7       	in	r29, 0x3e	; 62
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:301


 
    // Read Keys
    input.read();
     a20:	88 eb       	ldi	r24, 0xB8	; 184
     a22:	98 e0       	ldi	r25, 0x08	; 8
     a24:	0e 94 d2 13 	call	0x27a4	; 0x27a4 <TInputs::read()>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:303

    int dm = input.GetDemoMode();
     a28:	88 eb       	ldi	r24, 0xB8	; 184
     a2a:	98 e0       	ldi	r25, 0x08	; 8
     a2c:	0e 94 88 13 	call	0x2710	; 0x2710 <TInputs::GetDemoMode()>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:306
    // demo mode gives several options to check the function of the tape deck
    // this method is currently not equal to the original code
    if (dm > 0) {
     a30:	18 16       	cp	r1, r24
     a32:	19 06       	cpc	r1, r25
     a34:	6c f4       	brge	.+26     	; 0xa50 <loop+0x42>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:308
     
        switch (dm) { 
     a36:	82 30       	cpi	r24, 0x02	; 2
     a38:	91 05       	cpc	r25, r1
     a3a:	09 f4       	brne	.+2      	; 0xa3e <loop+0x30>
     a3c:	c3 c0       	rjmp	.+390    	; 0xbc4 <loop+0x1b6>
     a3e:	0c f0       	brlt	.+2      	; 0xa42 <loop+0x34>
     a40:	76 c0       	rjmp	.+236    	; 0xb2e <loop+0x120>
     a42:	01 97       	sbiw	r24, 0x01	; 1
     a44:	09 f4       	brne	.+2      	; 0xa48 <loop+0x3a>
     a46:	87 c0       	rjmp	.+270    	; 0xb56 <loop+0x148>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:343
                lcd.Clear();
                input.DisableDemoMode();
                break;

        }
        input.pressedKeys = 0;
     a48:	10 92 b9 08 	sts	0x08B9, r1	; 0x8008b9 <input+0x1>
     a4c:	10 92 b8 08 	sts	0x08B8, r1	; 0x8008b8 <input>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:351



    // we are only considering one key at a time
    // keys Play/Stop/Pause on tape deck
    switch(input.pressedKeys)
     a50:	80 91 b8 08 	lds	r24, 0x08B8	; 0x8008b8 <input>
     a54:	90 91 b9 08 	lds	r25, 0x08B9	; 0x8008b9 <input+0x1>
     a58:	80 38       	cpi	r24, 0x80	; 128
     a5a:	91 05       	cpc	r25, r1
     a5c:	09 f4       	brne	.+2      	; 0xa60 <loop+0x52>
     a5e:	88 c1       	rjmp	.+784    	; 0xd70 <loop+0x362>
     a60:	0c f0       	brlt	.+2      	; 0xa64 <loop+0x56>
     a62:	0f c1       	rjmp	.+542    	; 0xc82 <loop+0x274>
     a64:	88 30       	cpi	r24, 0x08	; 8
     a66:	91 05       	cpc	r25, r1
     a68:	09 f4       	brne	.+2      	; 0xa6c <loop+0x5e>
     a6a:	71 c1       	rjmp	.+738    	; 0xd4e <loop+0x340>
     a6c:	0c f0       	brlt	.+2      	; 0xa70 <loop+0x62>
     a6e:	f7 c0       	rjmp	.+494    	; 0xc5e <loop+0x250>
     a70:	82 30       	cpi	r24, 0x02	; 2
     a72:	91 05       	cpc	r25, r1
     a74:	09 f4       	brne	.+2      	; 0xa78 <loop+0x6a>
     a76:	b3 c1       	rjmp	.+870    	; 0xdde <loop+0x3d0>
     a78:	84 30       	cpi	r24, 0x04	; 4
     a7a:	91 05       	cpc	r25, r1
     a7c:	09 f4       	brne	.+2      	; 0xa80 <loop+0x72>
     a7e:	f9 c0       	rjmp	.+498    	; 0xc72 <loop+0x264>
     a80:	01 97       	sbiw	r24, 0x01	; 1
     a82:	09 f4       	brne	.+2      	; 0xa86 <loop+0x78>
     a84:	bf c1       	rjmp	.+894    	; 0xe04 <loop+0x3f6>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:416
            break;
    }


    // other tape deck keys only if record is not active
   if (tape.ReadyForInput()) {
     a86:	88 e9       	ldi	r24, 0x98	; 152
     a88:	97 e0       	ldi	r25, 0x07	; 7
     a8a:	0e 94 76 19 	call	0x32ec	; 0x32ec <TTapeController::ReadyForInput()>
     a8e:	88 23       	and	r24, r24
     a90:	89 f0       	breq	.+34     	; 0xab4 <loop+0xa6>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:417
        switch(input.pressedKeys)
     a92:	80 91 b8 08 	lds	r24, 0x08B8	; 0x8008b8 <input>
     a96:	90 91 b9 08 	lds	r25, 0x08B9	; 0x8008b9 <input+0x1>
     a9a:	80 32       	cpi	r24, 0x20	; 32
     a9c:	91 05       	cpc	r25, r1
     a9e:	09 f4       	brne	.+2      	; 0xaa2 <loop+0x94>
     aa0:	e1 c1       	rjmp	.+962    	; 0xe64 <loop+0x456>
     aa2:	0c f0       	brlt	.+2      	; 0xaa6 <loop+0x98>
     aa4:	bc c1       	rjmp	.+888    	; 0xe1e <loop+0x410>
     aa6:	84 30       	cpi	r24, 0x04	; 4
     aa8:	91 05       	cpc	r25, r1
     aaa:	09 f4       	brne	.+2      	; 0xaae <loop+0xa0>
     aac:	26 c2       	rjmp	.+1100   	; 0xefa <loop+0x4ec>
     aae:	40 97       	sbiw	r24, 0x10	; 16
     ab0:	09 f4       	brne	.+2      	; 0xab4 <loop+0xa6>
     ab2:	fb c1       	rjmp	.+1014   	; 0xeaa <loop+0x49c>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:474
    }
      



    if (tape.AutoRestart && !tape.SearchTrack && input.pressedKeys != input.CASS_FORWARD && input.pressedKeys != input.CASS_REWIND) {
     ab4:	80 91 9a 07 	lds	r24, 0x079A	; 0x80079a <tape+0x2>
     ab8:	88 23       	and	r24, r24
     aba:	b9 f0       	breq	.+46     	; 0xaea <loop+0xdc>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:474 (discriminator 1)
     abc:	80 91 9b 07 	lds	r24, 0x079B	; 0x80079b <tape+0x3>
     ac0:	81 11       	cpse	r24, r1
     ac2:	13 c0       	rjmp	.+38     	; 0xaea <loop+0xdc>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:474 (discriminator 2)
     ac4:	80 91 b8 08 	lds	r24, 0x08B8	; 0x8008b8 <input>
     ac8:	90 91 b9 08 	lds	r25, 0x08B9	; 0x8008b9 <input+0x1>
     acc:	80 32       	cpi	r24, 0x20	; 32
     ace:	91 05       	cpc	r25, r1
     ad0:	61 f0       	breq	.+24     	; 0xaea <loop+0xdc>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:474 (discriminator 3)
     ad2:	40 97       	sbiw	r24, 0x10	; 16
     ad4:	51 f0       	breq	.+20     	; 0xaea <loop+0xdc>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:476
        #ifdef DEBUG
            Serial.println(">Autorestart");
     ad6:	60 ee       	ldi	r22, 0xE0	; 224
     ad8:	72 e0       	ldi	r23, 0x02	; 2
     ada:	82 ed       	ldi	r24, 0xD2	; 210
     adc:	9a e0       	ldi	r25, 0x0A	; 10
     ade:	0e 94 e9 37 	call	0x6fd2	; 0x6fd2 <Print::println(char const*)>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:478
        #endif
        tape.Play();
     ae2:	88 e9       	ldi	r24, 0x98	; 152
     ae4:	97 e0       	ldi	r25, 0x07	; 7
     ae6:	0e 94 1b 1c 	call	0x3836	; 0x3836 <TTapeController::Play()>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:500
            delay(2000);
        }
        */
    #endif   

    input.pressedKeys = 0;
     aea:	10 92 b9 08 	sts	0x08B9, r1	; 0x8008b9 <input+0x1>
     aee:	10 92 b8 08 	sts	0x08B8, r1	; 0x8008b8 <input>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:501
    tape.Update();
     af2:	88 e9       	ldi	r24, 0x98	; 152
     af4:	97 e0       	ldi	r25, 0x07	; 7
     af6:	0e 94 9c 22 	call	0x4538	; 0x4538 <TTapeController::Update()>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:502
    cd.Update();
     afa:	8a ea       	ldi	r24, 0xAA	; 170
     afc:	98 e0       	ldi	r25, 0x08	; 8
     afe:	0e 94 39 08 	call	0x1072	; 0x1072 <TCDController::Update()>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:503
    tape.Update();
     b02:	88 e9       	ldi	r24, 0x98	; 152
     b04:	97 e0       	ldi	r25, 0x07	; 7
     b06:	0e 94 9c 22 	call	0x4538	; 0x4538 <TTapeController::Update()>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:506
    

    cycle++;
     b0a:	80 91 96 07 	lds	r24, 0x0796	; 0x800796 <cycle>
     b0e:	90 91 97 07 	lds	r25, 0x0797	; 0x800797 <cycle+0x1>
     b12:	01 96       	adiw	r24, 0x01	; 1
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:507
    if (cycle > 1) {
     b14:	82 30       	cpi	r24, 0x02	; 2
     b16:	91 05       	cpc	r25, r1
     b18:	0c f0       	brlt	.+2      	; 0xb1c <loop+0x10e>
     b1a:	fe c1       	rjmp	.+1020   	; 0xf18 <loop+0x50a>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:506
    tape.Update();
    cd.Update();
    tape.Update();
    

    cycle++;
     b1c:	90 93 97 07 	sts	0x0797, r25	; 0x800797 <cycle+0x1>
     b20:	80 93 96 07 	sts	0x0796, r24	; 0x800796 <cycle>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:536
        
        lcd.Update();
        
        
    }
    counter.Update();
     b24:	88 e5       	ldi	r24, 0x58	; 88
     b26:	98 e0       	ldi	r25, 0x08	; 8
     b28:	0e 94 b9 0a 	call	0x1572	; 0x1572 <TCounter::Update()>
     b2c:	3b c0       	rjmp	.+118    	; 0xba4 <loop+0x196>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:308
    int dm = input.GetDemoMode();
    // demo mode gives several options to check the function of the tape deck
    // this method is currently not equal to the original code
    if (dm > 0) {
     
        switch (dm) { 
     b2e:	83 30       	cpi	r24, 0x03	; 3
     b30:	91 05       	cpc	r25, r1
     b32:	09 f4       	brne	.+2      	; 0xb36 <loop+0x128>
     b34:	68 c0       	rjmp	.+208    	; 0xc06 <loop+0x1f8>
     b36:	04 97       	sbiw	r24, 0x04	; 4
     b38:	09 f0       	breq	.+2      	; 0xb3c <loop+0x12e>
     b3a:	86 cf       	rjmp	.-244    	; 0xa48 <loop+0x3a>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:337
                tape.WhiteLeverReleaseTime = counter.GetWhiteLeverReleaseTime();
                lcd.ShowDigit(3);
                lcd.Update();               
                break;
            case 4:
                counter.Reset();
     b3c:	88 e5       	ldi	r24, 0x58	; 88
     b3e:	98 e0       	ldi	r25, 0x08	; 8
     b40:	0e 94 7d 09 	call	0x12fa	; 0x12fa <TCounter::Reset()>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:338
                lcd.Clear();
     b44:	8c ec       	ldi	r24, 0xCC	; 204
     b46:	98 e0       	ldi	r25, 0x08	; 8
     b48:	0e 94 5a 0b 	call	0x16b4	; 0x16b4 <TDisplay::Clear()>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:339
                input.DisableDemoMode();
     b4c:	88 eb       	ldi	r24, 0xB8	; 184
     b4e:	98 e0       	ldi	r25, 0x08	; 8
     b50:	0e 94 84 13 	call	0x2708	; 0x2708 <TInputs::DisableDemoMode()>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:340
                break;
     b54:	79 cf       	rjmp	.-270    	; 0xa48 <loop+0x3a>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:310
    // this method is currently not equal to the original code
    if (dm > 0) {
     
        switch (dm) { 
           case 1: 
                tape.Reset();          
     b56:	88 e9       	ldi	r24, 0x98	; 152
     b58:	97 e0       	ldi	r25, 0x07	; 7
     b5a:	0e 94 fe 1e 	call	0x3dfc	; 0x3dfc <TTapeController::Reset()>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:311
                if (input.pressedKeys != 0 && input.pressedKeys != input.CD_PLAY) {
     b5e:	80 91 b8 08 	lds	r24, 0x08B8	; 0x8008b8 <input>
     b62:	90 91 b9 08 	lds	r25, 0x08B9	; 0x8008b9 <input+0x1>
     b66:	9f 7e       	andi	r25, 0xEF	; 239
     b68:	89 2b       	or	r24, r25
     b6a:	39 f1       	breq	.+78     	; 0xbba <loop+0x1ac>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:312
                    lcd.ShowNone();
     b6c:	8c ec       	ldi	r24, 0xCC	; 204
     b6e:	98 e0       	ldi	r25, 0x08	; 8
     b70:	0e 94 0d 0e 	call	0x1c1a	; 0x1c1a <TDisplay::ShowNone()>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:313
                    lcd.ShowNone();
     b74:	8c ec       	ldi	r24, 0xCC	; 204
     b76:	98 e0       	ldi	r25, 0x08	; 8
     b78:	0e 94 0d 0e 	call	0x1c1a	; 0x1c1a <TDisplay::ShowNone()>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:314
                    lcd.ShowNone();
     b7c:	8c ec       	ldi	r24, 0xCC	; 204
     b7e:	98 e0       	ldi	r25, 0x08	; 8
     b80:	0e 94 0d 0e 	call	0x1c1a	; 0x1c1a <TDisplay::ShowNone()>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:315
                    delay(500);
     b84:	64 ef       	ldi	r22, 0xF4	; 244
     b86:	71 e0       	ldi	r23, 0x01	; 1
     b88:	80 e0       	ldi	r24, 0x00	; 0
     b8a:	90 e0       	ldi	r25, 0x00	; 0
     b8c:	0e 94 75 34 	call	0x68ea	; 0x68ea <delay>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:318
                }
                else lcd.ShowAll();
                tape.Update();
     b90:	88 e9       	ldi	r24, 0x98	; 152
     b92:	97 e0       	ldi	r25, 0x07	; 7
     b94:	0e 94 9c 22 	call	0x4538	; 0x4538 <TTapeController::Update()>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:319
                delay(100);
     b98:	64 e6       	ldi	r22, 0x64	; 100
     b9a:	70 e0       	ldi	r23, 0x00	; 0
     b9c:	80 e0       	ldi	r24, 0x00	; 0
     b9e:	90 e0       	ldi	r25, 0x00	; 0
     ba0:	0e 94 75 34 	call	0x68ea	; 0x68ea <delay>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:540
    }
    counter.Update();
  


}
     ba4:	26 96       	adiw	r28, 0x06	; 6
     ba6:	0f b6       	in	r0, 0x3f	; 63
     ba8:	f8 94       	cli
     baa:	de bf       	out	0x3e, r29	; 62
     bac:	0f be       	out	0x3f, r0	; 63
     bae:	cd bf       	out	0x3d, r28	; 61
     bb0:	df 91       	pop	r29
     bb2:	cf 91       	pop	r28
     bb4:	1f 91       	pop	r17
     bb6:	0f 91       	pop	r16
     bb8:	08 95       	ret
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:317
                    lcd.ShowNone();
                    lcd.ShowNone();
                    lcd.ShowNone();
                    delay(500);
                }
                else lcd.ShowAll();
     bba:	8c ec       	ldi	r24, 0xCC	; 204
     bbc:	98 e0       	ldi	r25, 0x08	; 8
     bbe:	0e 94 eb 0d 	call	0x1bd6	; 0x1bd6 <TDisplay::ShowAll()>
     bc2:	e6 cf       	rjmp	.-52     	; 0xb90 <loop+0x182>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:323
                tape.Update();
                delay(100);
                return;

            case 2:
                delay(150);
     bc4:	66 e9       	ldi	r22, 0x96	; 150
     bc6:	70 e0       	ldi	r23, 0x00	; 0
     bc8:	80 e0       	ldi	r24, 0x00	; 0
     bca:	90 e0       	ldi	r25, 0x00	; 0
     bcc:	0e 94 75 34 	call	0x68ea	; 0x68ea <delay>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:324
                lcd.ShowDigit(2);
     bd0:	62 e0       	ldi	r22, 0x02	; 2
     bd2:	70 e0       	ldi	r23, 0x00	; 0
     bd4:	8c ec       	ldi	r24, 0xCC	; 204
     bd6:	98 e0       	ldi	r25, 0x08	; 8
     bd8:	0e 94 0d 0b 	call	0x161a	; 0x161a <TDisplay::ShowDigit(int)>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:325
                lcd.Update();
     bdc:	8c ec       	ldi	r24, 0xCC	; 204
     bde:	98 e0       	ldi	r25, 0x08	; 8
     be0:	0e 94 16 10 	call	0x202c	; 0x202c <TDisplay::Update()>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:326
                counter.ConfigScreenPosition(true, input.ReadKeySet1(), input.ReadKeySet2());
     be4:	88 eb       	ldi	r24, 0xB8	; 184
     be6:	98 e0       	ldi	r25, 0x08	; 8
     be8:	0e 94 07 15 	call	0x2a0e	; 0x2a0e <TInputs::ReadKeySet2()>
     bec:	8c 01       	movw	r16, r24
     bee:	88 eb       	ldi	r24, 0xB8	; 184
     bf0:	98 e0       	ldi	r25, 0x08	; 8
     bf2:	0e 94 f4 14 	call	0x29e8	; 0x29e8 <TInputs::ReadKeySet1()>
     bf6:	98 01       	movw	r18, r16
     bf8:	ac 01       	movw	r20, r24
     bfa:	61 e0       	ldi	r22, 0x01	; 1
     bfc:	88 e5       	ldi	r24, 0x58	; 88
     bfe:	98 e0       	ldi	r25, 0x08	; 8
     c00:	0e 94 25 09 	call	0x124a	; 0x124a <TCounter::ConfigScreenPosition(bool, int, int)>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:327
                break;
     c04:	21 cf       	rjmp	.-446    	; 0xa48 <loop+0x3a>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:329
            case 3:
                delay(150);
     c06:	66 e9       	ldi	r22, 0x96	; 150
     c08:	70 e0       	ldi	r23, 0x00	; 0
     c0a:	80 e0       	ldi	r24, 0x00	; 0
     c0c:	90 e0       	ldi	r25, 0x00	; 0
     c0e:	0e 94 75 34 	call	0x68ea	; 0x68ea <delay>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:330
                counter.ConfigScreenPosition(false, 0, 0);
     c12:	30 e0       	ldi	r19, 0x00	; 0
     c14:	20 e0       	ldi	r18, 0x00	; 0
     c16:	50 e0       	ldi	r21, 0x00	; 0
     c18:	40 e0       	ldi	r20, 0x00	; 0
     c1a:	60 e0       	ldi	r22, 0x00	; 0
     c1c:	88 e5       	ldi	r24, 0x58	; 88
     c1e:	98 e0       	ldi	r25, 0x08	; 8
     c20:	0e 94 25 09 	call	0x124a	; 0x124a <TCounter::ConfigScreenPosition(bool, int, int)>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:331
                counter.SetWhiteLeverReleaseTime(true, input.ReadKeySet2());
     c24:	88 eb       	ldi	r24, 0xB8	; 184
     c26:	98 e0       	ldi	r25, 0x08	; 8
     c28:	0e 94 07 15 	call	0x2a0e	; 0x2a0e <TInputs::ReadKeySet2()>
     c2c:	ac 01       	movw	r20, r24
     c2e:	61 e0       	ldi	r22, 0x01	; 1
     c30:	88 e5       	ldi	r24, 0x58	; 88
     c32:	98 e0       	ldi	r25, 0x08	; 8
     c34:	0e 94 e6 08 	call	0x11cc	; 0x11cc <TCounter::SetWhiteLeverReleaseTime(bool, int)>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:332
                tape.WhiteLeverReleaseTime = counter.GetWhiteLeverReleaseTime();
     c38:	88 e5       	ldi	r24, 0x58	; 88
     c3a:	98 e0       	ldi	r25, 0x08	; 8
     c3c:	0e 94 e2 08 	call	0x11c4	; 0x11c4 <TCounter::GetWhiteLeverReleaseTime()>
     c40:	90 93 9d 07 	sts	0x079D, r25	; 0x80079d <tape+0x5>
     c44:	80 93 9c 07 	sts	0x079C, r24	; 0x80079c <tape+0x4>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:333
                lcd.ShowDigit(3);
     c48:	63 e0       	ldi	r22, 0x03	; 3
     c4a:	70 e0       	ldi	r23, 0x00	; 0
     c4c:	8c ec       	ldi	r24, 0xCC	; 204
     c4e:	98 e0       	ldi	r25, 0x08	; 8
     c50:	0e 94 0d 0b 	call	0x161a	; 0x161a <TDisplay::ShowDigit(int)>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:334
                lcd.Update();               
     c54:	8c ec       	ldi	r24, 0xCC	; 204
     c56:	98 e0       	ldi	r25, 0x08	; 8
     c58:	0e 94 16 10 	call	0x202c	; 0x202c <TDisplay::Update()>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:335
                break;
     c5c:	f5 ce       	rjmp	.-534    	; 0xa48 <loop+0x3a>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:351



    // we are only considering one key at a time
    // keys Play/Stop/Pause on tape deck
    switch(input.pressedKeys)
     c5e:	80 32       	cpi	r24, 0x20	; 32
     c60:	91 05       	cpc	r25, r1
     c62:	39 f0       	breq	.+14     	; 0xc72 <loop+0x264>
     c64:	80 34       	cpi	r24, 0x40	; 64
     c66:	91 05       	cpc	r25, r1
     c68:	09 f4       	brne	.+2      	; 0xc6c <loop+0x25e>
     c6a:	a2 c0       	rjmp	.+324    	; 0xdb0 <loop+0x3a2>
     c6c:	40 97       	sbiw	r24, 0x10	; 16
     c6e:	09 f0       	breq	.+2      	; 0xc72 <loop+0x264>
     c70:	0a cf       	rjmp	.-492    	; 0xa86 <loop+0x78>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:410
        case input.CASS_PREV:
        case input.CASS_FORWARD:
        case input.CASS_REWIND:
        case input.CASS_PROG:
        case input.CASS_DIRECTION:
            if (tape.IsOnRecord()) lcd.ShowError(0);
     c72:	88 e9       	ldi	r24, 0x98	; 152
     c74:	97 e0       	ldi	r25, 0x07	; 7
     c76:	0e 94 3e 15 	call	0x2a7c	; 0x2a7c <TTapeController::IsOnRecord()>
     c7a:	88 23       	and	r24, r24
     c7c:	09 f4       	brne	.+2      	; 0xc80 <loop+0x272>
     c7e:	03 cf       	rjmp	.-506    	; 0xa86 <loop+0x78>
     c80:	8b c0       	rjmp	.+278    	; 0xd98 <loop+0x38a>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:351



    // we are only considering one key at a time
    // keys Play/Stop/Pause on tape deck
    switch(input.pressedKeys)
     c82:	81 15       	cp	r24, r1
     c84:	28 e0       	ldi	r18, 0x08	; 8
     c86:	92 07       	cpc	r25, r18
     c88:	a1 f3       	breq	.-24     	; 0xc72 <loop+0x264>
     c8a:	fc f4       	brge	.+62     	; 0xcca <loop+0x2bc>
     c8c:	81 15       	cp	r24, r1
     c8e:	22 e0       	ldi	r18, 0x02	; 2
     c90:	92 07       	cpc	r25, r18
     c92:	79 f3       	breq	.-34     	; 0xc72 <loop+0x264>
     c94:	81 15       	cp	r24, r1
     c96:	24 e0       	ldi	r18, 0x04	; 4
     c98:	92 07       	cpc	r25, r18
     c9a:	59 f3       	breq	.-42     	; 0xc72 <loop+0x264>
     c9c:	81 15       	cp	r24, r1
     c9e:	91 40       	sbci	r25, 0x01	; 1
     ca0:	09 f0       	breq	.+2      	; 0xca4 <loop+0x296>
     ca2:	f1 ce       	rjmp	.-542    	; 0xa86 <loop+0x78>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:395
            if (tape.PlayProgramm || tape.Programming || tape.IsRecording()) lcd.ShowError(0);
            else tape.ToggleRecordMode();
            break;
            
        case input.CASS_REC:
            if (tape.PlayProgramm || tape.Programming || tape.IsRecording()) lcd.ShowError(0);
     ca4:	80 91 98 07 	lds	r24, 0x0798	; 0x800798 <tape>
     ca8:	81 11       	cpse	r24, r1
     caa:	76 c0       	rjmp	.+236    	; 0xd98 <loop+0x38a>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:395 (discriminator 2)
     cac:	80 91 99 07 	lds	r24, 0x0799	; 0x800799 <tape+0x1>
     cb0:	81 11       	cpse	r24, r1
     cb2:	72 c0       	rjmp	.+228    	; 0xd98 <loop+0x38a>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:395 (discriminator 4)
     cb4:	88 e9       	ldi	r24, 0x98	; 152
     cb6:	97 e0       	ldi	r25, 0x07	; 7
     cb8:	0e 94 35 15 	call	0x2a6a	; 0x2a6a <TTapeController::IsRecording()>
     cbc:	81 11       	cpse	r24, r1
     cbe:	6c c0       	rjmp	.+216    	; 0xd98 <loop+0x38a>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:396
            else tape.StartRecordMode();
     cc0:	88 e9       	ldi	r24, 0x98	; 152
     cc2:	97 e0       	ldi	r25, 0x07	; 7
     cc4:	0e 94 dd 1d 	call	0x3bba	; 0x3bba <TTapeController::StartRecordMode()>
     cc8:	de ce       	rjmp	.-580    	; 0xa86 <loop+0x78>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:351



    // we are only considering one key at a time
    // keys Play/Stop/Pause on tape deck
    switch(input.pressedKeys)
     cca:	81 15       	cp	r24, r1
     ccc:	20 e2       	ldi	r18, 0x20	; 32
     cce:	92 07       	cpc	r25, r18
     cd0:	91 f1       	breq	.+100    	; 0xd36 <loop+0x328>
     cd2:	81 15       	cp	r24, r1
     cd4:	20 e4       	ldi	r18, 0x40	; 64
     cd6:	92 07       	cpc	r25, r18
     cd8:	d1 f0       	breq	.+52     	; 0xd0e <loop+0x300>
     cda:	81 15       	cp	r24, r1
     cdc:	90 41       	sbci	r25, 0x10	; 16
     cde:	09 f0       	breq	.+2      	; 0xce2 <loop+0x2d4>
     ce0:	d2 ce       	rjmp	.-604    	; 0xa86 <loop+0x78>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:355
    {
        // CD Player
        case input.CD_PLAY:
            cd.Play();
     ce2:	8a ea       	ldi	r24, 0xAA	; 170
     ce4:	98 e0       	ldi	r25, 0x08	; 8
     ce6:	0e 94 20 08 	call	0x1040	; 0x1040 <TCDController::Play()>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:356
            if (tape.IsOnSyncRecord() || tape.IsOnAutoRecord()) tape.Play();
     cea:	88 e9       	ldi	r24, 0x98	; 152
     cec:	97 e0       	ldi	r25, 0x07	; 7
     cee:	0e 94 55 15 	call	0x2aaa	; 0x2aaa <TTapeController::IsOnSyncRecord()>
     cf2:	81 11       	cpse	r24, r1
     cf4:	07 c0       	rjmp	.+14     	; 0xd04 <loop+0x2f6>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:356 (discriminator 2)
     cf6:	88 e9       	ldi	r24, 0x98	; 152
     cf8:	97 e0       	ldi	r25, 0x07	; 7
     cfa:	0e 94 43 15 	call	0x2a86	; 0x2a86 <TTapeController::IsOnAutoRecord()>
     cfe:	88 23       	and	r24, r24
     d00:	09 f4       	brne	.+2      	; 0xd04 <loop+0x2f6>
     d02:	c1 ce       	rjmp	.-638    	; 0xa86 <loop+0x78>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:356 (discriminator 3)
     d04:	88 e9       	ldi	r24, 0x98	; 152
     d06:	97 e0       	ldi	r25, 0x07	; 7
     d08:	0e 94 1b 1c 	call	0x3836	; 0x3836 <TTapeController::Play()>
     d0c:	bc ce       	rjmp	.-648    	; 0xa86 <loop+0x78>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:360
            break;
            
        case input.CD_PAUSE:
            cd.Pause(tape.IsOnAutoRecord()); 
     d0e:	88 e9       	ldi	r24, 0x98	; 152
     d10:	97 e0       	ldi	r25, 0x07	; 7
     d12:	0e 94 43 15 	call	0x2a86	; 0x2a86 <TTapeController::IsOnAutoRecord()>
     d16:	68 2f       	mov	r22, r24
     d18:	8a ea       	ldi	r24, 0xAA	; 170
     d1a:	98 e0       	ldi	r25, 0x08	; 8
     d1c:	0e 94 91 08 	call	0x1122	; 0x1122 <TCDController::Pause(bool)>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:361
            if (tape.IsOnAutoRecord() || tape.IsOnSyncRecord()) tape.PauseAfterFourSeconds();    
     d20:	88 e9       	ldi	r24, 0x98	; 152
     d22:	97 e0       	ldi	r25, 0x07	; 7
     d24:	0e 94 43 15 	call	0x2a86	; 0x2a86 <TTapeController::IsOnAutoRecord()>
     d28:	88 23       	and	r24, r24
     d2a:	51 f0       	breq	.+20     	; 0xd40 <loop+0x332>
     d2c:	88 e9       	ldi	r24, 0x98	; 152
     d2e:	97 e0       	ldi	r25, 0x07	; 7
     d30:	0e 94 8e 19 	call	0x331c	; 0x331c <TTapeController::PauseAfterFourSeconds()>
     d34:	a8 ce       	rjmp	.-688    	; 0xa86 <loop+0x78>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:366

            break;
            
        case input.CD_STOP:
            cd.Stop();
     d36:	8a ea       	ldi	r24, 0xAA	; 170
     d38:	98 e0       	ldi	r25, 0x08	; 8
     d3a:	0e 94 bb 08 	call	0x1176	; 0x1176 <TCDController::Stop()>
     d3e:	f0 cf       	rjmp	.-32     	; 0xd20 <loop+0x312>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:367 (discriminator 2)
            if (tape.IsOnAutoRecord() || tape.IsOnSyncRecord()) tape.PauseAfterFourSeconds();      
     d40:	88 e9       	ldi	r24, 0x98	; 152
     d42:	97 e0       	ldi	r25, 0x07	; 7
     d44:	0e 94 55 15 	call	0x2aaa	; 0x2aaa <TTapeController::IsOnSyncRecord()>
     d48:	81 11       	cpse	r24, r1
     d4a:	f0 cf       	rjmp	.-32     	; 0xd2c <loop+0x31e>
     d4c:	9c ce       	rjmp	.-712    	; 0xa86 <loop+0x78>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:372
            break;

        // Tape Deck
        case input.CASS_PLAY:
            if (tape.PlayProgramm || tape.IsOnSyncRecord() || tape.IsOnAutoRecord()) break;
     d4e:	80 91 98 07 	lds	r24, 0x0798	; 0x800798 <tape>
     d52:	81 11       	cpse	r24, r1
     d54:	98 ce       	rjmp	.-720    	; 0xa86 <loop+0x78>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:372 (discriminator 2)
     d56:	88 e9       	ldi	r24, 0x98	; 152
     d58:	97 e0       	ldi	r25, 0x07	; 7
     d5a:	0e 94 55 15 	call	0x2aaa	; 0x2aaa <TTapeController::IsOnSyncRecord()>
     d5e:	81 11       	cpse	r24, r1
     d60:	92 ce       	rjmp	.-732    	; 0xa86 <loop+0x78>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:372 (discriminator 4)
     d62:	88 e9       	ldi	r24, 0x98	; 152
     d64:	97 e0       	ldi	r25, 0x07	; 7
     d66:	0e 94 43 15 	call	0x2a86	; 0x2a86 <TTapeController::IsOnAutoRecord()>
     d6a:	81 11       	cpse	r24, r1
     d6c:	8c ce       	rjmp	.-744    	; 0xa86 <loop+0x78>
     d6e:	ca cf       	rjmp	.-108    	; 0xd04 <loop+0x2f6>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:377
            tape.Play(); 
            break;

        case input.CASS_PAUSE:
            if (tape.IsOnSyncRecord() || tape.IsOnAutoRecord()) break; 
     d70:	88 e9       	ldi	r24, 0x98	; 152
     d72:	97 e0       	ldi	r25, 0x07	; 7
     d74:	0e 94 55 15 	call	0x2aaa	; 0x2aaa <TTapeController::IsOnSyncRecord()>
     d78:	81 11       	cpse	r24, r1
     d7a:	85 ce       	rjmp	.-758    	; 0xa86 <loop+0x78>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:377 (discriminator 2)
     d7c:	88 e9       	ldi	r24, 0x98	; 152
     d7e:	97 e0       	ldi	r25, 0x07	; 7
     d80:	0e 94 43 15 	call	0x2a86	; 0x2a86 <TTapeController::IsOnAutoRecord()>
     d84:	81 11       	cpse	r24, r1
     d86:	7f ce       	rjmp	.-770    	; 0xa86 <loop+0x78>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:378
            if (tape.PlayProgramm || tape.Programming) lcd.ShowError(0);
     d88:	80 91 98 07 	lds	r24, 0x0798	; 0x800798 <tape>
     d8c:	81 11       	cpse	r24, r1
     d8e:	04 c0       	rjmp	.+8      	; 0xd98 <loop+0x38a>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:378 (discriminator 2)
     d90:	80 91 99 07 	lds	r24, 0x0799	; 0x800799 <tape+0x1>
     d94:	88 23       	and	r24, r24
     d96:	39 f0       	breq	.+14     	; 0xda6 <loop+0x398>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:378 (discriminator 3)
     d98:	70 e0       	ldi	r23, 0x00	; 0
     d9a:	60 e0       	ldi	r22, 0x00	; 0
     d9c:	8c ec       	ldi	r24, 0xCC	; 204
     d9e:	98 e0       	ldi	r25, 0x08	; 8
     da0:	0e 94 52 0b 	call	0x16a4	; 0x16a4 <TDisplay::ShowError(short)>
     da4:	70 ce       	rjmp	.-800    	; 0xa86 <loop+0x78>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:379
            else tape.Pause();
     da6:	88 e9       	ldi	r24, 0x98	; 152
     da8:	97 e0       	ldi	r25, 0x07	; 7
     daa:	0e 94 28 1a 	call	0x3450	; 0x3450 <TTapeController::Pause()>
     dae:	6b ce       	rjmp	.-810    	; 0xa86 <loop+0x78>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:384
            break;

        case input.CASS_STOP:
            
            if (tape.Programming) tape.ClearProgramm();
     db0:	80 91 99 07 	lds	r24, 0x0799	; 0x800799 <tape+0x1>
     db4:	88 23       	and	r24, r24
     db6:	29 f0       	breq	.+10     	; 0xdc2 <loop+0x3b4>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:384 (discriminator 1)
     db8:	88 e9       	ldi	r24, 0x98	; 152
     dba:	97 e0       	ldi	r25, 0x07	; 7
     dbc:	0e 94 d5 15 	call	0x2baa	; 0x2baa <TTapeController::ClearProgramm()>
     dc0:	62 ce       	rjmp	.-828    	; 0xa86 <loop+0x78>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:385
            else if (tape.PlayProgramm) tape.EndProgramm();
     dc2:	80 91 98 07 	lds	r24, 0x0798	; 0x800798 <tape>
     dc6:	88 23       	and	r24, r24
     dc8:	29 f0       	breq	.+10     	; 0xdd4 <loop+0x3c6>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:385 (discriminator 1)
     dca:	88 e9       	ldi	r24, 0x98	; 152
     dcc:	97 e0       	ldi	r25, 0x07	; 7
     dce:	0e 94 41 21 	call	0x4282	; 0x4282 <TTapeController::EndProgramm()>
     dd2:	59 ce       	rjmp	.-846    	; 0xa86 <loop+0x78>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:386
            else tape.Stop();
     dd4:	88 e9       	ldi	r24, 0x98	; 152
     dd6:	97 e0       	ldi	r25, 0x07	; 7
     dd8:	0e 94 4b 1e 	call	0x3c96	; 0x3c96 <TTapeController::Stop()>
     ddc:	54 ce       	rjmp	.-856    	; 0xa86 <loop+0x78>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:390
            break;

        case input.CASS_REC_MODE:
            if (tape.PlayProgramm || tape.Programming || tape.IsRecording()) lcd.ShowError(0);
     dde:	80 91 98 07 	lds	r24, 0x0798	; 0x800798 <tape>
     de2:	81 11       	cpse	r24, r1
     de4:	d9 cf       	rjmp	.-78     	; 0xd98 <loop+0x38a>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:390 (discriminator 2)
     de6:	80 91 99 07 	lds	r24, 0x0799	; 0x800799 <tape+0x1>
     dea:	81 11       	cpse	r24, r1
     dec:	d5 cf       	rjmp	.-86     	; 0xd98 <loop+0x38a>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:390 (discriminator 4)
     dee:	88 e9       	ldi	r24, 0x98	; 152
     df0:	97 e0       	ldi	r25, 0x07	; 7
     df2:	0e 94 35 15 	call	0x2a6a	; 0x2a6a <TTapeController::IsRecording()>
     df6:	81 11       	cpse	r24, r1
     df8:	cf cf       	rjmp	.-98     	; 0xd98 <loop+0x38a>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:391
            else tape.ToggleRecordMode();
     dfa:	88 e9       	ldi	r24, 0x98	; 152
     dfc:	97 e0       	ldi	r25, 0x07	; 7
     dfe:	0e 94 a6 18 	call	0x314c	; 0x314c <TTapeController::ToggleRecordMode()>
     e02:	41 ce       	rjmp	.-894    	; 0xa86 <loop+0x78>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:400
            if (tape.PlayProgramm || tape.Programming || tape.IsRecording()) lcd.ShowError(0);
            else tape.StartRecordMode();
            break;

        case input.CASS_REVERSE_MODE:
            if (tape.PlayProgramm || tape.Programming) lcd.ShowError(0);
     e04:	80 91 98 07 	lds	r24, 0x0798	; 0x800798 <tape>
     e08:	81 11       	cpse	r24, r1
     e0a:	c6 cf       	rjmp	.-116    	; 0xd98 <loop+0x38a>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:400 (discriminator 2)
     e0c:	80 91 99 07 	lds	r24, 0x0799	; 0x800799 <tape+0x1>
     e10:	81 11       	cpse	r24, r1
     e12:	c2 cf       	rjmp	.-124    	; 0xd98 <loop+0x38a>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:401
            else tape.ToggleReverseMode();
     e14:	88 e9       	ldi	r24, 0x98	; 152
     e16:	97 e0       	ldi	r25, 0x07	; 7
     e18:	0e 94 65 18 	call	0x30ca	; 0x30ca <TTapeController::ToggleReverseMode()>
     e1c:	34 ce       	rjmp	.-920    	; 0xa86 <loop+0x78>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:417
    }


    // other tape deck keys only if record is not active
   if (tape.ReadyForInput()) {
        switch(input.pressedKeys)
     e1e:	81 15       	cp	r24, r1
     e20:	24 e0       	ldi	r18, 0x04	; 4
     e22:	92 07       	cpc	r25, r18
     e24:	a1 f0       	breq	.+40     	; 0xe4e <loop+0x440>
     e26:	81 15       	cp	r24, r1
     e28:	28 e0       	ldi	r18, 0x08	; 8
     e2a:	92 07       	cpc	r25, r18
     e2c:	09 f4       	brne	.+2      	; 0xe30 <loop+0x422>
     e2e:	5a c0       	rjmp	.+180    	; 0xee4 <loop+0x4d6>
     e30:	81 15       	cp	r24, r1
     e32:	92 40       	sbci	r25, 0x02	; 2
     e34:	09 f0       	breq	.+2      	; 0xe38 <loop+0x42a>
     e36:	3e ce       	rjmp	.-900    	; 0xab4 <loop+0xa6>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:420
        {
            case input.CASS_NEXT:
                if (tape.GetDirection() < 0 ) {
     e38:	88 e9       	ldi	r24, 0x98	; 152
     e3a:	97 e0       	ldi	r25, 0x07	; 7
     e3c:	0e 94 2f 15 	call	0x2a5e	; 0x2a5e <TTapeController::GetDirection()>
     e40:	97 ff       	sbrs	r25, 7
     e42:	0b c0       	rjmp	.+22     	; 0xe5a <loop+0x44c>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:421
                    tape.NextTrack();
     e44:	88 e9       	ldi	r24, 0x98	; 152
     e46:	97 e0       	ldi	r25, 0x07	; 7
     e48:	0e 94 15 20 	call	0x402a	; 0x402a <TTapeController::NextTrack()>
     e4c:	33 ce       	rjmp	.-922    	; 0xab4 <loop+0xa6>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:429
                tape.PreviousTrack(); 
                }
                break;

            case input.CASS_PREV:
                if (tape.GetDirection() < 0 ) {
     e4e:	88 e9       	ldi	r24, 0x98	; 152
     e50:	97 e0       	ldi	r25, 0x07	; 7
     e52:	0e 94 2f 15 	call	0x2a5e	; 0x2a5e <TTapeController::GetDirection()>
     e56:	97 ff       	sbrs	r25, 7
     e58:	f5 cf       	rjmp	.-22     	; 0xe44 <loop+0x436>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:424
            case input.CASS_NEXT:
                if (tape.GetDirection() < 0 ) {
                    tape.NextTrack();
                }
                else {
                tape.PreviousTrack(); 
     e5a:	88 e9       	ldi	r24, 0x98	; 152
     e5c:	97 e0       	ldi	r25, 0x07	; 7
     e5e:	0e 94 ad 20 	call	0x415a	; 0x415a <TTapeController::PreviousTrack()>
     e62:	28 ce       	rjmp	.-944    	; 0xab4 <loop+0xa6>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:438
                tape.NextTrack(); 
                }
                break;

            case input.CASS_FORWARD:
                if (tape.IsFastWinding() == fwForward) return;
     e64:	88 e9       	ldi	r24, 0x98	; 152
     e66:	97 e0       	ldi	r25, 0x07	; 7
     e68:	0e 94 9d 15 	call	0x2b3a	; 0x2b3a <TTapeController::IsFastWinding()>
     e6c:	01 97       	sbiw	r24, 0x01	; 1
     e6e:	09 f4       	brne	.+2      	; 0xe72 <loop+0x464>
     e70:	99 ce       	rjmp	.-718    	; 0xba4 <loop+0x196>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:439
                if (tape.Programming || tape.IsRecording()) lcd.ShowError(0);
     e72:	80 91 99 07 	lds	r24, 0x0799	; 0x800799 <tape+0x1>
     e76:	81 11       	cpse	r24, r1
     e78:	11 c0       	rjmp	.+34     	; 0xe9c <loop+0x48e>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:439 (discriminator 2)
     e7a:	88 e9       	ldi	r24, 0x98	; 152
     e7c:	97 e0       	ldi	r25, 0x07	; 7
     e7e:	0e 94 35 15 	call	0x2a6a	; 0x2a6a <TTapeController::IsRecording()>
     e82:	81 11       	cpse	r24, r1
     e84:	0b c0       	rjmp	.+22     	; 0xe9c <loop+0x48e>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:440
                else if (tape.GetDirection() < 0 ) tape.WindLeft(); 
     e86:	88 e9       	ldi	r24, 0x98	; 152
     e88:	97 e0       	ldi	r25, 0x07	; 7
     e8a:	0e 94 2f 15 	call	0x2a5e	; 0x2a5e <TTapeController::GetDirection()>
     e8e:	97 ff       	sbrs	r25, 7
     e90:	24 c0       	rjmp	.+72     	; 0xeda <loop+0x4cc>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:440 (discriminator 1)
     e92:	88 e9       	ldi	r24, 0x98	; 152
     e94:	97 e0       	ldi	r25, 0x07	; 7
     e96:	0e 94 0c 1f 	call	0x3e18	; 0x3e18 <TTapeController::WindLeft()>
     e9a:	0c ce       	rjmp	.-1000   	; 0xab4 <loop+0xa6>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:439 (discriminator 3)
                }
                break;

            case input.CASS_FORWARD:
                if (tape.IsFastWinding() == fwForward) return;
                if (tape.Programming || tape.IsRecording()) lcd.ShowError(0);
     e9c:	70 e0       	ldi	r23, 0x00	; 0
     e9e:	60 e0       	ldi	r22, 0x00	; 0
     ea0:	8c ec       	ldi	r24, 0xCC	; 204
     ea2:	98 e0       	ldi	r25, 0x08	; 8
     ea4:	0e 94 52 0b 	call	0x16a4	; 0x16a4 <TDisplay::ShowError(short)>
     ea8:	05 ce       	rjmp	.-1014   	; 0xab4 <loop+0xa6>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:445
                else if (tape.GetDirection() < 0 ) tape.WindLeft(); 
                else tape.WindRight();
                break;

            case input.CASS_REWIND:
                if (tape.IsFastWinding() == fwRewind) return;
     eaa:	88 e9       	ldi	r24, 0x98	; 152
     eac:	97 e0       	ldi	r25, 0x07	; 7
     eae:	0e 94 9d 15 	call	0x2b3a	; 0x2b3a <TTapeController::IsFastWinding()>
     eb2:	02 97       	sbiw	r24, 0x02	; 2
     eb4:	09 f4       	brne	.+2      	; 0xeb8 <loop+0x4aa>
     eb6:	76 ce       	rjmp	.-788    	; 0xba4 <loop+0x196>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:446
                if (tape.Programming || tape.IsRecording()) lcd.ShowError(0);
     eb8:	80 91 99 07 	lds	r24, 0x0799	; 0x800799 <tape+0x1>
     ebc:	81 11       	cpse	r24, r1
     ebe:	ee cf       	rjmp	.-36     	; 0xe9c <loop+0x48e>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:446 (discriminator 2)
     ec0:	88 e9       	ldi	r24, 0x98	; 152
     ec2:	97 e0       	ldi	r25, 0x07	; 7
     ec4:	0e 94 35 15 	call	0x2a6a	; 0x2a6a <TTapeController::IsRecording()>
     ec8:	81 11       	cpse	r24, r1
     eca:	e8 cf       	rjmp	.-48     	; 0xe9c <loop+0x48e>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:447
                else if (tape.GetDirection() > 0 ) tape.WindLeft(); 
     ecc:	88 e9       	ldi	r24, 0x98	; 152
     ece:	97 e0       	ldi	r25, 0x07	; 7
     ed0:	0e 94 2f 15 	call	0x2a5e	; 0x2a5e <TTapeController::GetDirection()>
     ed4:	18 16       	cp	r1, r24
     ed6:	19 06       	cpc	r1, r25
     ed8:	e4 f2       	brlt	.-72     	; 0xe92 <loop+0x484>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:441

            case input.CASS_FORWARD:
                if (tape.IsFastWinding() == fwForward) return;
                if (tape.Programming || tape.IsRecording()) lcd.ShowError(0);
                else if (tape.GetDirection() < 0 ) tape.WindLeft(); 
                else tape.WindRight();
     eda:	88 e9       	ldi	r24, 0x98	; 152
     edc:	97 e0       	ldi	r25, 0x07	; 7
     ede:	0e 94 e2 1a 	call	0x35c4	; 0x35c4 <TTapeController::WindRight()>
     ee2:	e8 cd       	rjmp	.-1072   	; 0xab4 <loop+0xa6>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:452
                else if (tape.GetDirection() > 0 ) tape.WindLeft(); 
                else tape.WindRight();
                break;

            case input.CASS_PROG:
                if (tape.IsRecording()) lcd.ShowError(0);
     ee4:	88 e9       	ldi	r24, 0x98	; 152
     ee6:	97 e0       	ldi	r25, 0x07	; 7
     ee8:	0e 94 35 15 	call	0x2a6a	; 0x2a6a <TTapeController::IsRecording()>
     eec:	81 11       	cpse	r24, r1
     eee:	d6 cf       	rjmp	.-84     	; 0xe9c <loop+0x48e>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:453
                else tape.ProgrammKeyPressed(); 
     ef0:	88 e9       	ldi	r24, 0x98	; 152
     ef2:	97 e0       	ldi	r25, 0x07	; 7
     ef4:	0e 94 8b 21 	call	0x4316	; 0x4316 <TTapeController::ProgrammKeyPressed()>
     ef8:	dd cd       	rjmp	.-1094   	; 0xab4 <loop+0xa6>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:457
                break;

            case input.CASS_DIRECTION:
                if (tape.Programming || tape.IsRecording()) lcd.ShowError(0);
     efa:	80 91 99 07 	lds	r24, 0x0799	; 0x800799 <tape+0x1>
     efe:	81 11       	cpse	r24, r1
     f00:	cd cf       	rjmp	.-102    	; 0xe9c <loop+0x48e>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:457 (discriminator 2)
     f02:	88 e9       	ldi	r24, 0x98	; 152
     f04:	97 e0       	ldi	r25, 0x07	; 7
     f06:	0e 94 35 15 	call	0x2a6a	; 0x2a6a <TTapeController::IsRecording()>
     f0a:	81 11       	cpse	r24, r1
     f0c:	c7 cf       	rjmp	.-114    	; 0xe9c <loop+0x48e>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:458
                else tape.ToggleDirection();
     f0e:	88 e9       	ldi	r24, 0x98	; 152
     f10:	97 e0       	ldi	r25, 0x07	; 7
     f12:	0e 94 f4 21 	call	0x43e8	; 0x43e8 <TTapeController::ToggleDirection()>
     f16:	ce cd       	rjmp	.-1124   	; 0xab4 <loop+0xa6>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:508
    tape.Update();
    

    cycle++;
    if (cycle > 1) {
        cycle = 0;
     f18:	10 92 97 07 	sts	0x0797, r1	; 0x800797 <cycle+0x1>
     f1c:	10 92 96 07 	sts	0x0796, r1	; 0x800796 <cycle>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:516
  //      else digitalWrite(PIN_BUILD_IN_LED, LOW);


        #ifdef DEBUG
           
            if (input.pressedKeys != 0) {
     f20:	60 91 b8 08 	lds	r22, 0x08B8	; 0x8008b8 <input>
     f24:	70 91 b9 08 	lds	r23, 0x08B9	; 0x8008b9 <input+0x1>
     f28:	61 15       	cp	r22, r1
     f2a:	71 05       	cpc	r23, r1
     f2c:	79 f0       	breq	.+30     	; 0xf4c <loop+0x53e>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:517
                Serial.println(KeyToString(input.pressedKeys));
     f2e:	ce 01       	movw	r24, r28
     f30:	01 96       	adiw	r24, 0x01	; 1
     f32:	0e 94 95 04 	call	0x92a	; 0x92a <KeyToString(int)>
     f36:	be 01       	movw	r22, r28
     f38:	6f 5f       	subi	r22, 0xFF	; 255
     f3a:	7f 4f       	sbci	r23, 0xFF	; 255
     f3c:	82 ed       	ldi	r24, 0xD2	; 210
     f3e:	9a e0       	ldi	r25, 0x0A	; 10
     f40:	0e 94 d7 37 	call	0x6fae	; 0x6fae <Print::println(String const&)>
     f44:	ce 01       	movw	r24, r28
     f46:	01 96       	adiw	r24, 0x01	; 1
     f48:	0e 94 ad 38 	call	0x715a	; 0x715a <String::~String()>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:521
            }


            tape.GetState();
     f4c:	88 e9       	ldi	r24, 0x98	; 152
     f4e:	97 e0       	ldi	r25, 0x07	; 7
     f50:	0e 94 b3 19 	call	0x3366	; 0x3366 <TTapeController::GetState()>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:522
            int state = tape.GetCurrentState();
     f54:	88 e9       	ldi	r24, 0x98	; 152
     f56:	97 e0       	ldi	r25, 0x07	; 7
     f58:	0e 94 3a 15 	call	0x2a74	; 0x2a74 <TTapeController::GetCurrentState()>
     f5c:	8c 01       	movw	r16, r24
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:523
            if (state != OldState)
     f5e:	80 91 94 07 	lds	r24, 0x0794	; 0x800794 <OldState>
     f62:	90 91 95 07 	lds	r25, 0x0795	; 0x800795 <OldState+0x1>
     f66:	80 17       	cp	r24, r16
     f68:	91 07       	cpc	r25, r17
     f6a:	a1 f0       	breq	.+40     	; 0xf94 <loop+0x586>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:525
            {
                Serial.println(StateToString(state));
     f6c:	b8 01       	movw	r22, r16
     f6e:	ce 01       	movw	r24, r28
     f70:	01 96       	adiw	r24, 0x01	; 1
     f72:	0e 94 16 04 	call	0x82c	; 0x82c <StateToString(int)>
     f76:	be 01       	movw	r22, r28
     f78:	6f 5f       	subi	r22, 0xFF	; 255
     f7a:	7f 4f       	sbci	r23, 0xFF	; 255
     f7c:	82 ed       	ldi	r24, 0xD2	; 210
     f7e:	9a e0       	ldi	r25, 0x0A	; 10
     f80:	0e 94 d7 37 	call	0x6fae	; 0x6fae <Print::println(String const&)>
     f84:	ce 01       	movw	r24, r28
     f86:	01 96       	adiw	r24, 0x01	; 1
     f88:	0e 94 ad 38 	call	0x715a	; 0x715a <String::~String()>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:526
                OldState = state;
     f8c:	10 93 95 07 	sts	0x0795, r17	; 0x800795 <OldState+0x1>
     f90:	00 93 94 07 	sts	0x0794, r16	; 0x800794 <OldState>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:532
            }
            
        #endif   

        
        lcd.Update();
     f94:	8c ec       	ldi	r24, 0xCC	; 204
     f96:	98 e0       	ldi	r25, 0x08	; 8
     f98:	0e 94 16 10 	call	0x202c	; 0x202c <TDisplay::Update()>
     f9c:	c3 cd       	rjmp	.-1146   	; 0xb24 <loop+0x116>

00000f9e <_GLOBAL__sub_I_lcd>:
_GLOBAL__sub_I_lcd():
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:157
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>



TDisplay lcd = TDisplay();
     f9e:	8c ec       	ldi	r24, 0xCC	; 204
     fa0:	98 e0       	ldi	r25, 0x08	; 8
     fa2:	0e 94 2f 0e 	call	0x1c5e	; 0x1c5e <TDisplay::TDisplay()>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:158
TInputs input = TInputs();
     fa6:	88 eb       	ldi	r24, 0xB8	; 184
     fa8:	98 e0       	ldi	r25, 0x08	; 8
     faa:	0e 94 1d 13 	call	0x263a	; 0x263a <TInputs::TInputs()>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:159
TCDController cd = TCDController();
     fae:	8a ea       	ldi	r24, 0xAA	; 170
     fb0:	98 e0       	ldi	r25, 0x08	; 8
     fb2:	0e 94 ed 07 	call	0xfda	; 0xfda <TCDController::TCDController()>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:160
TCounter counter = TCounter();
     fb6:	88 e5       	ldi	r24, 0x58	; 88
     fb8:	98 e0       	ldi	r25, 0x08	; 8
     fba:	0e 94 a6 09 	call	0x134c	; 0x134c <TCounter::TCounter()>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/MC146805G2.ino:161
TTapeController tape = TTapeController(&lcd, &input, &counter);
     fbe:	28 e5       	ldi	r18, 0x58	; 88
     fc0:	38 e0       	ldi	r19, 0x08	; 8
     fc2:	48 eb       	ldi	r20, 0xB8	; 184
     fc4:	58 e0       	ldi	r21, 0x08	; 8
     fc6:	6c ec       	ldi	r22, 0xCC	; 204
     fc8:	78 e0       	ldi	r23, 0x08	; 8
     fca:	88 e9       	ldi	r24, 0x98	; 152
     fcc:	97 e0       	ldi	r25, 0x07	; 7
     fce:	0c 94 f6 15 	jmp	0x2bec	; 0x2bec <TTapeController::TTapeController(TDisplay*, TInputs*, TCounter*)>

00000fd2 <_GLOBAL__sub_D_lcd>:
_ZN8TCounterD4Ev():
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TCounter.h:15


enum TTapeLength {tlC30, tlC60, tlC90};
enum TScreenMode {smDefault, smSplashScreen, smConfigPosition, smDateTime, smDateTimeConfig, smScreenSaver, smWhiteLever};

class TCounter
     fd2:	8c e9       	ldi	r24, 0x9C	; 156
     fd4:	98 e0       	ldi	r25, 0x08	; 8
     fd6:	0c 94 ad 38 	jmp	0x715a	; 0x715a <String::~String()>

00000fda <TCDController::TCDController()>:
_ZN13TCDControllerC2Ev():
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TCDController.cpp:46
/************************************************************************
 * states/getter
 * 
 * *********************************************************************/
bool TCDController::IsPlaying() { return playing; }
bool TCDController::IsPaused() { return paused; }
     fda:	fc 01       	movw	r30, r24
     fdc:	12 82       	std	Z+2, r1	; 0x02
     fde:	13 82       	std	Z+3, r1	; 0x03
     fe0:	14 82       	std	Z+4, r1	; 0x04
     fe2:	15 82       	std	Z+5, r1	; 0x05
     fe4:	80 e5       	ldi	r24, 0x50	; 80
     fe6:	90 e0       	ldi	r25, 0x00	; 0
     fe8:	97 83       	std	Z+7, r25	; 0x07
     fea:	86 83       	std	Z+6, r24	; 0x06
     fec:	10 86       	std	Z+8, r1	; 0x08
     fee:	11 86       	std	Z+9, r1	; 0x09
     ff0:	12 86       	std	Z+10, r1	; 0x0a
     ff2:	13 86       	std	Z+11, r1	; 0x0b
     ff4:	14 86       	std	Z+12, r1	; 0x0c
     ff6:	15 86       	std	Z+13, r1	; 0x0d
     ff8:	61 e0       	ldi	r22, 0x01	; 1
     ffa:	84 e0       	ldi	r24, 0x04	; 4
     ffc:	0e 94 18 35 	call	0x6a30	; 0x6a30 <pinMode>
    1000:	61 e0       	ldi	r22, 0x01	; 1
    1002:	87 e1       	ldi	r24, 0x17	; 23
    1004:	0e 94 18 35 	call	0x6a30	; 0x6a30 <pinMode>
    1008:	61 e0       	ldi	r22, 0x01	; 1
    100a:	83 e0       	ldi	r24, 0x03	; 3
    100c:	0e 94 18 35 	call	0x6a30	; 0x6a30 <pinMode>
    1010:	60 e0       	ldi	r22, 0x00	; 0
    1012:	82 e0       	ldi	r24, 0x02	; 2
    1014:	0e 94 18 35 	call	0x6a30	; 0x6a30 <pinMode>
    1018:	61 e0       	ldi	r22, 0x01	; 1
    101a:	84 e0       	ldi	r24, 0x04	; 4
    101c:	0e 94 54 35 	call	0x6aa8	; 0x6aa8 <digitalWrite>
    1020:	61 e0       	ldi	r22, 0x01	; 1
    1022:	87 e1       	ldi	r24, 0x17	; 23
    1024:	0e 94 54 35 	call	0x6aa8	; 0x6aa8 <digitalWrite>
    1028:	61 e0       	ldi	r22, 0x01	; 1
    102a:	83 e0       	ldi	r24, 0x03	; 3
    102c:	0e 94 54 35 	call	0x6aa8	; 0x6aa8 <digitalWrite>
    1030:	61 e0       	ldi	r22, 0x01	; 1
    1032:	82 e0       	ldi	r24, 0x02	; 2
    1034:	0e 94 18 35 	call	0x6a30	; 0x6a30 <pinMode>
    1038:	61 e0       	ldi	r22, 0x01	; 1
    103a:	82 e0       	ldi	r24, 0x02	; 2
    103c:	0c 94 54 35 	jmp	0x6aa8	; 0x6aa8 <digitalWrite>

00001040 <TCDController::Play()>:
_ZN13TCDController4PlayEv():
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TCDController.cpp:84
/************************************************************************
 * Play
 * 
 * *********************************************************************/
void TCDController::Play()
{
    1040:	cf 93       	push	r28
    1042:	df 93       	push	r29
    1044:	ec 01       	movw	r28, r24
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TCDController.cpp:86
    #ifdef DEBUG
        Serial.println(":CD:Play()");
    1046:	6d ee       	ldi	r22, 0xED	; 237
    1048:	72 e0       	ldi	r23, 0x02	; 2
    104a:	82 ed       	ldi	r24, 0xD2	; 210
    104c:	9a e0       	ldi	r25, 0x0A	; 10
    104e:	0e 94 e9 37 	call	0x6fd2	; 0x6fd2 <Print::println(char const*)>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TCDController.cpp:88
    #endif
    playing = true;
    1052:	81 e0       	ldi	r24, 0x01	; 1
    1054:	8c 87       	std	Y+12, r24	; 0x0c
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TCDController.cpp:89
    paused = false;
    1056:	1d 86       	std	Y+13, r1	; 0x0d
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TCDController.cpp:90
    digitalWrite(PIN_PA6, LOW); 
    1058:	60 e0       	ldi	r22, 0x00	; 0
    105a:	83 e0       	ldi	r24, 0x03	; 3
    105c:	0e 94 54 35 	call	0x6aa8	; 0x6aa8 <digitalWrite>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TCDController.cpp:91
    ms = millis();   
    1060:	0e 94 44 34 	call	0x6888	; 0x6888 <millis>
    1064:	6a 83       	std	Y+2, r22	; 0x02
    1066:	7b 83       	std	Y+3, r23	; 0x03
    1068:	8c 83       	std	Y+4, r24	; 0x04
    106a:	9d 83       	std	Y+5, r25	; 0x05
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TCDController.cpp:92
}
    106c:	df 91       	pop	r29
    106e:	cf 91       	pop	r28
    1070:	08 95       	ret

00001072 <TCDController::Update()>:
_ZN13TCDController6UpdateEv():
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TCDController.cpp:55
/************************************************************************
 * Update
 * 
 * *********************************************************************/
void TCDController::Update()
{
    1072:	cf 92       	push	r12
    1074:	df 92       	push	r13
    1076:	ef 92       	push	r14
    1078:	ff 92       	push	r15
    107a:	cf 93       	push	r28
    107c:	df 93       	push	r29
    107e:	ec 01       	movw	r28, r24
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TCDController.cpp:57
    
    long now = millis();
    1080:	0e 94 44 34 	call	0x6888	; 0x6888 <millis>
    1084:	6b 01       	movw	r12, r22
    1086:	7c 01       	movw	r14, r24
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TCDController.cpp:58
    if (DoAutoStart > 0 && DoAutoStart < now) {
    1088:	88 85       	ldd	r24, Y+8	; 0x08
    108a:	99 85       	ldd	r25, Y+9	; 0x09
    108c:	aa 85       	ldd	r26, Y+10	; 0x0a
    108e:	bb 85       	ldd	r27, Y+11	; 0x0b
    1090:	18 16       	cp	r1, r24
    1092:	19 06       	cpc	r1, r25
    1094:	1a 06       	cpc	r1, r26
    1096:	1b 06       	cpc	r1, r27
    1098:	94 f4       	brge	.+36     	; 0x10be <TCDController::Update()+0x4c>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TCDController.cpp:58 (discriminator 1)
    109a:	8c 15       	cp	r24, r12
    109c:	9d 05       	cpc	r25, r13
    109e:	ae 05       	cpc	r26, r14
    10a0:	bf 05       	cpc	r27, r15
    10a2:	6c f4       	brge	.+26     	; 0x10be <TCDController::Update()+0x4c>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TCDController.cpp:60
        #ifdef DEBUG
            Serial.println("+ DoAutoStart restart...");
    10a4:	68 ef       	ldi	r22, 0xF8	; 248
    10a6:	72 e0       	ldi	r23, 0x02	; 2
    10a8:	82 ed       	ldi	r24, 0xD2	; 210
    10aa:	9a e0       	ldi	r25, 0x0A	; 10
    10ac:	0e 94 e9 37 	call	0x6fd2	; 0x6fd2 <Print::println(char const*)>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TCDController.cpp:62
        #endif
        DoAutoStart = 0;
    10b0:	18 86       	std	Y+8, r1	; 0x08
    10b2:	19 86       	std	Y+9, r1	; 0x09
    10b4:	1a 86       	std	Y+10, r1	; 0x0a
    10b6:	1b 86       	std	Y+11, r1	; 0x0b
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TCDController.cpp:63
        Play();
    10b8:	ce 01       	movw	r24, r28
    10ba:	0e 94 20 08 	call	0x1040	; 0x1040 <TCDController::Play()>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TCDController.cpp:66
    }

    if(now - ms > BUTTON_INTERVAL) {
    10be:	8a 81       	ldd	r24, Y+2	; 0x02
    10c0:	9b 81       	ldd	r25, Y+3	; 0x03
    10c2:	ac 81       	ldd	r26, Y+4	; 0x04
    10c4:	bd 81       	ldd	r27, Y+5	; 0x05
    10c6:	b7 01       	movw	r22, r14
    10c8:	a6 01       	movw	r20, r12
    10ca:	48 1b       	sub	r20, r24
    10cc:	59 0b       	sbc	r21, r25
    10ce:	6a 0b       	sbc	r22, r26
    10d0:	7b 0b       	sbc	r23, r27
    10d2:	8e 81       	ldd	r24, Y+6	; 0x06
    10d4:	9f 81       	ldd	r25, Y+7	; 0x07
    10d6:	09 2e       	mov	r0, r25
    10d8:	00 0c       	add	r0, r0
    10da:	aa 0b       	sbc	r26, r26
    10dc:	bb 0b       	sbc	r27, r27
    10de:	84 17       	cp	r24, r20
    10e0:	95 07       	cpc	r25, r21
    10e2:	a6 07       	cpc	r26, r22
    10e4:	b7 07       	cpc	r27, r23
    10e6:	b4 f4       	brge	.+44     	; 0x1114 <TCDController::Update()+0xa2>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TCDController.cpp:67
        ms = now;
    10e8:	ca 82       	std	Y+2, r12	; 0x02
    10ea:	db 82       	std	Y+3, r13	; 0x03
    10ec:	ec 82       	std	Y+4, r14	; 0x04
    10ee:	fd 82       	std	Y+5, r15	; 0x05
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TCDController.cpp:69
        // set all control pins to high
        digitalWrite(PIN_PA6, HIGH);
    10f0:	61 e0       	ldi	r22, 0x01	; 1
    10f2:	83 e0       	ldi	r24, 0x03	; 3
    10f4:	0e 94 54 35 	call	0x6aa8	; 0x6aa8 <digitalWrite>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TCDController.cpp:70
        digitalWrite(PIN_PA5, HIGH);
    10f8:	61 e0       	ldi	r22, 0x01	; 1
    10fa:	84 e0       	ldi	r24, 0x04	; 4
    10fc:	0e 94 54 35 	call	0x6aa8	; 0x6aa8 <digitalWrite>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TCDController.cpp:71
        digitalWrite(PIN_PA4, HIGH);
    1100:	61 e0       	ldi	r22, 0x01	; 1
    1102:	87 e1       	ldi	r24, 0x17	; 23
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TCDController.cpp:75
    }


}
    1104:	df 91       	pop	r29
    1106:	cf 91       	pop	r28
    1108:	ff 90       	pop	r15
    110a:	ef 90       	pop	r14
    110c:	df 90       	pop	r13
    110e:	cf 90       	pop	r12
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TCDController.cpp:71
    if(now - ms > BUTTON_INTERVAL) {
        ms = now;
        // set all control pins to high
        digitalWrite(PIN_PA6, HIGH);
        digitalWrite(PIN_PA5, HIGH);
        digitalWrite(PIN_PA4, HIGH);
    1110:	0c 94 54 35 	jmp	0x6aa8	; 0x6aa8 <digitalWrite>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TCDController.cpp:75
    }


}
    1114:	df 91       	pop	r29
    1116:	cf 91       	pop	r28
    1118:	ff 90       	pop	r15
    111a:	ef 90       	pop	r14
    111c:	df 90       	pop	r13
    111e:	cf 90       	pop	r12
    1120:	08 95       	ret

00001122 <TCDController::Pause(bool)>:
_ZN13TCDController5PauseEb():
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TCDController.cpp:101
/************************************************************************
 * Pause
 * Use autostart for a 4 seconds pause - used for auto-rec mode
 * *********************************************************************/
void TCDController::Pause(bool AutoStart) 
{
    1122:	1f 93       	push	r17
    1124:	cf 93       	push	r28
    1126:	df 93       	push	r29
    1128:	ec 01       	movw	r28, r24
    112a:	16 2f       	mov	r17, r22
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TCDController.cpp:103
    #ifdef DEBUG
        Serial.println(":CD:Pause()");
    112c:	61 e1       	ldi	r22, 0x11	; 17
    112e:	73 e0       	ldi	r23, 0x03	; 3
    1130:	82 ed       	ldi	r24, 0xD2	; 210
    1132:	9a e0       	ldi	r25, 0x0A	; 10
    1134:	0e 94 e9 37 	call	0x6fd2	; 0x6fd2 <Print::println(char const*)>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TCDController.cpp:105
    #endif
    paused = true;    
    1138:	81 e0       	ldi	r24, 0x01	; 1
    113a:	8d 87       	std	Y+13, r24	; 0x0d
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TCDController.cpp:106
    digitalWrite(PIN_PA5, LOW);
    113c:	60 e0       	ldi	r22, 0x00	; 0
    113e:	84 e0       	ldi	r24, 0x04	; 4
    1140:	0e 94 54 35 	call	0x6aa8	; 0x6aa8 <digitalWrite>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TCDController.cpp:107
    if (AutoStart) {
    1144:	11 23       	and	r17, r17
    1146:	99 f0       	breq	.+38     	; 0x116e <TCDController::Pause(bool)+0x4c>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TCDController.cpp:108
        DoAutoStart = millis() + 4000;
    1148:	0e 94 44 34 	call	0x6888	; 0x6888 <millis>
    114c:	60 56       	subi	r22, 0x60	; 96
    114e:	70 4f       	sbci	r23, 0xF0	; 240
    1150:	8f 4f       	sbci	r24, 0xFF	; 255
    1152:	9f 4f       	sbci	r25, 0xFF	; 255
    1154:	68 87       	std	Y+8, r22	; 0x08
    1156:	79 87       	std	Y+9, r23	; 0x09
    1158:	8a 87       	std	Y+10, r24	; 0x0a
    115a:	9b 87       	std	Y+11, r25	; 0x0b
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TCDController.cpp:110
        #ifdef DEBUG
            Serial.println("Auto Paused for 4 seconds");
    115c:	6d e1       	ldi	r22, 0x1D	; 29
    115e:	73 e0       	ldi	r23, 0x03	; 3
    1160:	82 ed       	ldi	r24, 0xD2	; 210
    1162:	9a e0       	ldi	r25, 0x0A	; 10
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TCDController.cpp:113
        #endif
    }
}
    1164:	df 91       	pop	r29
    1166:	cf 91       	pop	r28
    1168:	1f 91       	pop	r17
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TCDController.cpp:110
    paused = true;    
    digitalWrite(PIN_PA5, LOW);
    if (AutoStart) {
        DoAutoStart = millis() + 4000;
        #ifdef DEBUG
            Serial.println("Auto Paused for 4 seconds");
    116a:	0c 94 e9 37 	jmp	0x6fd2	; 0x6fd2 <Print::println(char const*)>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TCDController.cpp:113
        #endif
    }
}
    116e:	df 91       	pop	r29
    1170:	cf 91       	pop	r28
    1172:	1f 91       	pop	r17
    1174:	08 95       	ret

00001176 <TCDController::Stop()>:
_ZN13TCDController4StopEv():
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TCDController.cpp:122
/************************************************************************
 * Stop
 * 
 * *********************************************************************/
void TCDController::Stop()
{  
    1176:	cf 93       	push	r28
    1178:	df 93       	push	r29
    117a:	ec 01       	movw	r28, r24
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TCDController.cpp:124
    #ifdef DEBUG
        Serial.println(":CD:Stop()");
    117c:	67 e3       	ldi	r22, 0x37	; 55
    117e:	73 e0       	ldi	r23, 0x03	; 3
    1180:	82 ed       	ldi	r24, 0xD2	; 210
    1182:	9a e0       	ldi	r25, 0x0A	; 10
    1184:	0e 94 e9 37 	call	0x6fd2	; 0x6fd2 <Print::println(char const*)>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TCDController.cpp:126
    #endif
    playing = false;
    1188:	1c 86       	std	Y+12, r1	; 0x0c
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TCDController.cpp:127
    paused = false;
    118a:	1d 86       	std	Y+13, r1	; 0x0d
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TCDController.cpp:128
    digitalWrite(PIN_PA4, LOW);
    118c:	60 e0       	ldi	r22, 0x00	; 0
    118e:	87 e1       	ldi	r24, 0x17	; 23
    1190:	0e 94 54 35 	call	0x6aa8	; 0x6aa8 <digitalWrite>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TCDController.cpp:129
    ms = millis();
    1194:	0e 94 44 34 	call	0x6888	; 0x6888 <millis>
    1198:	6a 83       	std	Y+2, r22	; 0x02
    119a:	7b 83       	std	Y+3, r23	; 0x03
    119c:	8c 83       	std	Y+4, r24	; 0x04
    119e:	9d 83       	std	Y+5, r25	; 0x05
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TCDController.cpp:130
}
    11a0:	df 91       	pop	r29
    11a2:	cf 91       	pop	r28
    11a4:	08 95       	ret

000011a6 <TCounter::StoreReverseMode(int)>:
_ZN8TCounter16StoreReverseModeEi():
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TCounter.cpp:356
{
    bool a = overflow;
    overflow = false;
    return a;

}
    11a6:	61 e5       	ldi	r22, 0x51	; 81
    11a8:	73 e0       	ldi	r23, 0x03	; 3
    11aa:	82 ed       	ldi	r24, 0xD2	; 210
    11ac:	9a e0       	ldi	r25, 0x0A	; 10
    11ae:	0c 94 e9 37 	jmp	0x6fd2	; 0x6fd2 <Print::println(char const*)>

000011b2 <TCounter::RestoreReverseMode()>:
_ZN8TCounter18RestoreReverseModeEv():
    11b2:	63 e6       	ldi	r22, 0x63	; 99
    11b4:	73 e0       	ldi	r23, 0x03	; 3
    11b6:	82 ed       	ldi	r24, 0xD2	; 210
    11b8:	9a e0       	ldi	r25, 0x0A	; 10
    11ba:	0e 94 e9 37 	call	0x6fd2	; 0x6fd2 <Print::println(char const*)>
    11be:	90 e0       	ldi	r25, 0x00	; 0
    11c0:	80 e0       	ldi	r24, 0x00	; 0
    11c2:	08 95       	ret

000011c4 <TCounter::GetWhiteLeverReleaseTime()>:
_ZN8TCounter24GetWhiteLeverReleaseTimeEv():
    11c4:	fc 01       	movw	r30, r24
    11c6:	80 81       	ld	r24, Z
    11c8:	91 81       	ldd	r25, Z+1	; 0x01
    11ca:	08 95       	ret

000011cc <TCounter::SetWhiteLeverReleaseTime(bool, int)>:
_ZN8TCounter24SetWhiteLeverReleaseTimeEbi():
    11cc:	0f 93       	push	r16
    11ce:	1f 93       	push	r17
    11d0:	cf 93       	push	r28
    11d2:	df 93       	push	r29
    11d4:	1f 92       	push	r1
    11d6:	cd b7       	in	r28, 0x3d	; 61
    11d8:	de b7       	in	r29, 0x3e	; 62
    11da:	fc 01       	movw	r30, r24
    11dc:	61 11       	cpse	r22, r1
    11de:	08 c0       	rjmp	.+16     	; 0x11f0 <TCounter::SetWhiteLeverReleaseTime(bool, int)+0x24>
    11e0:	13 82       	std	Z+3, r1	; 0x03
    11e2:	12 82       	std	Z+2, r1	; 0x02
    11e4:	0f 90       	pop	r0
    11e6:	df 91       	pop	r29
    11e8:	cf 91       	pop	r28
    11ea:	1f 91       	pop	r17
    11ec:	0f 91       	pop	r16
    11ee:	08 95       	ret
    11f0:	86 e0       	ldi	r24, 0x06	; 6
    11f2:	90 e0       	ldi	r25, 0x00	; 0
    11f4:	93 83       	std	Z+3, r25	; 0x03
    11f6:	82 83       	std	Z+2, r24	; 0x02
    11f8:	41 15       	cp	r20, r1
    11fa:	51 05       	cpc	r21, r1
    11fc:	99 f3       	breq	.-26     	; 0x11e4 <TCounter::SetWhiteLeverReleaseTime(bool, int)+0x18>
    11fe:	80 81       	ld	r24, Z
    1200:	91 81       	ldd	r25, Z+1	; 0x01
    1202:	48 0f       	add	r20, r24
    1204:	59 1f       	adc	r21, r25
    1206:	44 36       	cpi	r20, 0x64	; 100
    1208:	51 05       	cpc	r21, r1
    120a:	10 f4       	brcc	.+4      	; 0x1210 <TCounter::SetWhiteLeverReleaseTime(bool, int)+0x44>
    120c:	51 83       	std	Z+1, r21	; 0x01
    120e:	40 83       	st	Z, r20
    1210:	8f 01       	movw	r16, r30
    1212:	66 e9       	ldi	r22, 0x96	; 150
    1214:	71 e0       	ldi	r23, 0x01	; 1
    1216:	82 ed       	ldi	r24, 0xD2	; 210
    1218:	9a e0       	ldi	r25, 0x0A	; 10
    121a:	0e 94 c4 37 	call	0x6f88	; 0x6f88 <Print::print(char const*)>
    121e:	f8 01       	movw	r30, r16
    1220:	60 81       	ld	r22, Z
    1222:	71 81       	ldd	r23, Z+1	; 0x01
    1224:	4a e0       	ldi	r20, 0x0A	; 10
    1226:	50 e0       	ldi	r21, 0x00	; 0
    1228:	82 ed       	ldi	r24, 0xD2	; 210
    122a:	9a e0       	ldi	r25, 0x0A	; 10
    122c:	0e 94 9b 38 	call	0x7136	; 0x7136 <Print::println(int, int)>
    1230:	f8 01       	movw	r30, r16
    1232:	80 81       	ld	r24, Z
    1234:	89 83       	std	Y+1, r24	; 0x01
    1236:	21 e0       	ldi	r18, 0x01	; 1
    1238:	ae 01       	movw	r20, r28
    123a:	4f 5f       	subi	r20, 0xFF	; 255
    123c:	5f 4f       	sbci	r21, 0xFF	; 255
    123e:	60 e1       	ldi	r22, 0x10	; 16
    1240:	84 ea       	ldi	r24, 0xA4	; 164
    1242:	99 e0       	ldi	r25, 0x09	; 9
    1244:	0e 94 e8 33 	call	0x67d0	; 0x67d0 <MD_DS1307::writeRAM(unsigned char, unsigned char*, unsigned char)>
    1248:	cd cf       	rjmp	.-102    	; 0x11e4 <TCounter::SetWhiteLeverReleaseTime(bool, int)+0x18>

0000124a <TCounter::ConfigScreenPosition(bool, int, int)>:
_ZN8TCounter20ConfigScreenPositionEbii():
    124a:	0f 93       	push	r16
    124c:	1f 93       	push	r17
    124e:	cf 93       	push	r28
    1250:	df 93       	push	r29
    1252:	1f 92       	push	r1
    1254:	cd b7       	in	r28, 0x3d	; 61
    1256:	de b7       	in	r29, 0x3e	; 62
    1258:	fc 01       	movw	r30, r24
    125a:	61 11       	cpse	r22, r1
    125c:	08 c0       	rjmp	.+16     	; 0x126e <TCounter::ConfigScreenPosition(bool, int, int)+0x24>
    125e:	13 82       	std	Z+3, r1	; 0x03
    1260:	12 82       	std	Z+2, r1	; 0x02
    1262:	0f 90       	pop	r0
    1264:	df 91       	pop	r29
    1266:	cf 91       	pop	r28
    1268:	1f 91       	pop	r17
    126a:	0f 91       	pop	r16
    126c:	08 95       	ret
    126e:	82 e0       	ldi	r24, 0x02	; 2
    1270:	90 e0       	ldi	r25, 0x00	; 0
    1272:	93 83       	std	Z+3, r25	; 0x03
    1274:	82 83       	std	Z+2, r24	; 0x02
    1276:	41 15       	cp	r20, r1
    1278:	51 05       	cpc	r21, r1
    127a:	19 f4       	brne	.+6      	; 0x1282 <TCounter::ConfigScreenPosition(bool, int, int)+0x38>
    127c:	21 15       	cp	r18, r1
    127e:	31 05       	cpc	r19, r1
    1280:	81 f3       	breq	.-32     	; 0x1262 <TCounter::ConfigScreenPosition(bool, int, int)+0x18>
    1282:	94 81       	ldd	r25, Z+4	; 0x04
    1284:	ba 01       	movw	r22, r20
    1286:	69 0f       	add	r22, r25
    1288:	71 1d       	adc	r23, r1
    128a:	64 36       	cpi	r22, 0x64	; 100
    128c:	71 05       	cpc	r23, r1
    128e:	10 f4       	brcc	.+4      	; 0x1294 <TCounter::ConfigScreenPosition(bool, int, int)+0x4a>
    1290:	94 0f       	add	r25, r20
    1292:	94 83       	std	Z+4, r25	; 0x04
    1294:	85 81       	ldd	r24, Z+5	; 0x05
    1296:	a9 01       	movw	r20, r18
    1298:	48 0f       	add	r20, r24
    129a:	51 1d       	adc	r21, r1
    129c:	44 36       	cpi	r20, 0x64	; 100
    129e:	51 05       	cpc	r21, r1
    12a0:	10 f4       	brcc	.+4      	; 0x12a6 <TCounter::ConfigScreenPosition(bool, int, int)+0x5c>
    12a2:	82 0f       	add	r24, r18
    12a4:	85 83       	std	Z+5, r24	; 0x05
    12a6:	8f 01       	movw	r16, r30
    12a8:	84 81       	ldd	r24, Z+4	; 0x04
    12aa:	89 83       	std	Y+1, r24	; 0x01
    12ac:	21 e0       	ldi	r18, 0x01	; 1
    12ae:	ae 01       	movw	r20, r28
    12b0:	4f 5f       	subi	r20, 0xFF	; 255
    12b2:	5f 4f       	sbci	r21, 0xFF	; 255
    12b4:	6d e0       	ldi	r22, 0x0D	; 13
    12b6:	84 ea       	ldi	r24, 0xA4	; 164
    12b8:	99 e0       	ldi	r25, 0x09	; 9
    12ba:	0e 94 e8 33 	call	0x67d0	; 0x67d0 <MD_DS1307::writeRAM(unsigned char, unsigned char*, unsigned char)>
    12be:	f8 01       	movw	r30, r16
    12c0:	85 81       	ldd	r24, Z+5	; 0x05
    12c2:	89 83       	std	Y+1, r24	; 0x01
    12c4:	21 e0       	ldi	r18, 0x01	; 1
    12c6:	ae 01       	movw	r20, r28
    12c8:	4f 5f       	subi	r20, 0xFF	; 255
    12ca:	5f 4f       	sbci	r21, 0xFF	; 255
    12cc:	6e e0       	ldi	r22, 0x0E	; 14
    12ce:	84 ea       	ldi	r24, 0xA4	; 164
    12d0:	99 e0       	ldi	r25, 0x09	; 9
    12d2:	0e 94 e8 33 	call	0x67d0	; 0x67d0 <MD_DS1307::writeRAM(unsigned char, unsigned char*, unsigned char)>
    12d6:	c5 cf       	rjmp	.-118    	; 0x1262 <TCounter::ConfigScreenPosition(bool, int, int)+0x18>

000012d8 <TCounter::Init()>:
_ZN8TCounter4InitEv():
    12d8:	08 95       	ret

000012da <TCounter::Play()>:
_ZN8TCounter4PlayEv():
    12da:	cf 93       	push	r28
    12dc:	df 93       	push	r29
    12de:	ec 01       	movw	r28, r24
    12e0:	67 e7       	ldi	r22, 0x77	; 119
    12e2:	73 e0       	ldi	r23, 0x03	; 3
    12e4:	82 ed       	ldi	r24, 0xD2	; 210
    12e6:	9a e0       	ldi	r25, 0x0A	; 10
    12e8:	0e 94 e9 37 	call	0x6fd2	; 0x6fd2 <Print::println(char const*)>
    12ec:	81 e0       	ldi	r24, 0x01	; 1
    12ee:	90 e0       	ldi	r25, 0x00	; 0
    12f0:	99 af       	std	Y+57, r25	; 0x39
    12f2:	88 af       	std	Y+56, r24	; 0x38
    12f4:	df 91       	pop	r29
    12f6:	cf 91       	pop	r28
    12f8:	08 95       	ret

000012fa <TCounter::Reset()>:
_ZN8TCounter5ResetEv():
    12fa:	cf 93       	push	r28
    12fc:	df 93       	push	r29
    12fe:	ec 01       	movw	r28, r24
    1300:	65 e8       	ldi	r22, 0x85	; 133
    1302:	73 e0       	ldi	r23, 0x03	; 3
    1304:	82 ed       	ldi	r24, 0xD2	; 210
    1306:	9a e0       	ldi	r25, 0x0A	; 10
    1308:	0e 94 e9 37 	call	0x6fd2	; 0x6fd2 <Print::println(char const*)>
    130c:	1b 82       	std	Y+3, r1	; 0x03
    130e:	1a 82       	std	Y+2, r1	; 0x02
    1310:	fe 01       	movw	r30, r28
    1312:	e0 5c       	subi	r30, 0xC0	; 192
    1314:	ff 4f       	sbci	r31, 0xFF	; 255
    1316:	10 82       	st	Z, r1
    1318:	11 82       	std	Z+1, r1	; 0x01
    131a:	12 82       	std	Z+2, r1	; 0x02
    131c:	13 82       	std	Z+3, r1	; 0x03
    131e:	70 96       	adiw	r30, 0x10	; 16
    1320:	11 82       	std	Z+1, r1	; 0x01
    1322:	10 82       	st	Z, r1
    1324:	81 e0       	ldi	r24, 0x01	; 1
    1326:	8f ab       	std	Y+55, r24	; 0x37
    1328:	4a 8d       	ldd	r20, Y+26	; 0x1a
    132a:	5b 8d       	ldd	r21, Y+27	; 0x1b
    132c:	c6 5b       	subi	r28, 0xB6	; 182
    132e:	df 4f       	sbci	r29, 0xFF	; 255
    1330:	90 e0       	ldi	r25, 0x00	; 0
    1332:	80 e0       	ldi	r24, 0x00	; 0
    1334:	2f ef       	ldi	r18, 0xFF	; 255
    1336:	3f ef       	ldi	r19, 0xFF	; 255
    1338:	84 17       	cp	r24, r20
    133a:	95 07       	cpc	r25, r21
    133c:	24 f4       	brge	.+8      	; 0x1346 <TCounter::Reset()+0x4c>
    133e:	29 93       	st	Y+, r18
    1340:	39 93       	st	Y+, r19
    1342:	01 96       	adiw	r24, 0x01	; 1
    1344:	f9 cf       	rjmp	.-14     	; 0x1338 <TCounter::Reset()+0x3e>
    1346:	df 91       	pop	r29
    1348:	cf 91       	pop	r28
    134a:	08 95       	ret

0000134c <TCounter::TCounter()>:
_ZN8TCounterC2Ev():
    134c:	cf 93       	push	r28
    134e:	df 93       	push	r29
    1350:	ec 01       	movw	r28, r24
    1352:	19 82       	std	Y+1, r1	; 0x01
    1354:	18 82       	st	Y, r1
    1356:	1b 82       	std	Y+3, r1	; 0x03
    1358:	1a 82       	std	Y+2, r1	; 0x02
    135a:	8c e0       	ldi	r24, 0x0C	; 12
    135c:	8c 83       	std	Y+4, r24	; 0x04
    135e:	87 e2       	ldi	r24, 0x27	; 39
    1360:	8d 83       	std	Y+5, r24	; 0x05
    1362:	80 ec       	ldi	r24, 0xC0	; 192
    1364:	94 ed       	ldi	r25, 0xD4	; 212
    1366:	a1 e0       	ldi	r26, 0x01	; 1
    1368:	b0 e0       	ldi	r27, 0x00	; 0
    136a:	8e 83       	std	Y+6, r24	; 0x06
    136c:	9f 83       	std	Y+7, r25	; 0x07
    136e:	a8 87       	std	Y+8, r26	; 0x08
    1370:	b9 87       	std	Y+9, r27	; 0x09
    1372:	80 e0       	ldi	r24, 0x00	; 0
    1374:	90 ec       	ldi	r25, 0xC0	; 192
    1376:	a8 e2       	ldi	r26, 0x28	; 40
    1378:	b5 e4       	ldi	r27, 0x45	; 69
    137a:	8a 87       	std	Y+10, r24	; 0x0a
    137c:	9b 87       	std	Y+11, r25	; 0x0b
    137e:	ac 87       	std	Y+12, r26	; 0x0c
    1380:	bd 87       	std	Y+13, r27	; 0x0d
    1382:	80 e0       	ldi	r24, 0x00	; 0
    1384:	90 e0       	ldi	r25, 0x00	; 0
    1386:	a8 e0       	ldi	r26, 0x08	; 8
    1388:	b1 e4       	ldi	r27, 0x41	; 65
    138a:	8e 87       	std	Y+14, r24	; 0x0e
    138c:	9f 87       	std	Y+15, r25	; 0x0f
    138e:	a8 8b       	std	Y+16, r26	; 0x10
    1390:	b9 8b       	std	Y+17, r27	; 0x11
    1392:	8f e7       	ldi	r24, 0x7F	; 127
    1394:	9e ee       	ldi	r25, 0xEE	; 238
    1396:	a6 e3       	ldi	r26, 0x36	; 54
    1398:	b0 e0       	ldi	r27, 0x00	; 0
    139a:	8a 8b       	std	Y+18, r24	; 0x12
    139c:	9b 8b       	std	Y+19, r25	; 0x13
    139e:	ac 8b       	std	Y+20, r26	; 0x14
    13a0:	bd 8b       	std	Y+21, r27	; 0x15
    13a2:	84 ef       	ldi	r24, 0xF4	; 244
    13a4:	91 e0       	ldi	r25, 0x01	; 1
    13a6:	a0 e0       	ldi	r26, 0x00	; 0
    13a8:	b0 e0       	ldi	r27, 0x00	; 0
    13aa:	8e 8b       	std	Y+22, r24	; 0x16
    13ac:	9f 8b       	std	Y+23, r25	; 0x17
    13ae:	a8 8f       	std	Y+24, r26	; 0x18
    13b0:	b9 8f       	std	Y+25, r27	; 0x19
    13b2:	83 e0       	ldi	r24, 0x03	; 3
    13b4:	90 e0       	ldi	r25, 0x00	; 0
    13b6:	9b 8f       	std	Y+27, r25	; 0x1b
    13b8:	8a 8f       	std	Y+26, r24	; 0x1a
    13ba:	81 e0       	ldi	r24, 0x01	; 1
    13bc:	90 e0       	ldi	r25, 0x00	; 0
    13be:	9d 8f       	std	Y+29, r25	; 0x1d
    13c0:	8c 8f       	std	Y+28, r24	; 0x1c
    13c2:	1e 8e       	std	Y+30, r1	; 0x1e
    13c4:	1f 8e       	std	Y+31, r1	; 0x1f
    13c6:	18 a2       	std	Y+32, r1	; 0x20
    13c8:	19 a2       	std	Y+33, r1	; 0x21
    13ca:	1a a2       	std	Y+34, r1	; 0x22
    13cc:	1b a2       	std	Y+35, r1	; 0x23
    13ce:	1c a2       	std	Y+36, r1	; 0x24
    13d0:	1d a2       	std	Y+37, r1	; 0x25
    13d2:	1e a2       	std	Y+38, r1	; 0x26
    13d4:	1f a2       	std	Y+39, r1	; 0x27
    13d6:	18 a6       	std	Y+40, r1	; 0x28
    13d8:	19 a6       	std	Y+41, r1	; 0x29
    13da:	1a a6       	std	Y+42, r1	; 0x2a
    13dc:	1b a6       	std	Y+43, r1	; 0x2b
    13de:	1c a6       	std	Y+44, r1	; 0x2c
    13e0:	1d a6       	std	Y+45, r1	; 0x2d
    13e2:	1e a6       	std	Y+46, r1	; 0x2e
    13e4:	1f a6       	std	Y+47, r1	; 0x2f
    13e6:	18 aa       	std	Y+48, r1	; 0x30
    13e8:	1a aa       	std	Y+50, r1	; 0x32
    13ea:	19 aa       	std	Y+49, r1	; 0x31
    13ec:	9c ab       	std	Y+52, r25	; 0x34
    13ee:	8b ab       	std	Y+51, r24	; 0x33
    13f0:	1f aa       	std	Y+55, r1	; 0x37
    13f2:	19 ae       	std	Y+57, r1	; 0x39
    13f4:	18 ae       	std	Y+56, r1	; 0x38
    13f6:	82 e0       	ldi	r24, 0x02	; 2
    13f8:	90 e0       	ldi	r25, 0x00	; 0
    13fa:	9b af       	std	Y+59, r25	; 0x3b
    13fc:	8a af       	std	Y+58, r24	; 0x3a
    13fe:	1c ae       	std	Y+60, r1	; 0x3c
    1400:	1d ae       	std	Y+61, r1	; 0x3d
    1402:	1e ae       	std	Y+62, r1	; 0x3e
    1404:	1f ae       	std	Y+63, r1	; 0x3f
    1406:	6b e8       	ldi	r22, 0x8B	; 139
    1408:	77 e0       	ldi	r23, 0x07	; 7
    140a:	ce 01       	movw	r24, r28
    140c:	8c 5b       	subi	r24, 0xBC	; 188
    140e:	9f 4f       	sbci	r25, 0xFF	; 255
    1410:	0e 94 1c 39 	call	0x7238	; 0x7238 <String::String(char const*)>
    1414:	fe 01       	movw	r30, r28
    1416:	e0 5b       	subi	r30, 0xB0	; 176
    1418:	ff 4f       	sbci	r31, 0xFF	; 255
    141a:	11 82       	std	Z+1, r1	; 0x01
    141c:	10 82       	st	Z, r1
    141e:	ce 01       	movw	r24, r28
    1420:	df 91       	pop	r29
    1422:	cf 91       	pop	r28
    1424:	0c 94 7d 09 	jmp	0x12fa	; 0x12fa <TCounter::Reset()>

00001428 <TCounter::Stop()>:
_ZN8TCounter4StopEv():
    1428:	cf 93       	push	r28
    142a:	df 93       	push	r29
    142c:	ec 01       	movw	r28, r24
    142e:	64 e9       	ldi	r22, 0x94	; 148
    1430:	73 e0       	ldi	r23, 0x03	; 3
    1432:	82 ed       	ldi	r24, 0xD2	; 210
    1434:	9a e0       	ldi	r25, 0x0A	; 10
    1436:	0e 94 e9 37 	call	0x6fd2	; 0x6fd2 <Print::println(char const*)>
    143a:	19 ae       	std	Y+57, r1	; 0x39
    143c:	18 ae       	std	Y+56, r1	; 0x38
_ZN8TCounter13StorePositionEm():
    143e:	62 e4       	ldi	r22, 0x42	; 66
    1440:	73 e0       	ldi	r23, 0x03	; 3
    1442:	82 ed       	ldi	r24, 0xD2	; 210
    1444:	9a e0       	ldi	r25, 0x0A	; 10
    1446:	0e 94 e9 37 	call	0x6fd2	; 0x6fd2 <Print::println(char const*)>
_ZN8TCounter4StopEv():
    144a:	81 e0       	ldi	r24, 0x01	; 1
    144c:	8f ab       	std	Y+55, r24	; 0x37
    144e:	df 91       	pop	r29
    1450:	cf 91       	pop	r28
    1452:	08 95       	ret

00001454 <TCounter::FastWind(int)>:
_ZN8TCounter8FastWindEi():
    1454:	0f 93       	push	r16
    1456:	1f 93       	push	r17
    1458:	cf 93       	push	r28
    145a:	df 93       	push	r29
    145c:	ec 01       	movw	r28, r24
    145e:	8b 01       	movw	r16, r22
    1460:	7a ab       	std	Y+50, r23	; 0x32
    1462:	69 ab       	std	Y+49, r22	; 0x31
    1464:	82 e0       	ldi	r24, 0x02	; 2
    1466:	90 e0       	ldi	r25, 0x00	; 0
    1468:	99 af       	std	Y+57, r25	; 0x39
    146a:	88 af       	std	Y+56, r24	; 0x38
    146c:	81 e0       	ldi	r24, 0x01	; 1
    146e:	8f ab       	std	Y+55, r24	; 0x37
    1470:	62 ea       	ldi	r22, 0xA2	; 162
    1472:	73 e0       	ldi	r23, 0x03	; 3
    1474:	82 ed       	ldi	r24, 0xD2	; 210
    1476:	9a e0       	ldi	r25, 0x0A	; 10
    1478:	0e 94 c4 37 	call	0x6f88	; 0x6f88 <Print::print(char const*)>
    147c:	4a e0       	ldi	r20, 0x0A	; 10
    147e:	50 e0       	ldi	r21, 0x00	; 0
    1480:	b8 01       	movw	r22, r16
    1482:	82 ed       	ldi	r24, 0xD2	; 210
    1484:	9a e0       	ldi	r25, 0x0A	; 10
    1486:	0e 94 94 38 	call	0x7128	; 0x7128 <Print::print(int, int)>
    148a:	6d ea       	ldi	r22, 0xAD	; 173
    148c:	73 e0       	ldi	r23, 0x03	; 3
    148e:	82 ed       	ldi	r24, 0xD2	; 210
    1490:	9a e0       	ldi	r25, 0x0A	; 10
    1492:	0e 94 c4 37 	call	0x6f88	; 0x6f88 <Print::print(char const*)>
    1496:	69 a9       	ldd	r22, Y+49	; 0x31
    1498:	7a a9       	ldd	r23, Y+50	; 0x32
    149a:	4a e0       	ldi	r20, 0x0A	; 10
    149c:	50 e0       	ldi	r21, 0x00	; 0
    149e:	82 ed       	ldi	r24, 0xD2	; 210
    14a0:	9a e0       	ldi	r25, 0x0A	; 10
    14a2:	0e 94 94 38 	call	0x7128	; 0x7128 <Print::print(int, int)>
    14a6:	6e eb       	ldi	r22, 0xBE	; 190
    14a8:	73 e0       	ldi	r23, 0x03	; 3
    14aa:	82 ed       	ldi	r24, 0xD2	; 210
    14ac:	9a e0       	ldi	r25, 0x0A	; 10
    14ae:	df 91       	pop	r29
    14b0:	cf 91       	pop	r28
    14b2:	1f 91       	pop	r17
    14b4:	0f 91       	pop	r16
    14b6:	0c 94 e9 37 	jmp	0x6fd2	; 0x6fd2 <Print::println(char const*)>

000014ba <TCounter::GetCurrentPosition()>:
_ZN8TCounter18GetCurrentPositionEv():
    14ba:	fc 01       	movw	r30, r24
    14bc:	85 a9       	ldd	r24, Z+53	; 0x35
    14be:	96 a9       	ldd	r25, Z+54	; 0x36
    14c0:	08 95       	ret

000014c2 <TCounter::GetMemoryPosition(int)>:
_ZN8TCounter17GetMemoryPositionEi():
    14c2:	9b 01       	movw	r18, r22
    14c4:	21 50       	subi	r18, 0x01	; 1
    14c6:	31 09       	sbc	r19, r1
    14c8:	24 30       	cpi	r18, 0x04	; 4
    14ca:	31 05       	cpc	r19, r1
    14cc:	50 f4       	brcc	.+20     	; 0x14e2 <TCounter::GetMemoryPosition(int)+0x20>
    14ce:	6c 5d       	subi	r22, 0xDC	; 220
    14d0:	7f 4f       	sbci	r23, 0xFF	; 255
    14d2:	66 0f       	add	r22, r22
    14d4:	77 1f       	adc	r23, r23
    14d6:	68 0f       	add	r22, r24
    14d8:	79 1f       	adc	r23, r25
    14da:	fb 01       	movw	r30, r22
    14dc:	80 81       	ld	r24, Z
    14de:	91 81       	ldd	r25, Z+1	; 0x01
    14e0:	08 95       	ret
    14e2:	8f ef       	ldi	r24, 0xFF	; 255
    14e4:	9f ef       	ldi	r25, 0xFF	; 255
    14e6:	08 95       	ret

000014e8 <TCounter::IsAtPosition(int)>:
_ZN8TCounter12IsAtPositionEi():
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TCounter.cpp:365
/************************************************************************
 * IsAtPosition
 * 
 * *********************************************************************/
bool TCounter::IsAtPosition(int pos)
{
    14e8:	fc 01       	movw	r30, r24
    14ea:	81 a9       	ldd	r24, Z+49	; 0x31
    14ec:	92 a9       	ldd	r25, Z+50	; 0x32
    14ee:	25 a9       	ldd	r18, Z+53	; 0x35
    14f0:	36 a9       	ldd	r19, Z+54	; 0x36
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TCounter.cpp:367
    bool found = false;
    if (pos == 0) {
    14f2:	61 15       	cp	r22, r1
    14f4:	71 05       	cpc	r23, r1
    14f6:	c1 f4       	brne	.+48     	; 0x1528 <TCounter::IsAtPosition(int)+0x40>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TCounter.cpp:369

        if (WindDirection < 0) found = Seconds <= 1;
    14f8:	97 ff       	sbrs	r25, 7
    14fa:	06 c0       	rjmp	.+12     	; 0x1508 <TCounter::IsAtPosition(int)+0x20>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TCounter.cpp:369 (discriminator 1)
    14fc:	81 e0       	ldi	r24, 0x01	; 1
    14fe:	22 30       	cpi	r18, 0x02	; 2
    1500:	31 05       	cpc	r19, r1
    1502:	34 f0       	brlt	.+12     	; 0x1510 <TCounter::IsAtPosition(int)+0x28>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TCounter.cpp:370
        else found = Seconds >= -1;
    1504:	80 e0       	ldi	r24, 0x00	; 0
    1506:	04 c0       	rjmp	.+8      	; 0x1510 <TCounter::IsAtPosition(int)+0x28>
    1508:	81 e0       	ldi	r24, 0x01	; 1
    150a:	2f 3f       	cpi	r18, 0xFF	; 255
    150c:	3f 4f       	sbci	r19, 0xFF	; 255
    150e:	d4 f3       	brlt	.-12     	; 0x1504 <TCounter::IsAtPosition(int)+0x1c>
_ZN8TCounter8OverflowEv():
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TCounter.cpp:352
 * Overflow
 * 
 * *********************************************************************/
bool TCounter::Overflow()
{
    bool a = overflow;
    1510:	90 a9       	ldd	r25, Z+48	; 0x30
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TCounter.cpp:353
    overflow = false;
    1512:	10 aa       	std	Z+48, r1	; 0x30
_ZN8TCounter12IsAtPositionEi():
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TCounter.cpp:371
    bool found = false;
    if (pos == 0) {

        if (WindDirection < 0) found = Seconds <= 1;
        else found = Seconds >= -1;
        if (Overflow()) found = true;
    1514:	99 23       	and	r25, r25
    1516:	99 f0       	breq	.+38     	; 0x153e <TCounter::IsAtPosition(int)+0x56>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TCounter.cpp:380
    {
        if (WindDirection < 0) found = Seconds < pos + 1;
        else found = (Seconds > pos - 1);
    }
    #ifdef DEBUG
        if (found) Serial.println("+Position found");
    1518:	61 ed       	ldi	r22, 0xD1	; 209
    151a:	73 e0       	ldi	r23, 0x03	; 3
    151c:	82 ed       	ldi	r24, 0xD2	; 210
    151e:	9a e0       	ldi	r25, 0x0A	; 10
    1520:	0e 94 e9 37 	call	0x6fd2	; 0x6fd2 <Print::println(char const*)>
    1524:	81 e0       	ldi	r24, 0x01	; 1
    1526:	08 95       	ret
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TCounter.cpp:376
        if (Overflow()) found = true;

    } 
    else
    {
        if (WindDirection < 0) found = Seconds < pos + 1;
    1528:	97 ff       	sbrs	r25, 7
    152a:	05 c0       	rjmp	.+10     	; 0x1536 <TCounter::IsAtPosition(int)+0x4e>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TCounter.cpp:376 (discriminator 1)
    152c:	62 17       	cp	r22, r18
    152e:	73 07       	cpc	r23, r19
    1530:	9c f7       	brge	.-26     	; 0x1518 <TCounter::IsAtPosition(int)+0x30>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TCounter.cpp:377
        else found = (Seconds > pos - 1);
    1532:	80 e0       	ldi	r24, 0x00	; 0
    1534:	08 95       	ret
    1536:	26 17       	cp	r18, r22
    1538:	37 07       	cpc	r19, r23
    153a:	74 f7       	brge	.-36     	; 0x1518 <TCounter::IsAtPosition(int)+0x30>
    153c:	fa cf       	rjmp	.-12     	; 0x1532 <TCounter::IsAtPosition(int)+0x4a>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TCounter.cpp:380
    }
    #ifdef DEBUG
        if (found) Serial.println("+Position found");
    153e:	81 11       	cpse	r24, r1
    1540:	eb cf       	rjmp	.-42     	; 0x1518 <TCounter::IsAtPosition(int)+0x30>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TCounter.cpp:384
    #endif
    return found;

}
    1542:	08 95       	ret

00001544 <TCounter::SetDirection(int)>:
_ZN8TCounter12SetDirectionEi():
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TCounter.cpp:393
/************************************************************************
 * SetDirection
 * 
 * *********************************************************************/
void TCounter::SetDirection(int direction)
{
    1544:	fc 01       	movw	r30, r24
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TCounter.cpp:394
    if (Direction != direction) {
    1546:	83 a9       	ldd	r24, Z+51	; 0x33
    1548:	94 a9       	ldd	r25, Z+52	; 0x34
    154a:	86 17       	cp	r24, r22
    154c:	97 07       	cpc	r25, r23
    154e:	21 f0       	breq	.+8      	; 0x1558 <TCounter::SetDirection(int)+0x14>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TCounter.cpp:395
        Direction = direction;
    1550:	74 ab       	std	Z+52, r23	; 0x34
    1552:	63 ab       	std	Z+51, r22	; 0x33
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TCounter.cpp:396
        Modified = true;
    1554:	81 e0       	ldi	r24, 0x01	; 1
    1556:	87 ab       	std	Z+55, r24	; 0x37
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TCounter.cpp:398
    }
}
    1558:	08 95       	ret

0000155a <TCounter::WakeUp()>:
_ZN8TCounter6WakeUpEv():
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TCounter.cpp:407
/************************************************************************
 * WakeUp
 * 
 * *********************************************************************/
void TCounter::WakeUp()
{
    155a:	cf 93       	push	r28
    155c:	df 93       	push	r29
    155e:	ec 01       	movw	r28, r24
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TCounter.cpp:408
    ms = millis();
    1560:	0e 94 44 34 	call	0x6888	; 0x6888 <millis>
    1564:	6c af       	std	Y+60, r22	; 0x3c
    1566:	7d af       	std	Y+61, r23	; 0x3d
    1568:	8e af       	std	Y+62, r24	; 0x3e
    156a:	9f af       	std	Y+63, r25	; 0x3f
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TCounter.cpp:409
}
    156c:	df 91       	pop	r29
    156e:	cf 91       	pop	r28
    1570:	08 95       	ret

00001572 <TCounter::Update()>:
_ZN8TCounter6UpdateEv():
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TCounter.cpp:657

    oled.display();  


    #endif
}
    1572:	08 95       	ret

00001574 <_GLOBAL__sub_I_oled>:
_GLOBAL__sub_I_oled():
    1574:	8f 92       	push	r8
    1576:	9f 92       	push	r9
    1578:	af 92       	push	r10
    157a:	bf 92       	push	r11
    157c:	cf 92       	push	r12
    157e:	df 92       	push	r13
    1580:	ef 92       	push	r14
    1582:	ff 92       	push	r15
    1584:	0f 93       	push	r16
__static_initialization_and_destruction_0():
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TCounter.cpp:19



#define  MAX_READ_BUF  (DS1307_RAM_MAX / 8)

Adafruit_SSD1306 oled(128, 64, &Wire, -1);
    1586:	80 ea       	ldi	r24, 0xA0	; 160
    1588:	88 2e       	mov	r8, r24
    158a:	86 e8       	ldi	r24, 0x86	; 134
    158c:	98 2e       	mov	r9, r24
    158e:	aa 24       	eor	r10, r10
    1590:	a3 94       	inc	r10
    1592:	b1 2c       	mov	r11, r1
    1594:	90 e8       	ldi	r25, 0x80	; 128
    1596:	c9 2e       	mov	r12, r25
    1598:	9a e1       	ldi	r25, 0x1A	; 26
    159a:	d9 2e       	mov	r13, r25
    159c:	96 e0       	ldi	r25, 0x06	; 6
    159e:	e9 2e       	mov	r14, r25
    15a0:	f1 2c       	mov	r15, r1
    15a2:	0f ef       	ldi	r16, 0xFF	; 255
    15a4:	2c ef       	ldi	r18, 0xFC	; 252
    15a6:	39 e0       	ldi	r19, 0x09	; 9
    15a8:	40 e4       	ldi	r20, 0x40	; 64
    15aa:	60 e8       	ldi	r22, 0x80	; 128
    15ac:	8d ea       	ldi	r24, 0xAD	; 173
    15ae:	99 e0       	ldi	r25, 0x09	; 9
    15b0:	0e 94 68 28 	call	0x50d0	; 0x50d0 <Adafruit_SSD1306::Adafruit_SSD1306(unsigned char, unsigned char, TwoWire*, signed char, unsigned long, unsigned long)>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TCounter.cpp:20
MD_DS1307 rtc;
    15b4:	84 ea       	ldi	r24, 0xA4	; 164
    15b6:	99 e0       	ldi	r25, 0x09	; 9
_GLOBAL__sub_I_oled():
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TCounter.cpp:657

    oled.display();  


    #endif
}
    15b8:	0f 91       	pop	r16
    15ba:	ff 90       	pop	r15
    15bc:	ef 90       	pop	r14
    15be:	df 90       	pop	r13
    15c0:	cf 90       	pop	r12
    15c2:	bf 90       	pop	r11
    15c4:	af 90       	pop	r10
    15c6:	9f 90       	pop	r9
    15c8:	8f 90       	pop	r8
__static_initialization_and_destruction_0():
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TCounter.cpp:20


#define  MAX_READ_BUF  (DS1307_RAM_MAX / 8)

Adafruit_SSD1306 oled(128, 64, &Wire, -1);
MD_DS1307 rtc;
    15ca:	0c 94 b4 33 	jmp	0x6768	; 0x6768 <MD_DS1307::MD_DS1307()>

000015ce <_GLOBAL__sub_D_oled>:
_GLOBAL__sub_D_oled():
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TCounter.cpp:19



#define  MAX_READ_BUF  (DS1307_RAM_MAX / 8)

Adafruit_SSD1306 oled(128, 64, &Wire, -1);
    15ce:	8d ea       	ldi	r24, 0xAD	; 173
    15d0:	99 e0       	ldi	r25, 0x09	; 9
    15d2:	0c 94 b3 28 	jmp	0x5166	; 0x5166 <Adafruit_SSD1306::~Adafruit_SSD1306()>

000015d6 <TDisplay::BlinkRecord(bool)>:
_ZN8TDisplay11BlinkRecordEb():
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TDisplay.cpp:255
void TDisplay::ShowText(char s[2])
{
    text[0] = s[0];
    text[1] = s[1];
    HasText = true;
}
    15d6:	fc 01       	movw	r30, r24
    15d8:	67 8b       	std	Z+23, r22	; 0x17
    15da:	08 95       	ret

000015dc <TDisplay::BlinkPlay(bool)>:
_ZN8TDisplay9BlinkPlayEb():
    15dc:	fc 01       	movw	r30, r24
    15de:	66 8b       	std	Z+22, r22	; 0x16
    15e0:	08 95       	ret

000015e2 <TDisplay::pulseClock()>:
_ZN8TDisplay10pulseClockEv():
    15e2:	60 e0       	ldi	r22, 0x00	; 0
    15e4:	86 e1       	ldi	r24, 0x16	; 22
    15e6:	0e 94 54 35 	call	0x6aa8	; 0x6aa8 <digitalWrite>
    15ea:	61 e0       	ldi	r22, 0x01	; 1
    15ec:	86 e1       	ldi	r24, 0x16	; 22
    15ee:	0c 94 54 35 	jmp	0x6aa8	; 0x6aa8 <digitalWrite>

000015f2 <TDisplay::ShowDigit9(int)>:
_ZN8TDisplay10ShowDigit9Ei():
    15f2:	fc 01       	movw	r30, r24
    15f4:	77 fd       	sbrc	r23, 7
    15f6:	0b c0       	rjmp	.+22     	; 0x160e <TDisplay::ShowDigit9(int)+0x1c>
    15f8:	10 8e       	std	Z+24, r1	; 0x18
    15fa:	ab 01       	movw	r20, r22
    15fc:	77 0f       	add	r23, r23
    15fe:	66 0b       	sbc	r22, r22
    1600:	77 0b       	sbc	r23, r23
    1602:	46 83       	std	Z+6, r20	; 0x06
    1604:	57 83       	std	Z+7, r21	; 0x07
    1606:	60 87       	std	Z+8, r22	; 0x08
    1608:	71 87       	std	Z+9, r23	; 0x09
_ZN8TDisplay10RemoveTextEv():
    160a:	17 8e       	std	Z+31, r1	; 0x1f
_ZN8TDisplay10ShowDigit9Ei():
    160c:	08 95       	ret
    160e:	71 95       	neg	r23
    1610:	61 95       	neg	r22
    1612:	71 09       	sbc	r23, r1
    1614:	81 e0       	ldi	r24, 0x01	; 1
    1616:	80 8f       	std	Z+24, r24	; 0x18
    1618:	f0 cf       	rjmp	.-32     	; 0x15fa <TDisplay::ShowDigit9(int)+0x8>

0000161a <TDisplay::ShowDigit(int)>:
_ZN8TDisplay9ShowDigitEi():
    161a:	ab 01       	movw	r20, r22
    161c:	77 0f       	add	r23, r23
    161e:	66 0b       	sbc	r22, r22
    1620:	77 0b       	sbc	r23, r23
    1622:	fc 01       	movw	r30, r24
    1624:	46 83       	std	Z+6, r20	; 0x06
    1626:	57 83       	std	Z+7, r21	; 0x07
    1628:	60 87       	std	Z+8, r22	; 0x08
    162a:	71 87       	std	Z+9, r23	; 0x09
_ZN8TDisplay10RemoveTextEv():
    162c:	17 8e       	std	Z+31, r1	; 0x1f
_ZN8TDisplay9ShowDigitEi():
    162e:	08 95       	ret

00001630 <TDisplay::Programm(int, int)>:
_ZN8TDisplay8ProgrammEii():
    1630:	0f 93       	push	r16
    1632:	1f 93       	push	r17
    1634:	fc 01       	movw	r30, r24
    1636:	81 e0       	ldi	r24, 0x01	; 1
    1638:	85 87       	std	Z+13, r24	; 0x0d
    163a:	57 87       	std	Z+15, r21	; 0x0f
    163c:	46 87       	std	Z+14, r20	; 0x0e
    163e:	2a e0       	ldi	r18, 0x0A	; 10
    1640:	30 e0       	ldi	r19, 0x00	; 0
    1642:	31 8b       	std	Z+17, r19	; 0x11
    1644:	20 8b       	std	Z+16, r18	; 0x10
    1646:	8b 01       	movw	r16, r22
    1648:	07 2e       	mov	r0, r23
    164a:	00 0c       	add	r0, r0
    164c:	22 0b       	sbc	r18, r18
    164e:	33 0b       	sbc	r19, r19
    1650:	06 83       	std	Z+6, r16	; 0x06
    1652:	17 83       	std	Z+7, r17	; 0x07
    1654:	20 87       	std	Z+8, r18	; 0x08
    1656:	31 87       	std	Z+9, r19	; 0x09
    1658:	6e 3f       	cpi	r22, 0xFE	; 254
    165a:	9f ef       	ldi	r25, 0xFF	; 255
    165c:	79 07       	cpc	r23, r25
    165e:	b9 f0       	breq	.+46     	; 0x168e <TDisplay::Programm(int, int)+0x5e>
    1660:	2c f4       	brge	.+10     	; 0x166c <TDisplay::Programm(int, int)+0x3c>
    1662:	6d 3f       	cpi	r22, 0xFD	; 253
    1664:	7f 4f       	sbci	r23, 0xFF	; 255
    1666:	b9 f0       	breq	.+46     	; 0x1696 <TDisplay::Programm(int, int)+0x66>
_ZN8TDisplay10RemoveTextEv():
    1668:	17 8e       	std	Z+31, r1	; 0x1f
_ZN8TDisplay8ProgrammEii():
    166a:	0a c0       	rjmp	.+20     	; 0x1680 <TDisplay::Programm(int, int)+0x50>
    166c:	6f 3f       	cpi	r22, 0xFF	; 255
    166e:	76 07       	cpc	r23, r22
    1670:	51 f0       	breq	.+20     	; 0x1686 <TDisplay::Programm(int, int)+0x56>
    1672:	67 2b       	or	r22, r23
    1674:	c9 f7       	brne	.-14     	; 0x1668 <TDisplay::Programm(int, int)+0x38>
_ZN8TDisplay8ShowTextEPc():
    1676:	93 e4       	ldi	r25, 0x43	; 67
    1678:	95 8f       	std	Z+29, r25	; 0x1d
    167a:	90 e3       	ldi	r25, 0x30	; 48
    167c:	96 8f       	std	Z+30, r25	; 0x1e
    167e:	87 8f       	std	Z+31, r24	; 0x1f
_ZN8TDisplay8ProgrammEii():
    1680:	1f 91       	pop	r17
    1682:	0f 91       	pop	r16
    1684:	08 95       	ret
_ZN8TDisplay8ShowTextEPc():
    1686:	90 e5       	ldi	r25, 0x50	; 80
    1688:	95 8f       	std	Z+29, r25	; 0x1d
    168a:	91 e3       	ldi	r25, 0x31	; 49
    168c:	f7 cf       	rjmp	.-18     	; 0x167c <TDisplay::Programm(int, int)+0x4c>
    168e:	90 e5       	ldi	r25, 0x50	; 80
    1690:	95 8f       	std	Z+29, r25	; 0x1d
    1692:	92 e3       	ldi	r25, 0x32	; 50
    1694:	f3 cf       	rjmp	.-26     	; 0x167c <TDisplay::Programm(int, int)+0x4c>
    1696:	90 e5       	ldi	r25, 0x50	; 80
    1698:	95 8f       	std	Z+29, r25	; 0x1d
    169a:	93 e3       	ldi	r25, 0x33	; 51
    169c:	ef cf       	rjmp	.-34     	; 0x167c <TDisplay::Programm(int, int)+0x4c>

0000169e <TDisplay::WaitingForInput()>:
_ZN8TDisplay15WaitingForInputEv():
    169e:	fc 01       	movw	r30, r24
    16a0:	85 85       	ldd	r24, Z+13	; 0x0d
    16a2:	08 95       	ret

000016a4 <TDisplay::ShowError(short)>:
_ZN8TDisplay9ShowErrorEs():
    16a4:	fc 01       	movw	r30, r24
    16a6:	72 8f       	std	Z+26, r23	; 0x1a
    16a8:	61 8f       	std	Z+25, r22	; 0x19
    16aa:	24 e0       	ldi	r18, 0x04	; 4
    16ac:	30 e0       	ldi	r19, 0x00	; 0
    16ae:	33 8b       	std	Z+19, r19	; 0x13
    16b0:	22 8b       	std	Z+18, r18	; 0x12
    16b2:	08 95       	ret

000016b4 <TDisplay::Clear()>:
_ZN8TDisplay5ClearEv():
    16b4:	cf 93       	push	r28
    16b6:	df 93       	push	r29
    16b8:	fc 01       	movw	r30, r24
    16ba:	15 86       	std	Z+13, r1	; 0x0d
    16bc:	13 86       	std	Z+11, r1	; 0x0b
    16be:	dc 01       	movw	r26, r24
    16c0:	ac 56       	subi	r26, 0x6C	; 108
    16c2:	bf 4f       	sbci	r27, 0xFF	; 255
    16c4:	ec 01       	movw	r28, r24
    16c6:	c4 56       	subi	r28, 0x64	; 100
    16c8:	df 4f       	sbci	r29, 0xFF	; 255
    16ca:	8d 91       	ld	r24, X+
    16cc:	9d 91       	ld	r25, X+
    16ce:	0d 90       	ld	r0, X+
    16d0:	bc 91       	ld	r27, X
    16d2:	a0 2d       	mov	r26, r0
    16d4:	48 81       	ld	r20, Y
    16d6:	59 81       	ldd	r21, Y+1	; 0x01
    16d8:	6a 81       	ldd	r22, Y+2	; 0x02
    16da:	7b 81       	ldd	r23, Y+3	; 0x03
    16dc:	84 0f       	add	r24, r20
    16de:	95 1f       	adc	r25, r21
    16e0:	a6 1f       	adc	r26, r22
    16e2:	b7 1f       	adc	r27, r23
    16e4:	6c 96       	adiw	r28, 0x1c	; 28
    16e6:	48 81       	ld	r20, Y
    16e8:	59 81       	ldd	r21, Y+1	; 0x01
    16ea:	6a 81       	ldd	r22, Y+2	; 0x02
    16ec:	7b 81       	ldd	r23, Y+3	; 0x03
    16ee:	84 0f       	add	r24, r20
    16f0:	95 1f       	adc	r25, r21
    16f2:	a6 1f       	adc	r26, r22
    16f4:	b7 1f       	adc	r27, r23
    16f6:	82 83       	std	Z+2, r24	; 0x02
    16f8:	93 83       	std	Z+3, r25	; 0x03
    16fa:	a4 83       	std	Z+4, r26	; 0x04
    16fc:	b5 83       	std	Z+5, r27	; 0x05
    16fe:	16 82       	std	Z+6, r1	; 0x06
    1700:	17 82       	std	Z+7, r1	; 0x07
    1702:	10 86       	std	Z+8, r1	; 0x08
    1704:	11 86       	std	Z+9, r1	; 0x09
    1706:	10 8e       	std	Z+24, r1	; 0x18
    1708:	16 8a       	std	Z+22, r1	; 0x16
_ZN8TDisplay10RemoveTextEv():
    170a:	17 8e       	std	Z+31, r1	; 0x1f
_ZN8TDisplay5ClearEv():
    170c:	df 91       	pop	r29
    170e:	cf 91       	pop	r28
    1710:	08 95       	ret

00001712 <TDisplay::Play()>:
_ZN8TDisplay4PlayEv():
    1712:	cf 93       	push	r28
    1714:	df 93       	push	r29
    1716:	fc 01       	movw	r30, r24
    1718:	13 86       	std	Z+11, r1	; 0x0b
    171a:	ec 01       	movw	r28, r24
    171c:	ce 5a       	subi	r28, 0xAE	; 174
    171e:	df 4f       	sbci	r29, 0xFF	; 255
    1720:	dc 01       	movw	r26, r24
    1722:	a4 55       	subi	r26, 0x54	; 84
    1724:	bf 4f       	sbci	r27, 0xFF	; 255
    1726:	48 81       	ld	r20, Y
    1728:	59 81       	ldd	r21, Y+1	; 0x01
    172a:	6a 81       	ldd	r22, Y+2	; 0x02
    172c:	7b 81       	ldd	r23, Y+3	; 0x03
    172e:	8d 91       	ld	r24, X+
    1730:	9d 91       	ld	r25, X+
    1732:	0d 90       	ld	r0, X+
    1734:	bc 91       	ld	r27, X
    1736:	a0 2d       	mov	r26, r0
    1738:	48 1b       	sub	r20, r24
    173a:	59 0b       	sbc	r21, r25
    173c:	6a 0b       	sbc	r22, r26
    173e:	7b 0b       	sbc	r23, r27
    1740:	df 01       	movw	r26, r30
    1742:	ac 54       	subi	r26, 0x4C	; 76
    1744:	bf 4f       	sbci	r27, 0xFF	; 255
    1746:	8d 91       	ld	r24, X+
    1748:	9d 91       	ld	r25, X+
    174a:	0d 90       	ld	r0, X+
    174c:	bc 91       	ld	r27, X
    174e:	a0 2d       	mov	r26, r0
    1750:	48 1b       	sub	r20, r24
    1752:	59 0b       	sbc	r21, r25
    1754:	6a 0b       	sbc	r22, r26
    1756:	7b 0b       	sbc	r23, r27
    1758:	82 81       	ldd	r24, Z+2	; 0x02
    175a:	93 81       	ldd	r25, Z+3	; 0x03
    175c:	a4 81       	ldd	r26, Z+4	; 0x04
    175e:	b5 81       	ldd	r27, Z+5	; 0x05
    1760:	84 23       	and	r24, r20
    1762:	95 23       	and	r25, r21
    1764:	a6 23       	and	r26, r22
    1766:	b7 23       	and	r27, r23
    1768:	c2 5a       	subi	r28, 0xA2	; 162
    176a:	df 4f       	sbci	r29, 0xFF	; 255
    176c:	48 81       	ld	r20, Y
    176e:	59 81       	ldd	r21, Y+1	; 0x01
    1770:	6a 81       	ldd	r22, Y+2	; 0x02
    1772:	7b 81       	ldd	r23, Y+3	; 0x03
    1774:	84 2b       	or	r24, r20
    1776:	95 2b       	or	r25, r21
    1778:	a6 2b       	or	r26, r22
    177a:	b7 2b       	or	r27, r23
    177c:	82 83       	std	Z+2, r24	; 0x02
    177e:	93 83       	std	Z+3, r25	; 0x03
    1780:	a4 83       	std	Z+4, r26	; 0x04
    1782:	b5 83       	std	Z+5, r27	; 0x05
    1784:	16 8a       	std	Z+22, r1	; 0x16
    1786:	df 91       	pop	r29
    1788:	cf 91       	pop	r28
    178a:	08 95       	ret

0000178c <TDisplay::Stop()>:
_ZN8TDisplay4StopEv():
    178c:	cf 93       	push	r28
    178e:	df 93       	push	r29
    1790:	fc 01       	movw	r30, r24
    1792:	15 86       	std	Z+13, r1	; 0x0d
    1794:	13 86       	std	Z+11, r1	; 0x0b
    1796:	dc 01       	movw	r26, r24
    1798:	ae 5a       	subi	r26, 0xAE	; 174
    179a:	bf 4f       	sbci	r27, 0xFF	; 255
    179c:	ec 01       	movw	r28, r24
    179e:	c0 55       	subi	r28, 0x50	; 80
    17a0:	df 4f       	sbci	r29, 0xFF	; 255
    17a2:	8d 91       	ld	r24, X+
    17a4:	9d 91       	ld	r25, X+
    17a6:	0d 90       	ld	r0, X+
    17a8:	bc 91       	ld	r27, X
    17aa:	a0 2d       	mov	r26, r0
    17ac:	48 81       	ld	r20, Y
    17ae:	59 81       	ldd	r21, Y+1	; 0x01
    17b0:	6a 81       	ldd	r22, Y+2	; 0x02
    17b2:	7b 81       	ldd	r23, Y+3	; 0x03
    17b4:	84 1b       	sub	r24, r20
    17b6:	95 0b       	sbc	r25, r21
    17b8:	a6 0b       	sbc	r26, r22
    17ba:	b7 0b       	sbc	r27, r23
    17bc:	24 97       	sbiw	r28, 0x04	; 4
    17be:	48 81       	ld	r20, Y
    17c0:	59 81       	ldd	r21, Y+1	; 0x01
    17c2:	6a 81       	ldd	r22, Y+2	; 0x02
    17c4:	7b 81       	ldd	r23, Y+3	; 0x03
    17c6:	84 1b       	sub	r24, r20
    17c8:	95 0b       	sbc	r25, r21
    17ca:	a6 0b       	sbc	r26, r22
    17cc:	b7 0b       	sbc	r27, r23
    17ce:	28 96       	adiw	r28, 0x08	; 8
    17d0:	48 81       	ld	r20, Y
    17d2:	59 81       	ldd	r21, Y+1	; 0x01
    17d4:	6a 81       	ldd	r22, Y+2	; 0x02
    17d6:	7b 81       	ldd	r23, Y+3	; 0x03
    17d8:	84 1b       	sub	r24, r20
    17da:	95 0b       	sbc	r25, r21
    17dc:	a6 0b       	sbc	r26, r22
    17de:	b7 0b       	sbc	r27, r23
    17e0:	a0 96       	adiw	r28, 0x20	; 32
    17e2:	48 81       	ld	r20, Y
    17e4:	59 81       	ldd	r21, Y+1	; 0x01
    17e6:	6a 81       	ldd	r22, Y+2	; 0x02
    17e8:	7b 81       	ldd	r23, Y+3	; 0x03
    17ea:	84 1b       	sub	r24, r20
    17ec:	95 0b       	sbc	r25, r21
    17ee:	a6 0b       	sbc	r26, r22
    17f0:	b7 0b       	sbc	r27, r23
    17f2:	42 81       	ldd	r20, Z+2	; 0x02
    17f4:	53 81       	ldd	r21, Z+3	; 0x03
    17f6:	64 81       	ldd	r22, Z+4	; 0x04
    17f8:	75 81       	ldd	r23, Z+5	; 0x05
    17fa:	84 23       	and	r24, r20
    17fc:	95 23       	and	r25, r21
    17fe:	a6 23       	and	r26, r22
    1800:	b7 23       	and	r27, r23
    1802:	82 83       	std	Z+2, r24	; 0x02
    1804:	93 83       	std	Z+3, r25	; 0x03
    1806:	a4 83       	std	Z+4, r26	; 0x04
    1808:	b5 83       	std	Z+5, r27	; 0x05
    180a:	16 82       	std	Z+6, r1	; 0x06
    180c:	17 82       	std	Z+7, r1	; 0x07
    180e:	10 86       	std	Z+8, r1	; 0x08
    1810:	11 86       	std	Z+9, r1	; 0x09
    1812:	10 8e       	std	Z+24, r1	; 0x18
    1814:	16 8a       	std	Z+22, r1	; 0x16
_ZN8TDisplay10RemoveTextEv():
    1816:	17 8e       	std	Z+31, r1	; 0x1f
_ZN8TDisplay4StopEv():
    1818:	df 91       	pop	r29
    181a:	cf 91       	pop	r28
    181c:	08 95       	ret

0000181e <TDisplay::Pause()>:
_ZN8TDisplay5PauseEv():
    181e:	cf 93       	push	r28
    1820:	df 93       	push	r29
    1822:	fc 01       	movw	r30, r24
    1824:	21 e0       	ldi	r18, 0x01	; 1
    1826:	23 87       	std	Z+11, r18	; 0x0b
    1828:	dc 01       	movw	r26, r24
    182a:	ae 5a       	subi	r26, 0xAE	; 174
    182c:	bf 4f       	sbci	r27, 0xFF	; 255
    182e:	ec 01       	movw	r28, r24
    1830:	c4 55       	subi	r28, 0x54	; 84
    1832:	df 4f       	sbci	r29, 0xFF	; 255
    1834:	8d 91       	ld	r24, X+
    1836:	9d 91       	ld	r25, X+
    1838:	0d 90       	ld	r0, X+
    183a:	bc 91       	ld	r27, X
    183c:	a0 2d       	mov	r26, r0
    183e:	48 81       	ld	r20, Y
    1840:	59 81       	ldd	r21, Y+1	; 0x01
    1842:	6a 81       	ldd	r22, Y+2	; 0x02
    1844:	7b 81       	ldd	r23, Y+3	; 0x03
    1846:	84 1b       	sub	r24, r20
    1848:	95 0b       	sbc	r25, r21
    184a:	a6 0b       	sbc	r26, r22
    184c:	b7 0b       	sbc	r27, r23
    184e:	28 96       	adiw	r28, 0x08	; 8
    1850:	48 81       	ld	r20, Y
    1852:	59 81       	ldd	r21, Y+1	; 0x01
    1854:	6a 81       	ldd	r22, Y+2	; 0x02
    1856:	7b 81       	ldd	r23, Y+3	; 0x03
    1858:	84 1b       	sub	r24, r20
    185a:	95 0b       	sbc	r25, r21
    185c:	a6 0b       	sbc	r26, r22
    185e:	b7 0b       	sbc	r27, r23
    1860:	42 81       	ldd	r20, Z+2	; 0x02
    1862:	53 81       	ldd	r21, Z+3	; 0x03
    1864:	64 81       	ldd	r22, Z+4	; 0x04
    1866:	75 81       	ldd	r23, Z+5	; 0x05
    1868:	84 23       	and	r24, r20
    186a:	95 23       	and	r25, r21
    186c:	a6 23       	and	r26, r22
    186e:	b7 23       	and	r27, r23
    1870:	82 83       	std	Z+2, r24	; 0x02
    1872:	93 83       	std	Z+3, r25	; 0x03
    1874:	a4 83       	std	Z+4, r26	; 0x04
    1876:	b5 83       	std	Z+5, r27	; 0x05
    1878:	26 8b       	std	Z+22, r18	; 0x16
    187a:	df 91       	pop	r29
    187c:	cf 91       	pop	r28
    187e:	08 95       	ret

00001880 <TDisplay::WindLeft()>:
_ZN8TDisplay8WindLeftEv():
    1880:	0f 93       	push	r16
    1882:	1f 93       	push	r17
    1884:	dc 01       	movw	r26, r24
    1886:	ae 5a       	subi	r26, 0xAE	; 174
    1888:	bf 4f       	sbci	r27, 0xFF	; 255
    188a:	fc 01       	movw	r30, r24
    188c:	e4 55       	subi	r30, 0x54	; 84
    188e:	ff 4f       	sbci	r31, 0xFF	; 255
    1890:	4d 91       	ld	r20, X+
    1892:	5d 91       	ld	r21, X+
    1894:	6d 91       	ld	r22, X+
    1896:	7c 91       	ld	r23, X
    1898:	00 81       	ld	r16, Z
    189a:	11 81       	ldd	r17, Z+1	; 0x01
    189c:	22 81       	ldd	r18, Z+2	; 0x02
    189e:	33 81       	ldd	r19, Z+3	; 0x03
    18a0:	40 1b       	sub	r20, r16
    18a2:	51 0b       	sbc	r21, r17
    18a4:	62 0b       	sbc	r22, r18
    18a6:	73 0b       	sbc	r23, r19
    18a8:	fc 01       	movw	r30, r24
    18aa:	02 81       	ldd	r16, Z+2	; 0x02
    18ac:	13 81       	ldd	r17, Z+3	; 0x03
    18ae:	24 81       	ldd	r18, Z+4	; 0x04
    18b0:	35 81       	ldd	r19, Z+5	; 0x05
    18b2:	40 23       	and	r20, r16
    18b4:	51 23       	and	r21, r17
    18b6:	62 23       	and	r22, r18
    18b8:	73 23       	and	r23, r19
    18ba:	ec 54       	subi	r30, 0x4C	; 76
    18bc:	ff 4f       	sbci	r31, 0xFF	; 255
    18be:	00 81       	ld	r16, Z
    18c0:	11 81       	ldd	r17, Z+1	; 0x01
    18c2:	22 81       	ldd	r18, Z+2	; 0x02
    18c4:	33 81       	ldd	r19, Z+3	; 0x03
    18c6:	40 2b       	or	r20, r16
    18c8:	51 2b       	or	r21, r17
    18ca:	62 2b       	or	r22, r18
    18cc:	73 2b       	or	r23, r19
    18ce:	fc 01       	movw	r30, r24
    18d0:	42 83       	std	Z+2, r20	; 0x02
    18d2:	53 83       	std	Z+3, r21	; 0x03
    18d4:	64 83       	std	Z+4, r22	; 0x04
    18d6:	75 83       	std	Z+5, r23	; 0x05
    18d8:	1f 91       	pop	r17
    18da:	0f 91       	pop	r16
    18dc:	08 95       	ret

000018de <TDisplay::WindRight()>:
_ZN8TDisplay9WindRightEv():
    18de:	0f 93       	push	r16
    18e0:	1f 93       	push	r17
    18e2:	dc 01       	movw	r26, r24
    18e4:	ae 5a       	subi	r26, 0xAE	; 174
    18e6:	bf 4f       	sbci	r27, 0xFF	; 255
    18e8:	fc 01       	movw	r30, r24
    18ea:	ec 54       	subi	r30, 0x4C	; 76
    18ec:	ff 4f       	sbci	r31, 0xFF	; 255
    18ee:	4d 91       	ld	r20, X+
    18f0:	5d 91       	ld	r21, X+
    18f2:	6d 91       	ld	r22, X+
    18f4:	7c 91       	ld	r23, X
    18f6:	00 81       	ld	r16, Z
    18f8:	11 81       	ldd	r17, Z+1	; 0x01
    18fa:	22 81       	ldd	r18, Z+2	; 0x02
    18fc:	33 81       	ldd	r19, Z+3	; 0x03
    18fe:	40 1b       	sub	r20, r16
    1900:	51 0b       	sbc	r21, r17
    1902:	62 0b       	sbc	r22, r18
    1904:	73 0b       	sbc	r23, r19
    1906:	fc 01       	movw	r30, r24
    1908:	02 81       	ldd	r16, Z+2	; 0x02
    190a:	13 81       	ldd	r17, Z+3	; 0x03
    190c:	24 81       	ldd	r18, Z+4	; 0x04
    190e:	35 81       	ldd	r19, Z+5	; 0x05
    1910:	40 23       	and	r20, r16
    1912:	51 23       	and	r21, r17
    1914:	62 23       	and	r22, r18
    1916:	73 23       	and	r23, r19
    1918:	e4 55       	subi	r30, 0x54	; 84
    191a:	ff 4f       	sbci	r31, 0xFF	; 255
    191c:	00 81       	ld	r16, Z
    191e:	11 81       	ldd	r17, Z+1	; 0x01
    1920:	22 81       	ldd	r18, Z+2	; 0x02
    1922:	33 81       	ldd	r19, Z+3	; 0x03
    1924:	40 2b       	or	r20, r16
    1926:	51 2b       	or	r21, r17
    1928:	62 2b       	or	r22, r18
    192a:	73 2b       	or	r23, r19
    192c:	fc 01       	movw	r30, r24
    192e:	42 83       	std	Z+2, r20	; 0x02
    1930:	53 83       	std	Z+3, r21	; 0x03
    1932:	64 83       	std	Z+4, r22	; 0x04
    1934:	75 83       	std	Z+5, r23	; 0x05
    1936:	1f 91       	pop	r17
    1938:	0f 91       	pop	r16
    193a:	08 95       	ret

0000193c <TDisplay::DirectionLeft()>:
_ZN8TDisplay13DirectionLeftEv():
    193c:	0f 93       	push	r16
    193e:	1f 93       	push	r17
    1940:	dc 01       	movw	r26, r24
    1942:	ae 5a       	subi	r26, 0xAE	; 174
    1944:	bf 4f       	sbci	r27, 0xFF	; 255
    1946:	fc 01       	movw	r30, r24
    1948:	e8 54       	subi	r30, 0x48	; 72
    194a:	ff 4f       	sbci	r31, 0xFF	; 255
    194c:	4d 91       	ld	r20, X+
    194e:	5d 91       	ld	r21, X+
    1950:	6d 91       	ld	r22, X+
    1952:	7c 91       	ld	r23, X
    1954:	00 81       	ld	r16, Z
    1956:	11 81       	ldd	r17, Z+1	; 0x01
    1958:	22 81       	ldd	r18, Z+2	; 0x02
    195a:	33 81       	ldd	r19, Z+3	; 0x03
    195c:	40 1b       	sub	r20, r16
    195e:	51 0b       	sbc	r21, r17
    1960:	62 0b       	sbc	r22, r18
    1962:	73 0b       	sbc	r23, r19
    1964:	fc 01       	movw	r30, r24
    1966:	02 81       	ldd	r16, Z+2	; 0x02
    1968:	13 81       	ldd	r17, Z+3	; 0x03
    196a:	24 81       	ldd	r18, Z+4	; 0x04
    196c:	35 81       	ldd	r19, Z+5	; 0x05
    196e:	40 23       	and	r20, r16
    1970:	51 23       	and	r21, r17
    1972:	62 23       	and	r22, r18
    1974:	73 23       	and	r23, r19
    1976:	e8 55       	subi	r30, 0x58	; 88
    1978:	ff 4f       	sbci	r31, 0xFF	; 255
    197a:	00 81       	ld	r16, Z
    197c:	11 81       	ldd	r17, Z+1	; 0x01
    197e:	22 81       	ldd	r18, Z+2	; 0x02
    1980:	33 81       	ldd	r19, Z+3	; 0x03
    1982:	40 2b       	or	r20, r16
    1984:	51 2b       	or	r21, r17
    1986:	62 2b       	or	r22, r18
    1988:	73 2b       	or	r23, r19
    198a:	fc 01       	movw	r30, r24
    198c:	42 83       	std	Z+2, r20	; 0x02
    198e:	53 83       	std	Z+3, r21	; 0x03
    1990:	64 83       	std	Z+4, r22	; 0x04
    1992:	75 83       	std	Z+5, r23	; 0x05
    1994:	1f 91       	pop	r17
    1996:	0f 91       	pop	r16
    1998:	08 95       	ret

0000199a <TDisplay::DirectionRight()>:
_ZN8TDisplay14DirectionRightEv():
    199a:	0f 93       	push	r16
    199c:	1f 93       	push	r17
    199e:	dc 01       	movw	r26, r24
    19a0:	ae 5a       	subi	r26, 0xAE	; 174
    19a2:	bf 4f       	sbci	r27, 0xFF	; 255
    19a4:	fc 01       	movw	r30, r24
    19a6:	e8 55       	subi	r30, 0x58	; 88
    19a8:	ff 4f       	sbci	r31, 0xFF	; 255
    19aa:	4d 91       	ld	r20, X+
    19ac:	5d 91       	ld	r21, X+
    19ae:	6d 91       	ld	r22, X+
    19b0:	7c 91       	ld	r23, X
    19b2:	00 81       	ld	r16, Z
    19b4:	11 81       	ldd	r17, Z+1	; 0x01
    19b6:	22 81       	ldd	r18, Z+2	; 0x02
    19b8:	33 81       	ldd	r19, Z+3	; 0x03
    19ba:	40 1b       	sub	r20, r16
    19bc:	51 0b       	sbc	r21, r17
    19be:	62 0b       	sbc	r22, r18
    19c0:	73 0b       	sbc	r23, r19
    19c2:	fc 01       	movw	r30, r24
    19c4:	02 81       	ldd	r16, Z+2	; 0x02
    19c6:	13 81       	ldd	r17, Z+3	; 0x03
    19c8:	24 81       	ldd	r18, Z+4	; 0x04
    19ca:	35 81       	ldd	r19, Z+5	; 0x05
    19cc:	40 23       	and	r20, r16
    19ce:	51 23       	and	r21, r17
    19d0:	62 23       	and	r22, r18
    19d2:	73 23       	and	r23, r19
    19d4:	e8 54       	subi	r30, 0x48	; 72
    19d6:	ff 4f       	sbci	r31, 0xFF	; 255
    19d8:	00 81       	ld	r16, Z
    19da:	11 81       	ldd	r17, Z+1	; 0x01
    19dc:	22 81       	ldd	r18, Z+2	; 0x02
    19de:	33 81       	ldd	r19, Z+3	; 0x03
    19e0:	40 2b       	or	r20, r16
    19e2:	51 2b       	or	r21, r17
    19e4:	62 2b       	or	r22, r18
    19e6:	73 2b       	or	r23, r19
    19e8:	fc 01       	movw	r30, r24
    19ea:	42 83       	std	Z+2, r20	; 0x02
    19ec:	53 83       	std	Z+3, r21	; 0x03
    19ee:	64 83       	std	Z+4, r22	; 0x04
    19f0:	75 83       	std	Z+5, r23	; 0x05
    19f2:	1f 91       	pop	r17
    19f4:	0f 91       	pop	r16
    19f6:	08 95       	ret

000019f8 <TDisplay::RecordMode(int)>:
_ZN8TDisplay10RecordModeEi():
    19f8:	4f 92       	push	r4
    19fa:	5f 92       	push	r5
    19fc:	6f 92       	push	r6
    19fe:	7f 92       	push	r7
    1a00:	8f 92       	push	r8
    1a02:	9f 92       	push	r9
    1a04:	af 92       	push	r10
    1a06:	bf 92       	push	r11
    1a08:	cf 92       	push	r12
    1a0a:	df 92       	push	r13
    1a0c:	ef 92       	push	r14
    1a0e:	ff 92       	push	r15
    1a10:	cf 93       	push	r28
    1a12:	df 93       	push	r29
    1a14:	fc 01       	movw	r30, r24
    1a16:	9b 01       	movw	r18, r22
    1a18:	dc 01       	movw	r26, r24
    1a1a:	a4 54       	subi	r26, 0x44	; 68
    1a1c:	bf 4f       	sbci	r27, 0xFF	; 255
    1a1e:	cd 90       	ld	r12, X+
    1a20:	dd 90       	ld	r13, X+
    1a22:	ed 90       	ld	r14, X+
    1a24:	fc 90       	ld	r15, X
    1a26:	13 97       	sbiw	r26, 0x03	; 3
    1a28:	14 96       	adiw	r26, 0x04	; 4
    1a2a:	8d 91       	ld	r24, X+
    1a2c:	9d 91       	ld	r25, X+
    1a2e:	0d 90       	ld	r0, X+
    1a30:	bc 91       	ld	r27, X
    1a32:	a0 2d       	mov	r26, r0
    1a34:	ef 01       	movw	r28, r30
    1a36:	cc 53       	subi	r28, 0x3C	; 60
    1a38:	df 4f       	sbci	r29, 0xFF	; 255
    1a3a:	88 80       	ld	r8, Y
    1a3c:	99 80       	ldd	r9, Y+1	; 0x01
    1a3e:	aa 80       	ldd	r10, Y+2	; 0x02
    1a40:	bb 80       	ldd	r11, Y+3	; 0x03
    1a42:	c2 57       	subi	r28, 0x72	; 114
    1a44:	d1 09       	sbc	r29, r1
    1a46:	48 81       	ld	r20, Y
    1a48:	59 81       	ldd	r21, Y+1	; 0x01
    1a4a:	6a 81       	ldd	r22, Y+2	; 0x02
    1a4c:	7b 81       	ldd	r23, Y+3	; 0x03
    1a4e:	4c 19       	sub	r20, r12
    1a50:	5d 09       	sbc	r21, r13
    1a52:	6e 09       	sbc	r22, r14
    1a54:	7f 09       	sbc	r23, r15
    1a56:	48 1b       	sub	r20, r24
    1a58:	59 0b       	sbc	r21, r25
    1a5a:	6a 0b       	sbc	r22, r26
    1a5c:	7b 0b       	sbc	r23, r27
    1a5e:	48 19       	sub	r20, r8
    1a60:	59 09       	sbc	r21, r9
    1a62:	6a 09       	sbc	r22, r10
    1a64:	7b 09       	sbc	r23, r11
    1a66:	42 80       	ldd	r4, Z+2	; 0x02
    1a68:	53 80       	ldd	r5, Z+3	; 0x03
    1a6a:	64 80       	ldd	r6, Z+4	; 0x04
    1a6c:	75 80       	ldd	r7, Z+5	; 0x05
    1a6e:	44 21       	and	r20, r4
    1a70:	55 21       	and	r21, r5
    1a72:	66 21       	and	r22, r6
    1a74:	77 21       	and	r23, r7
    1a76:	22 30       	cpi	r18, 0x02	; 2
    1a78:	31 05       	cpc	r19, r1
    1a7a:	f1 f0       	breq	.+60     	; 0x1ab8 <TDisplay::RecordMode(int)+0xc0>
    1a7c:	23 30       	cpi	r18, 0x03	; 3
    1a7e:	31 05       	cpc	r19, r1
    1a80:	21 f1       	breq	.+72     	; 0x1aca <TDisplay::RecordMode(int)+0xd2>
    1a82:	21 30       	cpi	r18, 0x01	; 1
    1a84:	31 05       	cpc	r19, r1
    1a86:	99 f0       	breq	.+38     	; 0x1aae <TDisplay::RecordMode(int)+0xb6>
    1a88:	42 83       	std	Z+2, r20	; 0x02
    1a8a:	53 83       	std	Z+3, r21	; 0x03
    1a8c:	64 83       	std	Z+4, r22	; 0x04
    1a8e:	75 83       	std	Z+5, r23	; 0x05
    1a90:	df 91       	pop	r29
    1a92:	cf 91       	pop	r28
    1a94:	ff 90       	pop	r15
    1a96:	ef 90       	pop	r14
    1a98:	df 90       	pop	r13
    1a9a:	cf 90       	pop	r12
    1a9c:	bf 90       	pop	r11
    1a9e:	af 90       	pop	r10
    1aa0:	9f 90       	pop	r9
    1aa2:	8f 90       	pop	r8
    1aa4:	7f 90       	pop	r7
    1aa6:	6f 90       	pop	r6
    1aa8:	5f 90       	pop	r5
    1aaa:	4f 90       	pop	r4
    1aac:	08 95       	ret
    1aae:	48 29       	or	r20, r8
    1ab0:	59 29       	or	r21, r9
    1ab2:	6a 29       	or	r22, r10
    1ab4:	7b 29       	or	r23, r11
    1ab6:	e8 cf       	rjmp	.-48     	; 0x1a88 <TDisplay::RecordMode(int)+0x90>
    1ab8:	c8 0c       	add	r12, r8
    1aba:	d9 1c       	adc	r13, r9
    1abc:	ea 1c       	adc	r14, r10
    1abe:	fb 1c       	adc	r15, r11
    1ac0:	4c 29       	or	r20, r12
    1ac2:	5d 29       	or	r21, r13
    1ac4:	6e 29       	or	r22, r14
    1ac6:	7f 29       	or	r23, r15
    1ac8:	df cf       	rjmp	.-66     	; 0x1a88 <TDisplay::RecordMode(int)+0x90>
    1aca:	88 0d       	add	r24, r8
    1acc:	99 1d       	adc	r25, r9
    1ace:	aa 1d       	adc	r26, r10
    1ad0:	bb 1d       	adc	r27, r11
    1ad2:	84 2b       	or	r24, r20
    1ad4:	95 2b       	or	r25, r21
    1ad6:	a6 2b       	or	r26, r22
    1ad8:	b7 2b       	or	r27, r23
    1ada:	82 83       	std	Z+2, r24	; 0x02
    1adc:	93 83       	std	Z+3, r25	; 0x03
    1ade:	a4 83       	std	Z+4, r26	; 0x04
    1ae0:	b5 83       	std	Z+5, r27	; 0x05
    1ae2:	d6 cf       	rjmp	.-84     	; 0x1a90 <TDisplay::RecordMode(int)+0x98>

00001ae4 <TDisplay::ReverseMode(int)>:
_ZN8TDisplay11ReverseModeEi():
    1ae4:	6f 92       	push	r6
    1ae6:	7f 92       	push	r7
    1ae8:	8f 92       	push	r8
    1aea:	9f 92       	push	r9
    1aec:	af 92       	push	r10
    1aee:	bf 92       	push	r11
    1af0:	cf 92       	push	r12
    1af2:	df 92       	push	r13
    1af4:	ef 92       	push	r14
    1af6:	ff 92       	push	r15
    1af8:	0f 93       	push	r16
    1afa:	1f 93       	push	r17
    1afc:	cf 93       	push	r28
    1afe:	df 93       	push	r29
    1b00:	fc 01       	movw	r30, r24
    1b02:	3b 01       	movw	r6, r22
    1b04:	dc 01       	movw	r26, r24
    1b06:	a8 56       	subi	r26, 0x68	; 104
    1b08:	bf 4f       	sbci	r27, 0xFF	; 255
    1b0a:	8d 91       	ld	r24, X+
    1b0c:	9d 91       	ld	r25, X+
    1b0e:	0d 90       	ld	r0, X+
    1b10:	bc 91       	ld	r27, X
    1b12:	a0 2d       	mov	r26, r0
    1b14:	9f 01       	movw	r18, r30
    1b16:	20 56       	subi	r18, 0x60	; 96
    1b18:	3f 4f       	sbci	r19, 0xFF	; 255
    1b1a:	e9 01       	movw	r28, r18
    1b1c:	88 80       	ld	r8, Y
    1b1e:	99 80       	ldd	r9, Y+1	; 0x01
    1b20:	aa 80       	ldd	r10, Y+2	; 0x02
    1b22:	bb 80       	ldd	r11, Y+3	; 0x03
    1b24:	2c 5f       	subi	r18, 0xFC	; 252
    1b26:	3f 4f       	sbci	r19, 0xFF	; 255
    1b28:	e9 01       	movw	r28, r18
    1b2a:	c8 80       	ld	r12, Y
    1b2c:	d9 80       	ldd	r13, Y+1	; 0x01
    1b2e:	ea 80       	ldd	r14, Y+2	; 0x02
    1b30:	fb 80       	ldd	r15, Y+3	; 0x03
    1b32:	22 55       	subi	r18, 0x52	; 82
    1b34:	31 09       	sbc	r19, r1
    1b36:	e9 01       	movw	r28, r18
    1b38:	48 81       	ld	r20, Y
    1b3a:	59 81       	ldd	r21, Y+1	; 0x01
    1b3c:	6a 81       	ldd	r22, Y+2	; 0x02
    1b3e:	7b 81       	ldd	r23, Y+3	; 0x03
    1b40:	48 1b       	sub	r20, r24
    1b42:	59 0b       	sbc	r21, r25
    1b44:	6a 0b       	sbc	r22, r26
    1b46:	7b 0b       	sbc	r23, r27
    1b48:	48 19       	sub	r20, r8
    1b4a:	59 09       	sbc	r21, r9
    1b4c:	6a 09       	sbc	r22, r10
    1b4e:	7b 09       	sbc	r23, r11
    1b50:	8a 01       	movw	r16, r20
    1b52:	9b 01       	movw	r18, r22
    1b54:	0c 19       	sub	r16, r12
    1b56:	1d 09       	sbc	r17, r13
    1b58:	2e 09       	sbc	r18, r14
    1b5a:	3f 09       	sbc	r19, r15
    1b5c:	42 81       	ldd	r20, Z+2	; 0x02
    1b5e:	53 81       	ldd	r21, Z+3	; 0x03
    1b60:	64 81       	ldd	r22, Z+4	; 0x04
    1b62:	75 81       	ldd	r23, Z+5	; 0x05
    1b64:	40 23       	and	r20, r16
    1b66:	51 23       	and	r21, r17
    1b68:	62 23       	and	r22, r18
    1b6a:	73 23       	and	r23, r19
    1b6c:	d2 e0       	ldi	r29, 0x02	; 2
    1b6e:	6d 16       	cp	r6, r29
    1b70:	71 04       	cpc	r7, r1
    1b72:	f9 f0       	breq	.+62     	; 0x1bb2 <TDisplay::ReverseMode(int)+0xce>
    1b74:	23 e0       	ldi	r18, 0x03	; 3
    1b76:	62 16       	cp	r6, r18
    1b78:	71 04       	cpc	r7, r1
    1b7a:	01 f1       	breq	.+64     	; 0x1bbc <TDisplay::ReverseMode(int)+0xd8>
    1b7c:	6a 94       	dec	r6
    1b7e:	67 28       	or	r6, r7
    1b80:	99 f0       	breq	.+38     	; 0x1ba8 <TDisplay::ReverseMode(int)+0xc4>
    1b82:	42 83       	std	Z+2, r20	; 0x02
    1b84:	53 83       	std	Z+3, r21	; 0x03
    1b86:	64 83       	std	Z+4, r22	; 0x04
    1b88:	75 83       	std	Z+5, r23	; 0x05
    1b8a:	df 91       	pop	r29
    1b8c:	cf 91       	pop	r28
    1b8e:	1f 91       	pop	r17
    1b90:	0f 91       	pop	r16
    1b92:	ff 90       	pop	r15
    1b94:	ef 90       	pop	r14
    1b96:	df 90       	pop	r13
    1b98:	cf 90       	pop	r12
    1b9a:	bf 90       	pop	r11
    1b9c:	af 90       	pop	r10
    1b9e:	9f 90       	pop	r9
    1ba0:	8f 90       	pop	r8
    1ba2:	7f 90       	pop	r7
    1ba4:	6f 90       	pop	r6
    1ba6:	08 95       	ret
    1ba8:	4c 29       	or	r20, r12
    1baa:	5d 29       	or	r21, r13
    1bac:	6e 29       	or	r22, r14
    1bae:	7f 29       	or	r23, r15
    1bb0:	e8 cf       	rjmp	.-48     	; 0x1b82 <TDisplay::ReverseMode(int)+0x9e>
    1bb2:	48 29       	or	r20, r8
    1bb4:	59 29       	or	r21, r9
    1bb6:	6a 29       	or	r22, r10
    1bb8:	7b 29       	or	r23, r11
    1bba:	e3 cf       	rjmp	.-58     	; 0x1b82 <TDisplay::ReverseMode(int)+0x9e>
    1bbc:	88 0d       	add	r24, r8
    1bbe:	99 1d       	adc	r25, r9
    1bc0:	aa 1d       	adc	r26, r10
    1bc2:	bb 1d       	adc	r27, r11
    1bc4:	84 2b       	or	r24, r20
    1bc6:	95 2b       	or	r25, r21
    1bc8:	a6 2b       	or	r26, r22
    1bca:	b7 2b       	or	r27, r23
    1bcc:	82 83       	std	Z+2, r24	; 0x02
    1bce:	93 83       	std	Z+3, r25	; 0x03
    1bd0:	a4 83       	std	Z+4, r26	; 0x04
    1bd2:	b5 83       	std	Z+5, r27	; 0x05
    1bd4:	da cf       	rjmp	.-76     	; 0x1b8a <TDisplay::ReverseMode(int)+0xa6>

00001bd6 <TDisplay::ShowAll()>:
_ZN8TDisplay7ShowAllEv():
    1bd6:	0f 93       	push	r16
    1bd8:	1f 93       	push	r17
    1bda:	cf 93       	push	r28
    1bdc:	df 93       	push	r29
    1bde:	8c 01       	movw	r16, r24
    1be0:	61 e0       	ldi	r22, 0x01	; 1
    1be2:	85 e1       	ldi	r24, 0x15	; 21
    1be4:	0e 94 54 35 	call	0x6aa8	; 0x6aa8 <digitalWrite>
    1be8:	c8 01       	movw	r24, r16
    1bea:	0e 94 f1 0a 	call	0x15e2	; 0x15e2 <TDisplay::pulseClock()>
    1bee:	61 e0       	ldi	r22, 0x01	; 1
    1bf0:	85 e1       	ldi	r24, 0x15	; 21
    1bf2:	0e 94 54 35 	call	0x6aa8	; 0x6aa8 <digitalWrite>
    1bf6:	c1 e0       	ldi	r28, 0x01	; 1
    1bf8:	d0 e0       	ldi	r29, 0x00	; 0
    1bfa:	f8 01       	movw	r30, r16
    1bfc:	80 81       	ld	r24, Z
    1bfe:	91 81       	ldd	r25, Z+1	; 0x01
    1c00:	8c 17       	cp	r24, r28
    1c02:	9d 07       	cpc	r25, r29
    1c04:	2c f0       	brlt	.+10     	; 0x1c10 <TDisplay::ShowAll()+0x3a>
    1c06:	c8 01       	movw	r24, r16
    1c08:	0e 94 f1 0a 	call	0x15e2	; 0x15e2 <TDisplay::pulseClock()>
    1c0c:	21 96       	adiw	r28, 0x01	; 1
    1c0e:	f5 cf       	rjmp	.-22     	; 0x1bfa <TDisplay::ShowAll()+0x24>
    1c10:	df 91       	pop	r29
    1c12:	cf 91       	pop	r28
    1c14:	1f 91       	pop	r17
    1c16:	0f 91       	pop	r16
    1c18:	08 95       	ret

00001c1a <TDisplay::ShowNone()>:
_ZN8TDisplay8ShowNoneEv():
    1c1a:	0f 93       	push	r16
    1c1c:	1f 93       	push	r17
    1c1e:	cf 93       	push	r28
    1c20:	df 93       	push	r29
    1c22:	8c 01       	movw	r16, r24
    1c24:	61 e0       	ldi	r22, 0x01	; 1
    1c26:	85 e1       	ldi	r24, 0x15	; 21
    1c28:	0e 94 54 35 	call	0x6aa8	; 0x6aa8 <digitalWrite>
    1c2c:	c8 01       	movw	r24, r16
    1c2e:	0e 94 f1 0a 	call	0x15e2	; 0x15e2 <TDisplay::pulseClock()>
    1c32:	60 e0       	ldi	r22, 0x00	; 0
    1c34:	85 e1       	ldi	r24, 0x15	; 21
    1c36:	0e 94 54 35 	call	0x6aa8	; 0x6aa8 <digitalWrite>
    1c3a:	c1 e0       	ldi	r28, 0x01	; 1
    1c3c:	d0 e0       	ldi	r29, 0x00	; 0
    1c3e:	f8 01       	movw	r30, r16
    1c40:	80 81       	ld	r24, Z
    1c42:	91 81       	ldd	r25, Z+1	; 0x01
    1c44:	8c 17       	cp	r24, r28
    1c46:	9d 07       	cpc	r25, r29
    1c48:	2c f0       	brlt	.+10     	; 0x1c54 <TDisplay::ShowNone()+0x3a>
    1c4a:	c8 01       	movw	r24, r16
    1c4c:	0e 94 f1 0a 	call	0x15e2	; 0x15e2 <TDisplay::pulseClock()>
    1c50:	21 96       	adiw	r28, 0x01	; 1
    1c52:	f5 cf       	rjmp	.-22     	; 0x1c3e <TDisplay::ShowNone()+0x24>
    1c54:	df 91       	pop	r29
    1c56:	cf 91       	pop	r28
    1c58:	1f 91       	pop	r17
    1c5a:	0f 91       	pop	r16
    1c5c:	08 95       	ret

00001c5e <TDisplay::TDisplay()>:
_ZN8TDisplayC2Ev():
    1c5e:	cf 93       	push	r28
    1c60:	df 93       	push	r29
    1c62:	ec 01       	movw	r28, r24
    1c64:	84 e2       	ldi	r24, 0x24	; 36
    1c66:	90 e0       	ldi	r25, 0x00	; 0
    1c68:	99 83       	std	Y+1, r25	; 0x01
    1c6a:	88 83       	st	Y, r24
    1c6c:	1a 82       	std	Y+2, r1	; 0x02
    1c6e:	1b 82       	std	Y+3, r1	; 0x03
    1c70:	1c 82       	std	Y+4, r1	; 0x04
    1c72:	1d 82       	std	Y+5, r1	; 0x05
    1c74:	1e 82       	std	Y+6, r1	; 0x06
    1c76:	1f 82       	std	Y+7, r1	; 0x07
    1c78:	18 86       	std	Y+8, r1	; 0x08
    1c7a:	19 86       	std	Y+9, r1	; 0x09
    1c7c:	1a 86       	std	Y+10, r1	; 0x0a
    1c7e:	1b 86       	std	Y+11, r1	; 0x0b
    1c80:	1c 86       	std	Y+12, r1	; 0x0c
    1c82:	1d 86       	std	Y+13, r1	; 0x0d
    1c84:	1f 86       	std	Y+15, r1	; 0x0f
    1c86:	1e 86       	std	Y+14, r1	; 0x0e
    1c88:	19 8a       	std	Y+17, r1	; 0x11
    1c8a:	18 8a       	std	Y+16, r1	; 0x10
    1c8c:	1b 8a       	std	Y+19, r1	; 0x13
    1c8e:	1a 8a       	std	Y+18, r1	; 0x12
    1c90:	1d 8a       	std	Y+21, r1	; 0x15
    1c92:	1c 8a       	std	Y+20, r1	; 0x14
    1c94:	1e 8a       	std	Y+22, r1	; 0x16
    1c96:	1f 8a       	std	Y+23, r1	; 0x17
    1c98:	18 8e       	std	Y+24, r1	; 0x18
    1c9a:	1a 8e       	std	Y+26, r1	; 0x1a
    1c9c:	19 8e       	std	Y+25, r1	; 0x19
    1c9e:	1c 8e       	std	Y+28, r1	; 0x1c
    1ca0:	1b 8e       	std	Y+27, r1	; 0x1b
    1ca2:	1f 8e       	std	Y+31, r1	; 0x1f
    1ca4:	83 e0       	ldi	r24, 0x03	; 3
    1ca6:	90 e0       	ldi	r25, 0x00	; 0
    1ca8:	99 a3       	std	Y+33, r25	; 0x21
    1caa:	88 a3       	std	Y+32, r24	; 0x20
    1cac:	86 e1       	ldi	r24, 0x16	; 22
    1cae:	e6 e2       	ldi	r30, 0x26	; 38
    1cb0:	f1 e0       	ldi	r31, 0x01	; 1
    1cb2:	de 01       	movw	r26, r28
    1cb4:	92 96       	adiw	r26, 0x22	; 34
    1cb6:	01 90       	ld	r0, Z+
    1cb8:	0d 92       	st	X+, r0
    1cba:	8a 95       	dec	r24
    1cbc:	e1 f7       	brne	.-8      	; 0x1cb6 <TDisplay::TDisplay()+0x58>
    1cbe:	80 91 3c 01 	lds	r24, 0x013C	; 0x80013c <callbackPCINT16+0x18>
    1cc2:	90 91 3d 01 	lds	r25, 0x013D	; 0x80013d <callbackPCINT16+0x19>
    1cc6:	a0 91 3e 01 	lds	r26, 0x013E	; 0x80013e <callbackPCINT16+0x1a>
    1cca:	b0 91 3f 01 	lds	r27, 0x013F	; 0x80013f <callbackPCINT16+0x1b>
    1cce:	88 af       	std	Y+56, r24	; 0x38
    1cd0:	99 af       	std	Y+57, r25	; 0x39
    1cd2:	aa af       	std	Y+58, r26	; 0x3a
    1cd4:	bb af       	std	Y+59, r27	; 0x3b
    1cd6:	89 ef       	ldi	r24, 0xF9	; 249
    1cd8:	90 e0       	ldi	r25, 0x00	; 0
    1cda:	9d af       	std	Y+61, r25	; 0x3d
    1cdc:	8c af       	std	Y+60, r24	; 0x3c
    1cde:	84 e1       	ldi	r24, 0x14	; 20
    1ce0:	e0 e4       	ldi	r30, 0x40	; 64
    1ce2:	f1 e0       	ldi	r31, 0x01	; 1
    1ce4:	de 01       	movw	r26, r28
    1ce6:	de 96       	adiw	r26, 0x3e	; 62
    1ce8:	01 90       	ld	r0, Z+
    1cea:	0d 92       	st	X+, r0
    1cec:	8a 95       	dec	r24
    1cee:	e1 f7       	brne	.-8      	; 0x1ce8 <TDisplay::TDisplay()+0x8a>
    1cf0:	fe 01       	movw	r30, r28
    1cf2:	ee 5a       	subi	r30, 0xAE	; 174
    1cf4:	ff 4f       	sbci	r31, 0xFF	; 255
    1cf6:	8f ef       	ldi	r24, 0xFF	; 255
    1cf8:	9f ef       	ldi	r25, 0xFF	; 255
    1cfa:	dc 01       	movw	r26, r24
    1cfc:	80 83       	st	Z, r24
    1cfe:	91 83       	std	Z+1, r25	; 0x01
    1d00:	a2 83       	std	Z+2, r26	; 0x02
    1d02:	b3 83       	std	Z+3, r27	; 0x03
    1d04:	34 96       	adiw	r30, 0x04	; 4
    1d06:	80 e4       	ldi	r24, 0x40	; 64
    1d08:	90 e0       	ldi	r25, 0x00	; 0
    1d0a:	91 83       	std	Z+1, r25	; 0x01
    1d0c:	80 83       	st	Z, r24
    1d0e:	32 96       	adiw	r30, 0x02	; 2
    1d10:	81 e0       	ldi	r24, 0x01	; 1
    1d12:	90 e0       	ldi	r25, 0x00	; 0
    1d14:	a0 e0       	ldi	r26, 0x00	; 0
    1d16:	b0 e0       	ldi	r27, 0x00	; 0
    1d18:	80 83       	st	Z, r24
    1d1a:	91 83       	std	Z+1, r25	; 0x01
    1d1c:	a2 83       	std	Z+2, r26	; 0x02
    1d1e:	b3 83       	std	Z+3, r27	; 0x03
    1d20:	34 96       	adiw	r30, 0x04	; 4
    1d22:	82 e0       	ldi	r24, 0x02	; 2
    1d24:	90 e0       	ldi	r25, 0x00	; 0
    1d26:	a0 e0       	ldi	r26, 0x00	; 0
    1d28:	b0 e0       	ldi	r27, 0x00	; 0
    1d2a:	80 83       	st	Z, r24
    1d2c:	91 83       	std	Z+1, r25	; 0x01
    1d2e:	a2 83       	std	Z+2, r26	; 0x02
    1d30:	b3 83       	std	Z+3, r27	; 0x03
    1d32:	34 96       	adiw	r30, 0x04	; 4
    1d34:	84 e0       	ldi	r24, 0x04	; 4
    1d36:	90 e0       	ldi	r25, 0x00	; 0
    1d38:	a0 e0       	ldi	r26, 0x00	; 0
    1d3a:	b0 e0       	ldi	r27, 0x00	; 0
    1d3c:	80 83       	st	Z, r24
    1d3e:	91 83       	std	Z+1, r25	; 0x01
    1d40:	a2 83       	std	Z+2, r26	; 0x02
    1d42:	b3 83       	std	Z+3, r27	; 0x03
    1d44:	34 96       	adiw	r30, 0x04	; 4
    1d46:	88 e0       	ldi	r24, 0x08	; 8
    1d48:	90 e0       	ldi	r25, 0x00	; 0
    1d4a:	a0 e0       	ldi	r26, 0x00	; 0
    1d4c:	b0 e0       	ldi	r27, 0x00	; 0
    1d4e:	80 83       	st	Z, r24
    1d50:	91 83       	std	Z+1, r25	; 0x01
    1d52:	a2 83       	std	Z+2, r26	; 0x02
    1d54:	b3 83       	std	Z+3, r27	; 0x03
    1d56:	34 96       	adiw	r30, 0x04	; 4
    1d58:	80 e1       	ldi	r24, 0x10	; 16
    1d5a:	90 e0       	ldi	r25, 0x00	; 0
    1d5c:	a0 e0       	ldi	r26, 0x00	; 0
    1d5e:	b0 e0       	ldi	r27, 0x00	; 0
    1d60:	80 83       	st	Z, r24
    1d62:	91 83       	std	Z+1, r25	; 0x01
    1d64:	a2 83       	std	Z+2, r26	; 0x02
    1d66:	b3 83       	std	Z+3, r27	; 0x03
    1d68:	34 96       	adiw	r30, 0x04	; 4
    1d6a:	80 e2       	ldi	r24, 0x20	; 32
    1d6c:	90 e0       	ldi	r25, 0x00	; 0
    1d6e:	a0 e0       	ldi	r26, 0x00	; 0
    1d70:	b0 e0       	ldi	r27, 0x00	; 0
    1d72:	80 83       	st	Z, r24
    1d74:	91 83       	std	Z+1, r25	; 0x01
    1d76:	a2 83       	std	Z+2, r26	; 0x02
    1d78:	b3 83       	std	Z+3, r27	; 0x03
    1d7a:	34 96       	adiw	r30, 0x04	; 4
    1d7c:	80 e4       	ldi	r24, 0x40	; 64
    1d7e:	90 e0       	ldi	r25, 0x00	; 0
    1d80:	a0 e0       	ldi	r26, 0x00	; 0
    1d82:	b0 e0       	ldi	r27, 0x00	; 0
    1d84:	80 83       	st	Z, r24
    1d86:	91 83       	std	Z+1, r25	; 0x01
    1d88:	a2 83       	std	Z+2, r26	; 0x02
    1d8a:	b3 83       	std	Z+3, r27	; 0x03
    1d8c:	34 96       	adiw	r30, 0x04	; 4
    1d8e:	80 e8       	ldi	r24, 0x80	; 128
    1d90:	90 e0       	ldi	r25, 0x00	; 0
    1d92:	a0 e0       	ldi	r26, 0x00	; 0
    1d94:	b0 e0       	ldi	r27, 0x00	; 0
    1d96:	80 83       	st	Z, r24
    1d98:	91 83       	std	Z+1, r25	; 0x01
    1d9a:	a2 83       	std	Z+2, r26	; 0x02
    1d9c:	b3 83       	std	Z+3, r27	; 0x03
    1d9e:	34 96       	adiw	r30, 0x04	; 4
    1da0:	80 e0       	ldi	r24, 0x00	; 0
    1da2:	91 e0       	ldi	r25, 0x01	; 1
    1da4:	a0 e0       	ldi	r26, 0x00	; 0
    1da6:	b0 e0       	ldi	r27, 0x00	; 0
    1da8:	80 83       	st	Z, r24
    1daa:	91 83       	std	Z+1, r25	; 0x01
    1dac:	a2 83       	std	Z+2, r26	; 0x02
    1dae:	b3 83       	std	Z+3, r27	; 0x03
    1db0:	34 96       	adiw	r30, 0x04	; 4
    1db2:	80 e0       	ldi	r24, 0x00	; 0
    1db4:	92 e0       	ldi	r25, 0x02	; 2
    1db6:	a0 e0       	ldi	r26, 0x00	; 0
    1db8:	b0 e0       	ldi	r27, 0x00	; 0
    1dba:	80 83       	st	Z, r24
    1dbc:	91 83       	std	Z+1, r25	; 0x01
    1dbe:	a2 83       	std	Z+2, r26	; 0x02
    1dc0:	b3 83       	std	Z+3, r27	; 0x03
    1dc2:	34 96       	adiw	r30, 0x04	; 4
    1dc4:	80 e0       	ldi	r24, 0x00	; 0
    1dc6:	94 e0       	ldi	r25, 0x04	; 4
    1dc8:	a0 e0       	ldi	r26, 0x00	; 0
    1dca:	b0 e0       	ldi	r27, 0x00	; 0
    1dcc:	80 83       	st	Z, r24
    1dce:	91 83       	std	Z+1, r25	; 0x01
    1dd0:	a2 83       	std	Z+2, r26	; 0x02
    1dd2:	b3 83       	std	Z+3, r27	; 0x03
    1dd4:	34 96       	adiw	r30, 0x04	; 4
    1dd6:	80 e0       	ldi	r24, 0x00	; 0
    1dd8:	98 e0       	ldi	r25, 0x08	; 8
    1dda:	a0 e0       	ldi	r26, 0x00	; 0
    1ddc:	b0 e0       	ldi	r27, 0x00	; 0
    1dde:	80 83       	st	Z, r24
    1de0:	91 83       	std	Z+1, r25	; 0x01
    1de2:	a2 83       	std	Z+2, r26	; 0x02
    1de4:	b3 83       	std	Z+3, r27	; 0x03
    1de6:	34 96       	adiw	r30, 0x04	; 4
    1de8:	80 e0       	ldi	r24, 0x00	; 0
    1dea:	90 e1       	ldi	r25, 0x10	; 16
    1dec:	a0 e0       	ldi	r26, 0x00	; 0
    1dee:	b0 e0       	ldi	r27, 0x00	; 0
    1df0:	80 83       	st	Z, r24
    1df2:	91 83       	std	Z+1, r25	; 0x01
    1df4:	a2 83       	std	Z+2, r26	; 0x02
    1df6:	b3 83       	std	Z+3, r27	; 0x03
    1df8:	34 96       	adiw	r30, 0x04	; 4
    1dfa:	80 e0       	ldi	r24, 0x00	; 0
    1dfc:	90 e2       	ldi	r25, 0x20	; 32
    1dfe:	a0 e0       	ldi	r26, 0x00	; 0
    1e00:	b0 e0       	ldi	r27, 0x00	; 0
    1e02:	80 83       	st	Z, r24
    1e04:	91 83       	std	Z+1, r25	; 0x01
    1e06:	a2 83       	std	Z+2, r26	; 0x02
    1e08:	b3 83       	std	Z+3, r27	; 0x03
    1e0a:	34 96       	adiw	r30, 0x04	; 4
    1e0c:	80 e0       	ldi	r24, 0x00	; 0
    1e0e:	90 e4       	ldi	r25, 0x40	; 64
    1e10:	a0 e0       	ldi	r26, 0x00	; 0
    1e12:	b0 e0       	ldi	r27, 0x00	; 0
    1e14:	80 83       	st	Z, r24
    1e16:	91 83       	std	Z+1, r25	; 0x01
    1e18:	a2 83       	std	Z+2, r26	; 0x02
    1e1a:	b3 83       	std	Z+3, r27	; 0x03
    1e1c:	34 96       	adiw	r30, 0x04	; 4
    1e1e:	80 e0       	ldi	r24, 0x00	; 0
    1e20:	90 e8       	ldi	r25, 0x80	; 128
    1e22:	a0 e0       	ldi	r26, 0x00	; 0
    1e24:	b0 e0       	ldi	r27, 0x00	; 0
    1e26:	80 83       	st	Z, r24
    1e28:	91 83       	std	Z+1, r25	; 0x01
    1e2a:	a2 83       	std	Z+2, r26	; 0x02
    1e2c:	b3 83       	std	Z+3, r27	; 0x03
    1e2e:	34 96       	adiw	r30, 0x04	; 4
    1e30:	80 e0       	ldi	r24, 0x00	; 0
    1e32:	90 e0       	ldi	r25, 0x00	; 0
    1e34:	a1 e0       	ldi	r26, 0x01	; 1
    1e36:	b0 e0       	ldi	r27, 0x00	; 0
    1e38:	80 83       	st	Z, r24
    1e3a:	91 83       	std	Z+1, r25	; 0x01
    1e3c:	a2 83       	std	Z+2, r26	; 0x02
    1e3e:	b3 83       	std	Z+3, r27	; 0x03
    1e40:	34 96       	adiw	r30, 0x04	; 4
    1e42:	80 e0       	ldi	r24, 0x00	; 0
    1e44:	90 e0       	ldi	r25, 0x00	; 0
    1e46:	a2 e0       	ldi	r26, 0x02	; 2
    1e48:	b0 e0       	ldi	r27, 0x00	; 0
    1e4a:	80 83       	st	Z, r24
    1e4c:	91 83       	std	Z+1, r25	; 0x01
    1e4e:	a2 83       	std	Z+2, r26	; 0x02
    1e50:	b3 83       	std	Z+3, r27	; 0x03
    1e52:	34 96       	adiw	r30, 0x04	; 4
    1e54:	80 e0       	ldi	r24, 0x00	; 0
    1e56:	90 e0       	ldi	r25, 0x00	; 0
    1e58:	a4 e0       	ldi	r26, 0x04	; 4
    1e5a:	b0 e0       	ldi	r27, 0x00	; 0
    1e5c:	80 83       	st	Z, r24
    1e5e:	91 83       	std	Z+1, r25	; 0x01
    1e60:	a2 83       	std	Z+2, r26	; 0x02
    1e62:	b3 83       	std	Z+3, r27	; 0x03
    1e64:	34 96       	adiw	r30, 0x04	; 4
    1e66:	80 e0       	ldi	r24, 0x00	; 0
    1e68:	90 e0       	ldi	r25, 0x00	; 0
    1e6a:	a8 e0       	ldi	r26, 0x08	; 8
    1e6c:	b0 e0       	ldi	r27, 0x00	; 0
    1e6e:	80 83       	st	Z, r24
    1e70:	91 83       	std	Z+1, r25	; 0x01
    1e72:	a2 83       	std	Z+2, r26	; 0x02
    1e74:	b3 83       	std	Z+3, r27	; 0x03
    1e76:	34 96       	adiw	r30, 0x04	; 4
    1e78:	80 e0       	ldi	r24, 0x00	; 0
    1e7a:	90 e0       	ldi	r25, 0x00	; 0
    1e7c:	a0 e1       	ldi	r26, 0x10	; 16
    1e7e:	b0 e0       	ldi	r27, 0x00	; 0
    1e80:	80 83       	st	Z, r24
    1e82:	91 83       	std	Z+1, r25	; 0x01
    1e84:	a2 83       	std	Z+2, r26	; 0x02
    1e86:	b3 83       	std	Z+3, r27	; 0x03
    1e88:	34 96       	adiw	r30, 0x04	; 4
    1e8a:	80 e0       	ldi	r24, 0x00	; 0
    1e8c:	90 e0       	ldi	r25, 0x00	; 0
    1e8e:	a0 e2       	ldi	r26, 0x20	; 32
    1e90:	b0 e0       	ldi	r27, 0x00	; 0
    1e92:	80 83       	st	Z, r24
    1e94:	91 83       	std	Z+1, r25	; 0x01
    1e96:	a2 83       	std	Z+2, r26	; 0x02
    1e98:	b3 83       	std	Z+3, r27	; 0x03
    1e9a:	34 96       	adiw	r30, 0x04	; 4
    1e9c:	80 e0       	ldi	r24, 0x00	; 0
    1e9e:	90 e0       	ldi	r25, 0x00	; 0
    1ea0:	a0 e4       	ldi	r26, 0x40	; 64
    1ea2:	b0 e0       	ldi	r27, 0x00	; 0
    1ea4:	80 83       	st	Z, r24
    1ea6:	91 83       	std	Z+1, r25	; 0x01
    1ea8:	a2 83       	std	Z+2, r26	; 0x02
    1eaa:	b3 83       	std	Z+3, r27	; 0x03
    1eac:	34 96       	adiw	r30, 0x04	; 4
    1eae:	80 e0       	ldi	r24, 0x00	; 0
    1eb0:	90 e0       	ldi	r25, 0x00	; 0
    1eb2:	a0 e8       	ldi	r26, 0x80	; 128
    1eb4:	b0 e0       	ldi	r27, 0x00	; 0
    1eb6:	80 83       	st	Z, r24
    1eb8:	91 83       	std	Z+1, r25	; 0x01
    1eba:	a2 83       	std	Z+2, r26	; 0x02
    1ebc:	b3 83       	std	Z+3, r27	; 0x03
    1ebe:	34 96       	adiw	r30, 0x04	; 4
    1ec0:	80 e0       	ldi	r24, 0x00	; 0
    1ec2:	90 e0       	ldi	r25, 0x00	; 0
    1ec4:	a0 e0       	ldi	r26, 0x00	; 0
    1ec6:	b1 e0       	ldi	r27, 0x01	; 1
    1ec8:	80 83       	st	Z, r24
    1eca:	91 83       	std	Z+1, r25	; 0x01
    1ecc:	a2 83       	std	Z+2, r26	; 0x02
    1ece:	b3 83       	std	Z+3, r27	; 0x03
    1ed0:	34 96       	adiw	r30, 0x04	; 4
    1ed2:	80 e0       	ldi	r24, 0x00	; 0
    1ed4:	90 e0       	ldi	r25, 0x00	; 0
    1ed6:	a0 e0       	ldi	r26, 0x00	; 0
    1ed8:	b2 e0       	ldi	r27, 0x02	; 2
    1eda:	80 83       	st	Z, r24
    1edc:	91 83       	std	Z+1, r25	; 0x01
    1ede:	a2 83       	std	Z+2, r26	; 0x02
    1ee0:	b3 83       	std	Z+3, r27	; 0x03
    1ee2:	34 96       	adiw	r30, 0x04	; 4
    1ee4:	80 e0       	ldi	r24, 0x00	; 0
    1ee6:	90 e0       	ldi	r25, 0x00	; 0
    1ee8:	a0 e0       	ldi	r26, 0x00	; 0
    1eea:	b4 e0       	ldi	r27, 0x04	; 4
    1eec:	80 83       	st	Z, r24
    1eee:	91 83       	std	Z+1, r25	; 0x01
    1ef0:	a2 83       	std	Z+2, r26	; 0x02
    1ef2:	b3 83       	std	Z+3, r27	; 0x03
    1ef4:	34 96       	adiw	r30, 0x04	; 4
    1ef6:	80 e0       	ldi	r24, 0x00	; 0
    1ef8:	90 e0       	ldi	r25, 0x00	; 0
    1efa:	a0 e0       	ldi	r26, 0x00	; 0
    1efc:	b8 e0       	ldi	r27, 0x08	; 8
    1efe:	80 83       	st	Z, r24
    1f00:	91 83       	std	Z+1, r25	; 0x01
    1f02:	a2 83       	std	Z+2, r26	; 0x02
    1f04:	b3 83       	std	Z+3, r27	; 0x03
    1f06:	34 96       	adiw	r30, 0x04	; 4
    1f08:	80 e0       	ldi	r24, 0x00	; 0
    1f0a:	90 e0       	ldi	r25, 0x00	; 0
    1f0c:	a0 e0       	ldi	r26, 0x00	; 0
    1f0e:	b0 e7       	ldi	r27, 0x70	; 112
    1f10:	80 83       	st	Z, r24
    1f12:	91 83       	std	Z+1, r25	; 0x01
    1f14:	a2 83       	std	Z+2, r26	; 0x02
    1f16:	b3 83       	std	Z+3, r27	; 0x03
    1f18:	34 96       	adiw	r30, 0x04	; 4
    1f1a:	80 e0       	ldi	r24, 0x00	; 0
    1f1c:	90 e0       	ldi	r25, 0x00	; 0
    1f1e:	a0 e0       	ldi	r26, 0x00	; 0
    1f20:	b0 e8       	ldi	r27, 0x80	; 128
    1f22:	80 83       	st	Z, r24
    1f24:	91 83       	std	Z+1, r25	; 0x01
    1f26:	a2 83       	std	Z+2, r26	; 0x02
    1f28:	b3 83       	std	Z+3, r27	; 0x03
    1f2a:	34 96       	adiw	r30, 0x04	; 4
    1f2c:	80 e0       	ldi	r24, 0x00	; 0
    1f2e:	90 e0       	ldi	r25, 0x00	; 0
    1f30:	a0 e0       	ldi	r26, 0x00	; 0
    1f32:	b0 e9       	ldi	r27, 0x90	; 144
    1f34:	80 83       	st	Z, r24
    1f36:	91 83       	std	Z+1, r25	; 0x01
    1f38:	a2 83       	std	Z+2, r26	; 0x02
    1f3a:	b3 83       	std	Z+3, r27	; 0x03
    1f3c:	34 96       	adiw	r30, 0x04	; 4
    1f3e:	80 e0       	ldi	r24, 0x00	; 0
    1f40:	90 e0       	ldi	r25, 0x00	; 0
    1f42:	a0 e0       	ldi	r26, 0x00	; 0
    1f44:	b0 ef       	ldi	r27, 0xF0	; 240
    1f46:	80 83       	st	Z, r24
    1f48:	91 83       	std	Z+1, r25	; 0x01
    1f4a:	a2 83       	std	Z+2, r26	; 0x02
    1f4c:	b3 83       	std	Z+3, r27	; 0x03
    1f4e:	61 e0       	ldi	r22, 0x01	; 1
    1f50:	86 e1       	ldi	r24, 0x16	; 22
    1f52:	0e 94 18 35 	call	0x6a30	; 0x6a30 <pinMode>
    1f56:	61 e0       	ldi	r22, 0x01	; 1
    1f58:	85 e1       	ldi	r24, 0x15	; 21
    1f5a:	0e 94 18 35 	call	0x6a30	; 0x6a30 <pinMode>
    1f5e:	ce 01       	movw	r24, r28
    1f60:	0e 94 0d 0e 	call	0x1c1a	; 0x1c1a <TDisplay::ShowNone()>
    1f64:	ce 01       	movw	r24, r28
    1f66:	0e 94 5a 0b 	call	0x16b4	; 0x16b4 <TDisplay::Clear()>
    1f6a:	81 e0       	ldi	r24, 0x01	; 1
    1f6c:	90 e0       	ldi	r25, 0x00	; 0
    1f6e:	9c 8f       	std	Y+28, r25	; 0x1c
    1f70:	8b 8f       	std	Y+27, r24	; 0x1b
    1f72:	df 91       	pop	r29
    1f74:	cf 91       	pop	r28
    1f76:	08 95       	ret

00001f78 <TDisplay::GetTextSegment(char)>:
_ZN8TDisplay14GetTextSegmentEc():
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TDisplay.cpp:258

int TDisplay::GetTextSegment(char c)
{
    1f78:	dc 01       	movw	r26, r24
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TDisplay.cpp:259
    switch (c)
    1f7a:	e0 ed       	ldi	r30, 0xD0	; 208
    1f7c:	e6 0f       	add	r30, r22
    1f7e:	e1 32       	cpi	r30, 0x21	; 33
    1f80:	08 f0       	brcs	.+2      	; 0x1f84 <TDisplay::GetTextSegment(char)+0xc>
    1f82:	51 c0       	rjmp	.+162    	; 0x2026 <TDisplay::GetTextSegment(char)+0xae>
    1f84:	0e 2e       	mov	r0, r30
    1f86:	00 0c       	add	r0, r0
    1f88:	ff 0b       	sbc	r31, r31
    1f8a:	e7 53       	subi	r30, 0x37	; 55
    1f8c:	f0 4f       	sbci	r31, 0xF0	; 240
    1f8e:	0c 94 43 3a 	jmp	0x7486	; 0x7486 <__tablejump2__>
    1f92:	ea 0f       	add	r30, r26
    1f94:	ee 0f       	add	r30, r30
    1f96:	f3 0f       	add	r31, r19
    1f98:	f6 0f       	add	r31, r22
    1f9a:	f9 0f       	add	r31, r25
    1f9c:	fc 0f       	add	r31, r28
    1f9e:	ff 0f       	add	r31, r31
    1fa0:	02 10       	cpse	r0, r2
    1fa2:	05 10       	cpse	r0, r5
    1fa4:	08 10       	cpse	r0, r8
    1fa6:	13 10       	cpse	r1, r3
    1fa8:	13 10       	cpse	r1, r3
    1faa:	13 10       	cpse	r1, r3
    1fac:	13 10       	cpse	r1, r3
    1fae:	13 10       	cpse	r1, r3
    1fb0:	13 10       	cpse	r1, r3
    1fb2:	13 10       	cpse	r1, r3
    1fb4:	13 10       	cpse	r1, r3
    1fb6:	13 10       	cpse	r1, r3
    1fb8:	0b 10       	cpse	r0, r11
    1fba:	13 10       	cpse	r1, r3
    1fbc:	13 10       	cpse	r1, r3
    1fbe:	13 10       	cpse	r1, r3
    1fc0:	13 10       	cpse	r1, r3
    1fc2:	13 10       	cpse	r1, r3
    1fc4:	13 10       	cpse	r1, r3
    1fc6:	13 10       	cpse	r1, r3
    1fc8:	13 10       	cpse	r1, r3
    1fca:	13 10       	cpse	r1, r3
    1fcc:	13 10       	cpse	r1, r3
    1fce:	13 10       	cpse	r1, r3
    1fd0:	13 10       	cpse	r1, r3
    1fd2:	0f 10       	cpse	r0, r15
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TDisplay.cpp:261
    {
        case '0': return segmentCode[0];
    1fd4:	de 96       	adiw	r26, 0x3e	; 62
    1fd6:	8d 91       	ld	r24, X+
    1fd8:	9c 91       	ld	r25, X
    1fda:	08 95       	ret
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TDisplay.cpp:262
        case '1': return segmentCode[1];
    1fdc:	a0 5c       	subi	r26, 0xC0	; 192
    1fde:	bf 4f       	sbci	r27, 0xFF	; 255
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TDisplay.cpp:263
        case '2': return segmentCode[2];
    1fe0:	8d 91       	ld	r24, X+
    1fe2:	9c 91       	ld	r25, X
    1fe4:	08 95       	ret
    1fe6:	ae 5b       	subi	r26, 0xBE	; 190
    1fe8:	bf 4f       	sbci	r27, 0xFF	; 255
    1fea:	fa cf       	rjmp	.-12     	; 0x1fe0 <TDisplay::GetTextSegment(char)+0x68>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TDisplay.cpp:264
        case '3': return segmentCode[3];
    1fec:	ac 5b       	subi	r26, 0xBC	; 188
    1fee:	bf 4f       	sbci	r27, 0xFF	; 255
    1ff0:	f7 cf       	rjmp	.-18     	; 0x1fe0 <TDisplay::GetTextSegment(char)+0x68>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TDisplay.cpp:265
        case '4': return segmentCode[4];
    1ff2:	aa 5b       	subi	r26, 0xBA	; 186
    1ff4:	bf 4f       	sbci	r27, 0xFF	; 255
    1ff6:	f4 cf       	rjmp	.-24     	; 0x1fe0 <TDisplay::GetTextSegment(char)+0x68>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TDisplay.cpp:266
        case '5': return segmentCode[5];
    1ff8:	a8 5b       	subi	r26, 0xB8	; 184
    1ffa:	bf 4f       	sbci	r27, 0xFF	; 255
    1ffc:	f1 cf       	rjmp	.-30     	; 0x1fe0 <TDisplay::GetTextSegment(char)+0x68>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TDisplay.cpp:267
        case '6': return segmentCode[6];
    1ffe:	a6 5b       	subi	r26, 0xB6	; 182
    2000:	bf 4f       	sbci	r27, 0xFF	; 255
    2002:	ee cf       	rjmp	.-36     	; 0x1fe0 <TDisplay::GetTextSegment(char)+0x68>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TDisplay.cpp:268
        case '7': return segmentCode[7];
    2004:	a4 5b       	subi	r26, 0xB4	; 180
    2006:	bf 4f       	sbci	r27, 0xFF	; 255
    2008:	eb cf       	rjmp	.-42     	; 0x1fe0 <TDisplay::GetTextSegment(char)+0x68>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TDisplay.cpp:269
        case '8': return segmentCode[8];
    200a:	a2 5b       	subi	r26, 0xB2	; 178
    200c:	bf 4f       	sbci	r27, 0xFF	; 255
    200e:	e8 cf       	rjmp	.-48     	; 0x1fe0 <TDisplay::GetTextSegment(char)+0x68>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TDisplay.cpp:270
        case '9': return segmentCode[9];
    2010:	a0 5b       	subi	r26, 0xB0	; 176
    2012:	bf 4f       	sbci	r27, 0xFF	; 255
    2014:	e5 cf       	rjmp	.-54     	; 0x1fe0 <TDisplay::GetTextSegment(char)+0x68>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TDisplay.cpp:271
        case 'C': return segmentChars[0];
    2016:	d8 96       	adiw	r26, 0x38	; 56
    2018:	8d 91       	ld	r24, X+
    201a:	9c 91       	ld	r25, X
    201c:	08 95       	ret
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TDisplay.cpp:272
        case 'P': return segmentChars[1];
    201e:	da 96       	adiw	r26, 0x3a	; 58
    2020:	8d 91       	ld	r24, X+
    2022:	9c 91       	ld	r25, X
    2024:	08 95       	ret
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TDisplay.cpp:274
    }
    return 0;
    2026:	90 e0       	ldi	r25, 0x00	; 0
    2028:	80 e0       	ldi	r24, 0x00	; 0
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TDisplay.cpp:275
}
    202a:	08 95       	ret

0000202c <TDisplay::Update()>:
_ZN8TDisplay6UpdateEv():
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TDisplay.cpp:280



void TDisplay::Update()
{
    202c:	2f 92       	push	r2
    202e:	3f 92       	push	r3
    2030:	4f 92       	push	r4
    2032:	5f 92       	push	r5
    2034:	6f 92       	push	r6
    2036:	7f 92       	push	r7
    2038:	8f 92       	push	r8
    203a:	9f 92       	push	r9
    203c:	af 92       	push	r10
    203e:	bf 92       	push	r11
    2040:	cf 92       	push	r12
    2042:	df 92       	push	r13
    2044:	ef 92       	push	r14
    2046:	ff 92       	push	r15
    2048:	0f 93       	push	r16
    204a:	1f 93       	push	r17
    204c:	cf 93       	push	r28
    204e:	df 93       	push	r29
    2050:	00 d0       	rcall	.+0      	; 0x2052 <TDisplay::Update()+0x26>
    2052:	00 d0       	rcall	.+0      	; 0x2054 <TDisplay::Update()+0x28>
    2054:	cd b7       	in	r28, 0x3d	; 61
    2056:	de b7       	in	r29, 0x3e	; 62
    2058:	9c 83       	std	Y+4, r25	; 0x04
    205a:	8b 83       	std	Y+3, r24	; 0x03
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TDisplay.cpp:282
    int blinkChanged = false;
    blinkDelay--;
    205c:	fc 01       	movw	r30, r24
    205e:	84 89       	ldd	r24, Z+20	; 0x14
    2060:	95 89       	ldd	r25, Z+21	; 0x15
    2062:	01 97       	sbiw	r24, 0x01	; 1
    2064:	95 8b       	std	Z+21, r25	; 0x15
    2066:	84 8b       	std	Z+20, r24	; 0x14
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TDisplay.cpp:281



void TDisplay::Update()
{
    int blinkChanged = false;
    2068:	31 2c       	mov	r3, r1
    206a:	21 2c       	mov	r2, r1
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TDisplay.cpp:283
    blinkDelay--;
    if (blinkDelay < 0) {
    206c:	97 ff       	sbrs	r25, 7
    206e:	0b c0       	rjmp	.+22     	; 0x2086 <TDisplay::Update()+0x5a>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TDisplay.cpp:284
        blinkDelay = BLINK_DELAY;
    2070:	80 a1       	ldd	r24, Z+32	; 0x20
    2072:	91 a1       	ldd	r25, Z+33	; 0x21
    2074:	95 8b       	std	Z+21, r25	; 0x15
    2076:	84 8b       	std	Z+20, r24	; 0x14
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TDisplay.cpp:285
        blink = !blink;
    2078:	82 85       	ldd	r24, Z+10	; 0x0a
    207a:	91 e0       	ldi	r25, 0x01	; 1
    207c:	89 27       	eor	r24, r25
    207e:	82 87       	std	Z+10, r24	; 0x0a
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TDisplay.cpp:286
        blinkChanged = true;
    2080:	22 24       	eor	r2, r2
    2082:	23 94       	inc	r2
    2084:	31 2c       	mov	r3, r1
    2086:	0b 81       	ldd	r16, Y+3	; 0x03
    2088:	1c 81       	ldd	r17, Y+4	; 0x04
    208a:	0e 5a       	subi	r16, 0xAE	; 174
    208c:	1f 4f       	sbci	r17, 0xFF	; 255
    208e:	f8 01       	movw	r30, r16
    2090:	c0 80       	ld	r12, Z
    2092:	d1 80       	ldd	r13, Z+1	; 0x01
    2094:	e2 80       	ldd	r14, Z+2	; 0x02
    2096:	f3 80       	ldd	r15, Z+3	; 0x03
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TDisplay.cpp:289
    }
    
    if (paused) {
    2098:	eb 81       	ldd	r30, Y+3	; 0x03
    209a:	fc 81       	ldd	r31, Y+4	; 0x04
    209c:	83 85       	ldd	r24, Z+11	; 0x0b
    209e:	88 23       	and	r24, r24
    20a0:	c1 f0       	breq	.+48     	; 0x20d2 <TDisplay::Update()+0xa6>
    20a2:	82 81       	ldd	r24, Z+2	; 0x02
    20a4:	93 81       	ldd	r25, Z+3	; 0x03
    20a6:	a4 81       	ldd	r26, Z+4	; 0x04
    20a8:	b5 81       	ldd	r27, Z+5	; 0x05
    20aa:	e0 55       	subi	r30, 0x50	; 80
    20ac:	ff 4f       	sbci	r31, 0xFF	; 255
    20ae:	40 81       	ld	r20, Z
    20b0:	51 81       	ldd	r21, Z+1	; 0x01
    20b2:	62 81       	ldd	r22, Z+2	; 0x02
    20b4:	73 81       	ldd	r23, Z+3	; 0x03
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TDisplay.cpp:290
        if (blink)  display |= _PLAY;
    20b6:	eb 81       	ldd	r30, Y+3	; 0x03
    20b8:	fc 81       	ldd	r31, Y+4	; 0x04
    20ba:	22 85       	ldd	r18, Z+10	; 0x0a
    20bc:	22 23       	and	r18, r18
    20be:	09 f4       	brne	.+2      	; 0x20c2 <TDisplay::Update()+0x96>
    20c0:	d7 c1       	rjmp	.+942    	; 0x2470 <TDisplay::Update()+0x444>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TDisplay.cpp:290 (discriminator 1)
    20c2:	84 2b       	or	r24, r20
    20c4:	95 2b       	or	r25, r21
    20c6:	a6 2b       	or	r26, r22
    20c8:	b7 2b       	or	r27, r23
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TDisplay.cpp:291
        else  display &= _FULL - _PLAY;  
    20ca:	82 83       	std	Z+2, r24	; 0x02
    20cc:	93 83       	std	Z+3, r25	; 0x03
    20ce:	a4 83       	std	Z+4, r26	; 0x04
    20d0:	b5 83       	std	Z+5, r27	; 0x05
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TDisplay.cpp:293
    }
    if (programm) {
    20d2:	eb 81       	ldd	r30, Y+3	; 0x03
    20d4:	fc 81       	ldd	r31, Y+4	; 0x04
    20d6:	85 85       	ldd	r24, Z+13	; 0x0d
    20d8:	88 23       	and	r24, r24
    20da:	b1 f1       	breq	.+108    	; 0x2148 <TDisplay::Update()+0x11c>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TDisplay.cpp:294
        display &= _FULL - _PRG_ALL;  
    20dc:	ec 52       	subi	r30, 0x2C	; 44
    20de:	ff 4f       	sbci	r31, 0xFF	; 255
    20e0:	80 81       	ld	r24, Z
    20e2:	91 81       	ldd	r25, Z+1	; 0x01
    20e4:	a2 81       	ldd	r26, Z+2	; 0x02
    20e6:	b3 81       	ldd	r27, Z+3	; 0x03
    20e8:	b7 01       	movw	r22, r14
    20ea:	a6 01       	movw	r20, r12
    20ec:	48 1b       	sub	r20, r24
    20ee:	59 0b       	sbc	r21, r25
    20f0:	6a 0b       	sbc	r22, r26
    20f2:	7b 0b       	sbc	r23, r27
    20f4:	eb 81       	ldd	r30, Y+3	; 0x03
    20f6:	fc 81       	ldd	r31, Y+4	; 0x04
    20f8:	82 81       	ldd	r24, Z+2	; 0x02
    20fa:	93 81       	ldd	r25, Z+3	; 0x03
    20fc:	a4 81       	ldd	r26, Z+4	; 0x04
    20fe:	b5 81       	ldd	r27, Z+5	; 0x05
    2100:	84 23       	and	r24, r20
    2102:	95 23       	and	r25, r21
    2104:	a6 23       	and	r26, r22
    2106:	b7 23       	and	r27, r23
    2108:	82 83       	std	Z+2, r24	; 0x02
    210a:	93 83       	std	Z+3, r25	; 0x03
    210c:	a4 83       	std	Z+4, r26	; 0x04
    210e:	b5 83       	std	Z+5, r27	; 0x05
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TDisplay.cpp:295
        if (blink) {    
    2110:	22 85       	ldd	r18, Z+10	; 0x0a
    2112:	22 23       	and	r18, r18
    2114:	c9 f0       	breq	.+50     	; 0x2148 <TDisplay::Update()+0x11c>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TDisplay.cpp:296
            if (programmFlashCount > 1) {
    2116:	20 89       	ldd	r18, Z+16	; 0x10
    2118:	31 89       	ldd	r19, Z+17	; 0x11
    211a:	22 30       	cpi	r18, 0x02	; 2
    211c:	31 05       	cpc	r19, r1
    211e:	0c f4       	brge	.+2      	; 0x2122 <TDisplay::Update()+0xf6>
    2120:	ce c1       	rjmp	.+924    	; 0x24be <TDisplay::Update()+0x492>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TDisplay.cpp:297
                programmFlashCount--;
    2122:	21 50       	subi	r18, 0x01	; 1
    2124:	31 09       	sbc	r19, r1
    2126:	31 8b       	std	Z+17, r19	; 0x11
    2128:	20 8b       	std	Z+16, r18	; 0x10
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TDisplay.cpp:298
                switch (programmPlace)
    212a:	26 85       	ldd	r18, Z+14	; 0x0e
    212c:	37 85       	ldd	r19, Z+15	; 0x0f
    212e:	21 30       	cpi	r18, 0x01	; 1
    2130:	31 05       	cpc	r19, r1
    2132:	09 f4       	brne	.+2      	; 0x2136 <TDisplay::Update()+0x10a>
    2134:	ac c1       	rjmp	.+856    	; 0x248e <TDisplay::Update()+0x462>
    2136:	22 30       	cpi	r18, 0x02	; 2
    2138:	31 05       	cpc	r19, r1
    213a:	09 f4       	brne	.+2      	; 0x213e <TDisplay::Update()+0x112>
    213c:	bb c1       	rjmp	.+886    	; 0x24b4 <TDisplay::Update()+0x488>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TDisplay.cpp:300
                {
                    case 0: display |= _BLINK; break;
    213e:	e4 53       	subi	r30, 0x34	; 52
    2140:	ff 4f       	sbci	r31, 0xFF	; 255
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TDisplay.cpp:298
    if (programm) {
        display &= _FULL - _PRG_ALL;  
        if (blink) {    
            if (programmFlashCount > 1) {
                programmFlashCount--;
                switch (programmPlace)
    2142:	23 2b       	or	r18, r19
    2144:	09 f4       	brne	.+2      	; 0x2148 <TDisplay::Update()+0x11c>
    2146:	a7 c1       	rjmp	.+846    	; 0x2496 <TDisplay::Update()+0x46a>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TDisplay.cpp:316





    long value = display;
    2148:	eb 81       	ldd	r30, Y+3	; 0x03
    214a:	fc 81       	ldd	r31, Y+4	; 0x04
    214c:	42 80       	ldd	r4, Z+2	; 0x02
    214e:	53 80       	ldd	r5, Z+3	; 0x03
    2150:	64 80       	ldd	r6, Z+4	; 0x04
    2152:	75 80       	ldd	r7, Z+5	; 0x05
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TDisplay.cpp:318

    display &= _FULL - _ERROR;
    2154:	ec 58       	subi	r30, 0x8C	; 140
    2156:	ff 4f       	sbci	r31, 0xFF	; 255
    2158:	fa 83       	std	Y+2, r31	; 0x02
    215a:	e9 83       	std	Y+1, r30	; 0x01
    215c:	80 81       	ld	r24, Z
    215e:	91 81       	ldd	r25, Z+1	; 0x01
    2160:	a2 81       	ldd	r26, Z+2	; 0x02
    2162:	b3 81       	ldd	r27, Z+3	; 0x03
    2164:	46 01       	movw	r8, r12
    2166:	57 01       	movw	r10, r14
    2168:	88 1a       	sub	r8, r24
    216a:	99 0a       	sbc	r9, r25
    216c:	aa 0a       	sbc	r10, r26
    216e:	bb 0a       	sbc	r11, r27
    2170:	d5 01       	movw	r26, r10
    2172:	c4 01       	movw	r24, r8
    2174:	84 21       	and	r24, r4
    2176:	95 21       	and	r25, r5
    2178:	a6 21       	and	r26, r6
    217a:	b7 21       	and	r27, r7
    217c:	eb 81       	ldd	r30, Y+3	; 0x03
    217e:	fc 81       	ldd	r31, Y+4	; 0x04
    2180:	82 83       	std	Z+2, r24	; 0x02
    2182:	93 83       	std	Z+3, r25	; 0x03
    2184:	a4 83       	std	Z+4, r26	; 0x04
    2186:	b5 83       	std	Z+5, r27	; 0x05
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TDisplay.cpp:321
    

    if (init > 0) {
    2188:	23 8d       	ldd	r18, Z+27	; 0x1b
    218a:	34 8d       	ldd	r19, Z+28	; 0x1c
    218c:	12 16       	cp	r1, r18
    218e:	13 06       	cpc	r1, r19
    2190:	0c f0       	brlt	.+2      	; 0x2194 <TDisplay::Update()+0x168>
    2192:	9c c1       	rjmp	.+824    	; 0x24cc <TDisplay::Update()+0x4a0>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TDisplay.cpp:322
        value &= _FULL - (segmentCode[8] << 8) - segmentCode[8];
    2194:	e2 5b       	subi	r30, 0xB2	; 178
    2196:	ff 4f       	sbci	r31, 0xFF	; 255
    2198:	40 81       	ld	r20, Z
    219a:	51 81       	ldd	r21, Z+1	; 0x01
    219c:	94 2f       	mov	r25, r20
    219e:	88 27       	eor	r24, r24
    21a0:	09 2e       	mov	r0, r25
    21a2:	00 0c       	add	r0, r0
    21a4:	aa 0b       	sbc	r26, r26
    21a6:	bb 0b       	sbc	r27, r27
    21a8:	46 01       	movw	r8, r12
    21aa:	57 01       	movw	r10, r14
    21ac:	88 1a       	sub	r8, r24
    21ae:	99 0a       	sbc	r9, r25
    21b0:	aa 0a       	sbc	r10, r26
    21b2:	bb 0a       	sbc	r11, r27
    21b4:	05 2e       	mov	r0, r21
    21b6:	00 0c       	add	r0, r0
    21b8:	66 0b       	sbc	r22, r22
    21ba:	77 0b       	sbc	r23, r23
    21bc:	84 1a       	sub	r8, r20
    21be:	95 0a       	sbc	r9, r21
    21c0:	a6 0a       	sbc	r10, r22
    21c2:	b7 0a       	sbc	r11, r23
    21c4:	48 20       	and	r4, r8
    21c6:	59 20       	and	r5, r9
    21c8:	6a 20       	and	r6, r10
    21ca:	7b 20       	and	r7, r11
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TDisplay.cpp:324

        int pos = init - 1;
    21cc:	c9 01       	movw	r24, r18
    21ce:	01 97       	sbiw	r24, 0x01	; 1
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TDisplay.cpp:325
        if (pos < 11) value += (scroll[pos] << 8);  
    21d0:	0b 97       	sbiw	r24, 0x0b	; 11
    21d2:	94 f4       	brge	.+36     	; 0x21f8 <TDisplay::Update()+0x1cc>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TDisplay.cpp:325 (discriminator 1)
    21d4:	f9 01       	movw	r30, r18
    21d6:	70 96       	adiw	r30, 0x10	; 16
    21d8:	ee 0f       	add	r30, r30
    21da:	ff 1f       	adc	r31, r31
    21dc:	8b 80       	ldd	r8, Y+3	; 0x03
    21de:	9c 80       	ldd	r9, Y+4	; 0x04
    21e0:	e8 0d       	add	r30, r8
    21e2:	f9 1d       	adc	r31, r9
    21e4:	80 e0       	ldi	r24, 0x00	; 0
    21e6:	90 81       	ld	r25, Z
    21e8:	09 2e       	mov	r0, r25
    21ea:	00 0c       	add	r0, r0
    21ec:	aa 0b       	sbc	r26, r26
    21ee:	bb 0b       	sbc	r27, r27
    21f0:	48 0e       	add	r4, r24
    21f2:	59 1e       	adc	r5, r25
    21f4:	6a 1e       	adc	r6, r26
    21f6:	7b 1e       	adc	r7, r27
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TDisplay.cpp:328

        pos++;
        if (pos < 11)  value += scroll[pos];
    21f8:	2b 30       	cpi	r18, 0x0B	; 11
    21fa:	31 05       	cpc	r19, r1
    21fc:	94 f4       	brge	.+36     	; 0x2222 <TDisplay::Update()+0x1f6>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TDisplay.cpp:328 (discriminator 1)
    21fe:	f9 01       	movw	r30, r18
    2200:	71 96       	adiw	r30, 0x11	; 17
    2202:	ee 0f       	add	r30, r30
    2204:	ff 1f       	adc	r31, r31
    2206:	ab 80       	ldd	r10, Y+3	; 0x03
    2208:	bc 80       	ldd	r11, Y+4	; 0x04
    220a:	ea 0d       	add	r30, r10
    220c:	fb 1d       	adc	r31, r11
    220e:	80 81       	ld	r24, Z
    2210:	91 81       	ldd	r25, Z+1	; 0x01
    2212:	09 2e       	mov	r0, r25
    2214:	00 0c       	add	r0, r0
    2216:	aa 0b       	sbc	r26, r26
    2218:	bb 0b       	sbc	r27, r27
    221a:	48 0e       	add	r4, r24
    221c:	59 1e       	adc	r5, r25
    221e:	6a 1e       	adc	r6, r26
    2220:	7b 1e       	adc	r7, r27
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TDisplay.cpp:330

        init++;
    2222:	2f 5f       	subi	r18, 0xFF	; 255
    2224:	3f 4f       	sbci	r19, 0xFF	; 255
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TDisplay.cpp:331
        if (init >= 12)  init = 0;
    2226:	eb 81       	ldd	r30, Y+3	; 0x03
    2228:	fc 81       	ldd	r31, Y+4	; 0x04
    222a:	2c 30       	cpi	r18, 0x0C	; 12
    222c:	31 05       	cpc	r19, r1
    222e:	0c f0       	brlt	.+2      	; 0x2232 <TDisplay::Update()+0x206>
    2230:	4a c1       	rjmp	.+660    	; 0x24c6 <TDisplay::Update()+0x49a>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TDisplay.cpp:330
        if (pos < 11) value += (scroll[pos] << 8);  

        pos++;
        if (pos < 11)  value += scroll[pos];

        init++;
    2232:	34 8f       	std	Z+28, r19	; 0x1c
    2234:	23 8f       	std	Z+27, r18	; 0x1b
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TDisplay.cpp:333
        if (init >= 12)  init = 0;

        delay(150);
    2236:	66 e9       	ldi	r22, 0x96	; 150
    2238:	70 e0       	ldi	r23, 0x00	; 0
    223a:	80 e0       	ldi	r24, 0x00	; 0
    223c:	90 e0       	ldi	r25, 0x00	; 0
    223e:	0e 94 75 34 	call	0x68ea	; 0x68ea <delay>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TDisplay.cpp:360


    }


    if (blinkError > 0) {  
    2242:	eb 81       	ldd	r30, Y+3	; 0x03
    2244:	fc 81       	ldd	r31, Y+4	; 0x04
    2246:	82 89       	ldd	r24, Z+18	; 0x12
    2248:	93 89       	ldd	r25, Z+19	; 0x13
    224a:	18 16       	cp	r1, r24
    224c:	19 06       	cpc	r1, r25
    224e:	0c f0       	brlt	.+2      	; 0x2252 <TDisplay::Update()+0x226>
    2250:	5c c0       	rjmp	.+184    	; 0x230a <TDisplay::Update()+0x2de>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TDisplay.cpp:361
        if (blinkChanged) blinkError--; 
    2252:	23 28       	or	r2, r3
    2254:	19 f0       	breq	.+6      	; 0x225c <TDisplay::Update()+0x230>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TDisplay.cpp:361 (discriminator 1)
    2256:	01 97       	sbiw	r24, 0x01	; 1
    2258:	93 8b       	std	Z+19, r25	; 0x13
    225a:	82 8b       	std	Z+18, r24	; 0x12
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TDisplay.cpp:362
        if (blink) display |= _ERROR;
    225c:	eb 81       	ldd	r30, Y+3	; 0x03
    225e:	fc 81       	ldd	r31, Y+4	; 0x04
    2260:	82 85       	ldd	r24, Z+10	; 0x0a
    2262:	88 23       	and	r24, r24
    2264:	a1 f0       	breq	.+40     	; 0x228e <TDisplay::Update()+0x262>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TDisplay.cpp:362 (discriminator 1)
    2266:	82 81       	ldd	r24, Z+2	; 0x02
    2268:	93 81       	ldd	r25, Z+3	; 0x03
    226a:	a4 81       	ldd	r26, Z+4	; 0x04
    226c:	b5 81       	ldd	r27, Z+5	; 0x05
    226e:	e9 81       	ldd	r30, Y+1	; 0x01
    2270:	fa 81       	ldd	r31, Y+2	; 0x02
    2272:	40 81       	ld	r20, Z
    2274:	51 81       	ldd	r21, Z+1	; 0x01
    2276:	62 81       	ldd	r22, Z+2	; 0x02
    2278:	73 81       	ldd	r23, Z+3	; 0x03
    227a:	84 2b       	or	r24, r20
    227c:	95 2b       	or	r25, r21
    227e:	a6 2b       	or	r26, r22
    2280:	b7 2b       	or	r27, r23
    2282:	eb 81       	ldd	r30, Y+3	; 0x03
    2284:	fc 81       	ldd	r31, Y+4	; 0x04
    2286:	82 83       	std	Z+2, r24	; 0x02
    2288:	93 83       	std	Z+3, r25	; 0x03
    228a:	a4 83       	std	Z+4, r26	; 0x04
    228c:	b5 83       	std	Z+5, r27	; 0x05
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TDisplay.cpp:363
        if (ErrorCode > 0) {
    228e:	eb 81       	ldd	r30, Y+3	; 0x03
    2290:	fc 81       	ldd	r31, Y+4	; 0x04
    2292:	21 8d       	ldd	r18, Z+25	; 0x19
    2294:	32 8d       	ldd	r19, Z+26	; 0x1a
    2296:	12 16       	cp	r1, r18
    2298:	13 06       	cpc	r1, r19
    229a:	bc f5       	brge	.+110    	; 0x230a <TDisplay::Update()+0x2de>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TDisplay.cpp:364
            value &= _FULL - (segmentCode[8] << 8) - segmentCode[8];
    229c:	e2 5b       	subi	r30, 0xB2	; 178
    229e:	ff 4f       	sbci	r31, 0xFF	; 255
    22a0:	40 81       	ld	r20, Z
    22a2:	51 81       	ldd	r21, Z+1	; 0x01
    22a4:	94 2f       	mov	r25, r20
    22a6:	88 27       	eor	r24, r24
    22a8:	09 2e       	mov	r0, r25
    22aa:	00 0c       	add	r0, r0
    22ac:	aa 0b       	sbc	r26, r26
    22ae:	bb 0b       	sbc	r27, r27
    22b0:	f8 01       	movw	r30, r16
    22b2:	80 80       	ld	r8, Z
    22b4:	91 80       	ldd	r9, Z+1	; 0x01
    22b6:	a2 80       	ldd	r10, Z+2	; 0x02
    22b8:	b3 80       	ldd	r11, Z+3	; 0x03
    22ba:	88 1a       	sub	r8, r24
    22bc:	99 0a       	sbc	r9, r25
    22be:	aa 0a       	sbc	r10, r26
    22c0:	bb 0a       	sbc	r11, r27
    22c2:	05 2e       	mov	r0, r21
    22c4:	00 0c       	add	r0, r0
    22c6:	66 0b       	sbc	r22, r22
    22c8:	77 0b       	sbc	r23, r23
    22ca:	84 1a       	sub	r8, r20
    22cc:	95 0a       	sbc	r9, r21
    22ce:	a6 0a       	sbc	r10, r22
    22d0:	b7 0a       	sbc	r11, r23
    22d2:	48 20       	and	r4, r8
    22d4:	59 20       	and	r5, r9
    22d6:	6a 20       	and	r6, r10
    22d8:	7b 20       	and	r7, r11
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TDisplay.cpp:365
            value += segmentCode[ErrorCode] + (ErrorSegment << 8);
    22da:	81 2c       	mov	r8, r1
    22dc:	eb 81       	ldd	r30, Y+3	; 0x03
    22de:	fc 81       	ldd	r31, Y+4	; 0x04
    22e0:	94 ac       	ldd	r9, Z+60	; 0x3c
    22e2:	f9 01       	movw	r30, r18
    22e4:	7f 96       	adiw	r30, 0x1f	; 31
    22e6:	ee 0f       	add	r30, r30
    22e8:	ff 1f       	adc	r31, r31
    22ea:	ab 80       	ldd	r10, Y+3	; 0x03
    22ec:	bc 80       	ldd	r11, Y+4	; 0x04
    22ee:	ea 0d       	add	r30, r10
    22f0:	fb 1d       	adc	r31, r11
    22f2:	80 81       	ld	r24, Z
    22f4:	91 81       	ldd	r25, Z+1	; 0x01
    22f6:	88 0e       	add	r8, r24
    22f8:	99 1e       	adc	r9, r25
    22fa:	09 2c       	mov	r0, r9
    22fc:	00 0c       	add	r0, r0
    22fe:	aa 08       	sbc	r10, r10
    2300:	bb 08       	sbc	r11, r11
    2302:	48 0c       	add	r4, r8
    2304:	59 1c       	adc	r5, r9
    2306:	6a 1c       	adc	r6, r10
    2308:	7b 1c       	adc	r7, r11
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TDisplay.cpp:369
        }
    }

    if (HasText) {
    230a:	eb 81       	ldd	r30, Y+3	; 0x03
    230c:	fc 81       	ldd	r31, Y+4	; 0x04
    230e:	87 8d       	ldd	r24, Z+31	; 0x1f
    2310:	88 23       	and	r24, r24
    2312:	c1 f1       	breq	.+112    	; 0x2384 <TDisplay::Update()+0x358>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TDisplay.cpp:371

        value &= _FULL - (segmentCode[8] << 8) - segmentCode[8];
    2314:	e2 5b       	subi	r30, 0xB2	; 178
    2316:	ff 4f       	sbci	r31, 0xFF	; 255
    2318:	20 81       	ld	r18, Z
    231a:	31 81       	ldd	r19, Z+1	; 0x01
    231c:	92 2f       	mov	r25, r18
    231e:	88 27       	eor	r24, r24
    2320:	09 2e       	mov	r0, r25
    2322:	00 0c       	add	r0, r0
    2324:	aa 0b       	sbc	r26, r26
    2326:	bb 0b       	sbc	r27, r27
    2328:	f8 01       	movw	r30, r16
    232a:	80 80       	ld	r8, Z
    232c:	91 80       	ldd	r9, Z+1	; 0x01
    232e:	a2 80       	ldd	r10, Z+2	; 0x02
    2330:	b3 80       	ldd	r11, Z+3	; 0x03
    2332:	88 1a       	sub	r8, r24
    2334:	99 0a       	sbc	r9, r25
    2336:	aa 0a       	sbc	r10, r26
    2338:	bb 0a       	sbc	r11, r27
    233a:	c9 01       	movw	r24, r18
    233c:	33 0f       	add	r19, r19
    233e:	aa 0b       	sbc	r26, r26
    2340:	bb 0b       	sbc	r27, r27
    2342:	88 1a       	sub	r8, r24
    2344:	99 0a       	sbc	r9, r25
    2346:	aa 0a       	sbc	r10, r26
    2348:	bb 0a       	sbc	r11, r27
    234a:	48 20       	and	r4, r8
    234c:	59 20       	and	r5, r9
    234e:	6a 20       	and	r6, r10
    2350:	7b 20       	and	r7, r11
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TDisplay.cpp:372
        value += GetTextSegment(text[1]) + (GetTextSegment(text[0]) << 8);
    2352:	eb 81       	ldd	r30, Y+3	; 0x03
    2354:	fc 81       	ldd	r31, Y+4	; 0x04
    2356:	66 8d       	ldd	r22, Z+30	; 0x1e
    2358:	cf 01       	movw	r24, r30
    235a:	0e 94 bc 0f 	call	0x1f78	; 0x1f78 <TDisplay::GetTextSegment(char)>
    235e:	4c 01       	movw	r8, r24
    2360:	eb 81       	ldd	r30, Y+3	; 0x03
    2362:	fc 81       	ldd	r31, Y+4	; 0x04
    2364:	65 8d       	ldd	r22, Z+29	; 0x1d
    2366:	cf 01       	movw	r24, r30
    2368:	0e 94 bc 0f 	call	0x1f78	; 0x1f78 <TDisplay::GetTextSegment(char)>
    236c:	c1 2c       	mov	r12, r1
    236e:	d8 2e       	mov	r13, r24
    2370:	8c 0c       	add	r8, r12
    2372:	9d 1c       	adc	r9, r13
    2374:	09 2c       	mov	r0, r9
    2376:	00 0c       	add	r0, r0
    2378:	aa 08       	sbc	r10, r10
    237a:	bb 08       	sbc	r11, r11
    237c:	48 0c       	add	r4, r8
    237e:	59 1c       	adc	r5, r9
    2380:	6a 1c       	adc	r6, r10
    2382:	7b 1c       	adc	r7, r11
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TDisplay.cpp:376

    }

    if (RecordMustBlink) {
    2384:	eb 81       	ldd	r30, Y+3	; 0x03
    2386:	fc 81       	ldd	r31, Y+4	; 0x04
    2388:	87 89       	ldd	r24, Z+23	; 0x17
    238a:	88 23       	and	r24, r24
    238c:	c1 f0       	breq	.+48     	; 0x23be <TDisplay::Update()+0x392>
    238e:	ec 53       	subi	r30, 0x3C	; 60
    2390:	ff 4f       	sbci	r31, 0xFF	; 255
    2392:	40 81       	ld	r20, Z
    2394:	51 81       	ldd	r21, Z+1	; 0x01
    2396:	62 81       	ldd	r22, Z+2	; 0x02
    2398:	73 81       	ldd	r23, Z+3	; 0x03
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TDisplay.cpp:377
        if (!blink) value &= _FULL - _REC;  
    239a:	eb 81       	ldd	r30, Y+3	; 0x03
    239c:	fc 81       	ldd	r31, Y+4	; 0x04
    239e:	82 85       	ldd	r24, Z+10	; 0x0a
    23a0:	81 11       	cpse	r24, r1
    23a2:	2a c1       	rjmp	.+596    	; 0x25f8 <TDisplay::Update()+0x5cc>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TDisplay.cpp:377 (discriminator 1)
    23a4:	f8 01       	movw	r30, r16
    23a6:	80 81       	ld	r24, Z
    23a8:	91 81       	ldd	r25, Z+1	; 0x01
    23aa:	a2 81       	ldd	r26, Z+2	; 0x02
    23ac:	b3 81       	ldd	r27, Z+3	; 0x03
    23ae:	84 1b       	sub	r24, r20
    23b0:	95 0b       	sbc	r25, r21
    23b2:	a6 0b       	sbc	r26, r22
    23b4:	b7 0b       	sbc	r27, r23
    23b6:	48 22       	and	r4, r24
    23b8:	59 22       	and	r5, r25
    23ba:	6a 22       	and	r6, r26
    23bc:	7b 22       	and	r7, r27
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TDisplay.cpp:381
        else  value |= _REC;
    }

    if (PlayMustBlink) {
    23be:	eb 81       	ldd	r30, Y+3	; 0x03
    23c0:	fc 81       	ldd	r31, Y+4	; 0x04
    23c2:	86 89       	ldd	r24, Z+22	; 0x16
    23c4:	88 23       	and	r24, r24
    23c6:	c1 f0       	breq	.+48     	; 0x23f8 <TDisplay::Update()+0x3cc>
    23c8:	e0 55       	subi	r30, 0x50	; 80
    23ca:	ff 4f       	sbci	r31, 0xFF	; 255
    23cc:	40 81       	ld	r20, Z
    23ce:	51 81       	ldd	r21, Z+1	; 0x01
    23d0:	62 81       	ldd	r22, Z+2	; 0x02
    23d2:	73 81       	ldd	r23, Z+3	; 0x03
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TDisplay.cpp:382
        if (!blink)  value &= _FULL - _PLAY;  
    23d4:	eb 81       	ldd	r30, Y+3	; 0x03
    23d6:	fc 81       	ldd	r31, Y+4	; 0x04
    23d8:	82 85       	ldd	r24, Z+10	; 0x0a
    23da:	81 11       	cpse	r24, r1
    23dc:	12 c1       	rjmp	.+548    	; 0x2602 <TDisplay::Update()+0x5d6>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TDisplay.cpp:382 (discriminator 1)
    23de:	f8 01       	movw	r30, r16
    23e0:	80 81       	ld	r24, Z
    23e2:	91 81       	ldd	r25, Z+1	; 0x01
    23e4:	a2 81       	ldd	r26, Z+2	; 0x02
    23e6:	b3 81       	ldd	r27, Z+3	; 0x03
    23e8:	84 1b       	sub	r24, r20
    23ea:	95 0b       	sbc	r25, r21
    23ec:	a6 0b       	sbc	r26, r22
    23ee:	b7 0b       	sbc	r27, r23
    23f0:	48 22       	and	r4, r24
    23f2:	59 22       	and	r5, r25
    23f4:	6a 22       	and	r6, r26
    23f6:	7b 22       	and	r7, r27
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TDisplay.cpp:385
        else  value |= _PLAY;
    }
    value |= _ARROW;
    23f8:	eb 81       	ldd	r30, Y+3	; 0x03
    23fa:	fc 81       	ldd	r31, Y+4	; 0x04
    23fc:	ec 56       	subi	r30, 0x6C	; 108
    23fe:	ff 4f       	sbci	r31, 0xFF	; 255
    2400:	80 80       	ld	r8, Z
    2402:	91 80       	ldd	r9, Z+1	; 0x01
    2404:	a2 80       	ldd	r10, Z+2	; 0x02
    2406:	b3 80       	ldd	r11, Z+3	; 0x03
    2408:	48 28       	or	r4, r8
    240a:	59 28       	or	r5, r9
    240c:	6a 28       	or	r6, r10
    240e:	7b 28       	or	r7, r11
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TDisplay.cpp:394





    digitalWrite(PIN_DISPLAY_DATA, HIGH);
    2410:	61 e0       	ldi	r22, 0x01	; 1
    2412:	85 e1       	ldi	r24, 0x15	; 21
    2414:	0e 94 54 35 	call	0x6aa8	; 0x6aa8 <digitalWrite>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TDisplay.cpp:395
    pulseClock();
    2418:	8b 81       	ldd	r24, Y+3	; 0x03
    241a:	9c 81       	ldd	r25, Y+4	; 0x04
    241c:	0e 94 f1 0a 	call	0x15e2	; 0x15e2 <TDisplay::pulseClock()>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TDisplay.cpp:399

    
    long bit = 1;
    for (int x = 1; x <= segmentCount; x++) {
    2420:	01 e0       	ldi	r16, 0x01	; 1
    2422:	10 e0       	ldi	r17, 0x00	; 0
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TDisplay.cpp:398

    digitalWrite(PIN_DISPLAY_DATA, HIGH);
    pulseClock();

    
    long bit = 1;
    2424:	c1 2c       	mov	r12, r1
    2426:	d1 2c       	mov	r13, r1
    2428:	76 01       	movw	r14, r12
    242a:	c3 94       	inc	r12
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TDisplay.cpp:399 (discriminator 1)
    for (int x = 1; x <= segmentCount; x++) {
    242c:	eb 81       	ldd	r30, Y+3	; 0x03
    242e:	fc 81       	ldd	r31, Y+4	; 0x04
    2430:	80 81       	ld	r24, Z
    2432:	91 81       	ldd	r25, Z+1	; 0x01
    2434:	80 17       	cp	r24, r16
    2436:	91 07       	cpc	r25, r17
    2438:	0c f4       	brge	.+2      	; 0x243c <TDisplay::Update()+0x410>
    243a:	e8 c0       	rjmp	.+464    	; 0x260c <TDisplay::Update()+0x5e0>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TDisplay.cpp:401

        if ((value & bit) != 0)  digitalWrite(PIN_DISPLAY_DATA, HIGH);   
    243c:	d7 01       	movw	r26, r14
    243e:	c6 01       	movw	r24, r12
    2440:	84 21       	and	r24, r4
    2442:	95 21       	and	r25, r5
    2444:	a6 21       	and	r26, r6
    2446:	b7 21       	and	r27, r7
    2448:	61 e0       	ldi	r22, 0x01	; 1
    244a:	89 2b       	or	r24, r25
    244c:	8a 2b       	or	r24, r26
    244e:	8b 2b       	or	r24, r27
    2450:	09 f4       	brne	.+2      	; 0x2454 <TDisplay::Update()+0x428>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TDisplay.cpp:402
        else  digitalWrite(PIN_DISPLAY_DATA, LOW);
    2452:	60 e0       	ldi	r22, 0x00	; 0
    2454:	85 e1       	ldi	r24, 0x15	; 21
    2456:	0e 94 54 35 	call	0x6aa8	; 0x6aa8 <digitalWrite>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TDisplay.cpp:403
        bit = bit << 1;        
    245a:	cc 0c       	add	r12, r12
    245c:	dd 1c       	adc	r13, r13
    245e:	ee 1c       	adc	r14, r14
    2460:	ff 1c       	adc	r15, r15
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TDisplay.cpp:404
        pulseClock();  
    2462:	8b 81       	ldd	r24, Y+3	; 0x03
    2464:	9c 81       	ldd	r25, Y+4	; 0x04
    2466:	0e 94 f1 0a 	call	0x15e2	; 0x15e2 <TDisplay::pulseClock()>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TDisplay.cpp:399
    digitalWrite(PIN_DISPLAY_DATA, HIGH);
    pulseClock();

    
    long bit = 1;
    for (int x = 1; x <= segmentCount; x++) {
    246a:	0f 5f       	subi	r16, 0xFF	; 255
    246c:	1f 4f       	sbci	r17, 0xFF	; 255
    246e:	de cf       	rjmp	.-68     	; 0x242c <TDisplay::Update()+0x400>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TDisplay.cpp:291
        blinkChanged = true;
    }
    
    if (paused) {
        if (blink)  display |= _PLAY;
        else  display &= _FULL - _PLAY;  
    2470:	46 01       	movw	r8, r12
    2472:	57 01       	movw	r10, r14
    2474:	84 1a       	sub	r8, r20
    2476:	95 0a       	sbc	r9, r21
    2478:	a6 0a       	sbc	r10, r22
    247a:	b7 0a       	sbc	r11, r23
    247c:	b5 01       	movw	r22, r10
    247e:	a4 01       	movw	r20, r8
    2480:	88 21       	and	r24, r8
    2482:	95 23       	and	r25, r21
    2484:	aa 21       	and	r26, r10
    2486:	b7 23       	and	r27, r23
    2488:	eb 81       	ldd	r30, Y+3	; 0x03
    248a:	fc 81       	ldd	r31, Y+4	; 0x04
    248c:	1e ce       	rjmp	.-964    	; 0x20ca <TDisplay::Update()+0x9e>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TDisplay.cpp:301
            if (programmFlashCount > 1) {
                programmFlashCount--;
                switch (programmPlace)
                {
                    case 0: display |= _BLINK; break;
                    case 1: display |= _PROGRAMM; break;
    248e:	eb 81       	ldd	r30, Y+3	; 0x03
    2490:	fc 81       	ldd	r31, Y+4	; 0x04
    2492:	e8 53       	subi	r30, 0x38	; 56
    2494:	ff 4f       	sbci	r31, 0xFF	; 255
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TDisplay.cpp:302
                    case 2: display |= _PRG_CLEAR; break;                  
    2496:	40 81       	ld	r20, Z
    2498:	51 81       	ldd	r21, Z+1	; 0x01
    249a:	62 81       	ldd	r22, Z+2	; 0x02
    249c:	73 81       	ldd	r23, Z+3	; 0x03
    249e:	84 2b       	or	r24, r20
    24a0:	95 2b       	or	r25, r21
    24a2:	a6 2b       	or	r26, r22
    24a4:	b7 2b       	or	r27, r23
    24a6:	eb 81       	ldd	r30, Y+3	; 0x03
    24a8:	fc 81       	ldd	r31, Y+4	; 0x04
    24aa:	82 83       	std	Z+2, r24	; 0x02
    24ac:	93 83       	std	Z+3, r25	; 0x03
    24ae:	a4 83       	std	Z+4, r26	; 0x04
    24b0:	b5 83       	std	Z+5, r27	; 0x05
    24b2:	4a ce       	rjmp	.-876    	; 0x2148 <TDisplay::Update()+0x11c>
    24b4:	eb 81       	ldd	r30, Y+3	; 0x03
    24b6:	fc 81       	ldd	r31, Y+4	; 0x04
    24b8:	e0 53       	subi	r30, 0x30	; 48
    24ba:	ff 4f       	sbci	r31, 0xFF	; 255
    24bc:	ec cf       	rjmp	.-40     	; 0x2496 <TDisplay::Update()+0x46a>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TDisplay.cpp:306
                }
            }
            else {
                programm = false;
    24be:	eb 81       	ldd	r30, Y+3	; 0x03
    24c0:	fc 81       	ldd	r31, Y+4	; 0x04
    24c2:	15 86       	std	Z+13, r1	; 0x0d
    24c4:	41 ce       	rjmp	.-894    	; 0x2148 <TDisplay::Update()+0x11c>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TDisplay.cpp:331 (discriminator 1)

        pos++;
        if (pos < 11)  value += scroll[pos];

        init++;
        if (init >= 12)  init = 0;
    24c6:	14 8e       	std	Z+28, r1	; 0x1c
    24c8:	13 8e       	std	Z+27, r1	; 0x1b
    24ca:	b5 ce       	rjmp	.-662    	; 0x2236 <TDisplay::Update()+0x20a>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TDisplay.cpp:336

        delay(150);
    }
    else {
        if (digit < 0) {
    24cc:	eb 81       	ldd	r30, Y+3	; 0x03
    24ce:	fc 81       	ldd	r31, Y+4	; 0x04
    24d0:	86 80       	ldd	r8, Z+6	; 0x06
    24d2:	97 80       	ldd	r9, Z+7	; 0x07
    24d4:	a0 84       	ldd	r10, Z+8	; 0x08
    24d6:	b1 84       	ldd	r11, Z+9	; 0x09
    24d8:	b7 fe       	sbrs	r11, 7
    24da:	2d c0       	rjmp	.+90     	; 0x2536 <TDisplay::Update()+0x50a>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TDisplay.cpp:337
            value &= _FULL - (segmentCode[8] << 8) - segmentCode[8];
    24dc:	e2 5b       	subi	r30, 0xB2	; 178
    24de:	ff 4f       	sbci	r31, 0xFF	; 255
    24e0:	20 81       	ld	r18, Z
    24e2:	31 81       	ldd	r19, Z+1	; 0x01
    24e4:	92 2f       	mov	r25, r18
    24e6:	88 27       	eor	r24, r24
    24e8:	09 2e       	mov	r0, r25
    24ea:	00 0c       	add	r0, r0
    24ec:	aa 0b       	sbc	r26, r26
    24ee:	bb 0b       	sbc	r27, r27
    24f0:	c8 1a       	sub	r12, r24
    24f2:	d9 0a       	sbc	r13, r25
    24f4:	ea 0a       	sbc	r14, r26
    24f6:	fb 0a       	sbc	r15, r27
    24f8:	c9 01       	movw	r24, r18
    24fa:	33 0f       	add	r19, r19
    24fc:	aa 0b       	sbc	r26, r26
    24fe:	bb 0b       	sbc	r27, r27
    2500:	c8 1a       	sub	r12, r24
    2502:	d9 0a       	sbc	r13, r25
    2504:	ea 0a       	sbc	r14, r26
    2506:	fb 0a       	sbc	r15, r27
    2508:	4c 20       	and	r4, r12
    250a:	5d 20       	and	r5, r13
    250c:	6e 20       	and	r6, r14
    250e:	7f 20       	and	r7, r15
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TDisplay.cpp:338
            value += _LINE + (_LINE << 8);
    2510:	eb 81       	ldd	r30, Y+3	; 0x03
    2512:	fc 81       	ldd	r31, Y+4	; 0x04
    2514:	ea 5a       	subi	r30, 0xAA	; 170
    2516:	ff 4f       	sbci	r31, 0xFF	; 255
    2518:	80 81       	ld	r24, Z
    251a:	91 81       	ldd	r25, Z+1	; 0x01
    251c:	98 2e       	mov	r9, r24
    251e:	88 24       	eor	r8, r8
    2520:	88 0e       	add	r8, r24
    2522:	99 1e       	adc	r9, r25
    2524:	09 2c       	mov	r0, r9
    2526:	00 0c       	add	r0, r0
    2528:	aa 08       	sbc	r10, r10
    252a:	bb 08       	sbc	r11, r11
    252c:	48 0c       	add	r4, r8
    252e:	59 1c       	adc	r5, r9
    2530:	6a 1c       	adc	r6, r10
    2532:	7b 1c       	adc	r7, r11
    2534:	86 ce       	rjmp	.-756    	; 0x2242 <TDisplay::Update()+0x216>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TDisplay.cpp:341
        }
        else {
            int d1 = (digit / 10);
    2536:	c5 01       	movw	r24, r10
    2538:	b4 01       	movw	r22, r8
    253a:	2a e0       	ldi	r18, 0x0A	; 10
    253c:	30 e0       	ldi	r19, 0x00	; 0
    253e:	40 e0       	ldi	r20, 0x00	; 0
    2540:	50 e0       	ldi	r21, 0x00	; 0
    2542:	0e 94 24 3a 	call	0x7448	; 0x7448 <__divmodsi4>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TDisplay.cpp:342
            int d2 = digit - (d1 * 10);
    2546:	6a e0       	ldi	r22, 0x0A	; 10
    2548:	62 9f       	mul	r22, r18
    254a:	c0 01       	movw	r24, r0
    254c:	63 9f       	mul	r22, r19
    254e:	90 0d       	add	r25, r0
    2550:	11 24       	eor	r1, r1
    2552:	b4 01       	movw	r22, r8
    2554:	68 1b       	sub	r22, r24
    2556:	79 0b       	sbc	r23, r25
    2558:	fb 01       	movw	r30, r22
    255a:	7f 96       	adiw	r30, 0x1f	; 31
    255c:	ee 0f       	add	r30, r30
    255e:	ff 1f       	adc	r31, r31
    2560:	8b 80       	ldd	r8, Y+3	; 0x03
    2562:	9c 80       	ldd	r9, Y+4	; 0x04
    2564:	e8 0d       	add	r30, r8
    2566:	f9 1d       	adc	r31, r9
    2568:	80 80       	ld	r8, Z
    256a:	91 80       	ldd	r9, Z+1	; 0x01
    256c:	09 2c       	mov	r0, r9
    256e:	00 0c       	add	r0, r0
    2570:	aa 08       	sbc	r10, r10
    2572:	bb 08       	sbc	r11, r11
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TDisplay.cpp:344

            if (d1 == 0 && d2 > 0) {
    2574:	21 15       	cp	r18, r1
    2576:	31 05       	cpc	r19, r1
    2578:	51 f5       	brne	.+84     	; 0x25ce <TDisplay::Update()+0x5a2>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TDisplay.cpp:344 (discriminator 1)
    257a:	16 16       	cp	r1, r22
    257c:	17 06       	cpc	r1, r23
    257e:	3c f5       	brge	.+78     	; 0x25ce <TDisplay::Update()+0x5a2>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TDisplay.cpp:345
                value &= _FULL - (segmentCode[8] << 8);
    2580:	80 e0       	ldi	r24, 0x00	; 0
    2582:	eb 81       	ldd	r30, Y+3	; 0x03
    2584:	fc 81       	ldd	r31, Y+4	; 0x04
    2586:	e2 5b       	subi	r30, 0xB2	; 178
    2588:	ff 4f       	sbci	r31, 0xFF	; 255
    258a:	90 81       	ld	r25, Z
    258c:	09 2e       	mov	r0, r25
    258e:	00 0c       	add	r0, r0
    2590:	aa 0b       	sbc	r26, r26
    2592:	bb 0b       	sbc	r27, r27
    2594:	c8 1a       	sub	r12, r24
    2596:	d9 0a       	sbc	r13, r25
    2598:	ea 0a       	sbc	r14, r26
    259a:	fb 0a       	sbc	r15, r27
    259c:	4c 20       	and	r4, r12
    259e:	5d 20       	and	r5, r13
    25a0:	6e 20       	and	r6, r14
    25a2:	7f 20       	and	r7, r15
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TDisplay.cpp:350
                value += segmentCode[d2];
            }
            else {
                value += (segmentCode[d1] << 8);
                value += segmentCode[d2];
    25a4:	48 0c       	add	r4, r8
    25a6:	59 1c       	adc	r5, r9
    25a8:	6a 1c       	adc	r6, r10
    25aa:	7b 1c       	adc	r7, r11
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TDisplay.cpp:353
            }

            if (minus) value += _D2_G;
    25ac:	eb 81       	ldd	r30, Y+3	; 0x03
    25ae:	fc 81       	ldd	r31, Y+4	; 0x04
    25b0:	80 8d       	ldd	r24, Z+24	; 0x18
    25b2:	88 23       	and	r24, r24
    25b4:	09 f4       	brne	.+2      	; 0x25b8 <TDisplay::Update()+0x58c>
    25b6:	45 ce       	rjmp	.-886    	; 0x2242 <TDisplay::Update()+0x216>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TDisplay.cpp:353 (discriminator 1)
    25b8:	e0 57       	subi	r30, 0x70	; 112
    25ba:	ff 4f       	sbci	r31, 0xFF	; 255
    25bc:	80 81       	ld	r24, Z
    25be:	91 81       	ldd	r25, Z+1	; 0x01
    25c0:	a2 81       	ldd	r26, Z+2	; 0x02
    25c2:	b3 81       	ldd	r27, Z+3	; 0x03
    25c4:	48 0e       	add	r4, r24
    25c6:	59 1e       	adc	r5, r25
    25c8:	6a 1e       	adc	r6, r26
    25ca:	7b 1e       	adc	r7, r27
    25cc:	3a ce       	rjmp	.-908    	; 0x2242 <TDisplay::Update()+0x216>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TDisplay.cpp:349
            if (d1 == 0 && d2 > 0) {
                value &= _FULL - (segmentCode[8] << 8);
                value += segmentCode[d2];
            }
            else {
                value += (segmentCode[d1] << 8);
    25ce:	21 5e       	subi	r18, 0xE1	; 225
    25d0:	3f 4f       	sbci	r19, 0xFF	; 255
    25d2:	22 0f       	add	r18, r18
    25d4:	33 1f       	adc	r19, r19
    25d6:	eb 81       	ldd	r30, Y+3	; 0x03
    25d8:	fc 81       	ldd	r31, Y+4	; 0x04
    25da:	e2 0f       	add	r30, r18
    25dc:	f3 1f       	adc	r31, r19
    25de:	80 e0       	ldi	r24, 0x00	; 0
    25e0:	90 81       	ld	r25, Z
    25e2:	09 2e       	mov	r0, r25
    25e4:	00 0c       	add	r0, r0
    25e6:	aa 0b       	sbc	r26, r26
    25e8:	bb 0b       	sbc	r27, r27
    25ea:	84 0d       	add	r24, r4
    25ec:	95 1d       	adc	r25, r5
    25ee:	a6 1d       	adc	r26, r6
    25f0:	b7 1d       	adc	r27, r7
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TDisplay.cpp:350
                value += segmentCode[d2];
    25f2:	2c 01       	movw	r4, r24
    25f4:	3d 01       	movw	r6, r26
    25f6:	d6 cf       	rjmp	.-84     	; 0x25a4 <TDisplay::Update()+0x578>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TDisplay.cpp:378

    }

    if (RecordMustBlink) {
        if (!blink) value &= _FULL - _REC;  
        else  value |= _REC;
    25f8:	44 2a       	or	r4, r20
    25fa:	55 2a       	or	r5, r21
    25fc:	66 2a       	or	r6, r22
    25fe:	77 2a       	or	r7, r23
    2600:	de ce       	rjmp	.-580    	; 0x23be <TDisplay::Update()+0x392>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TDisplay.cpp:383
    }

    if (PlayMustBlink) {
        if (!blink)  value &= _FULL - _PLAY;  
        else  value |= _PLAY;
    2602:	44 2a       	or	r4, r20
    2604:	55 2a       	or	r5, r21
    2606:	66 2a       	or	r6, r22
    2608:	77 2a       	or	r7, r23
    260a:	f6 ce       	rjmp	.-532    	; 0x23f8 <TDisplay::Update()+0x3cc>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TDisplay.cpp:406
        if ((value & bit) != 0)  digitalWrite(PIN_DISPLAY_DATA, HIGH);   
        else  digitalWrite(PIN_DISPLAY_DATA, LOW);
        bit = bit << 1;        
        pulseClock();  
    }
}
    260c:	0f 90       	pop	r0
    260e:	0f 90       	pop	r0
    2610:	0f 90       	pop	r0
    2612:	0f 90       	pop	r0
    2614:	df 91       	pop	r29
    2616:	cf 91       	pop	r28
    2618:	1f 91       	pop	r17
    261a:	0f 91       	pop	r16
    261c:	ff 90       	pop	r15
    261e:	ef 90       	pop	r14
    2620:	df 90       	pop	r13
    2622:	cf 90       	pop	r12
    2624:	bf 90       	pop	r11
    2626:	af 90       	pop	r10
    2628:	9f 90       	pop	r9
    262a:	8f 90       	pop	r8
    262c:	7f 90       	pop	r7
    262e:	6f 90       	pop	r6
    2630:	5f 90       	pop	r5
    2632:	4f 90       	pop	r4
    2634:	3f 90       	pop	r3
    2636:	2f 90       	pop	r2
    2638:	08 95       	ret

0000263a <TInputs::TInputs()>:
_ZN7TInputsC2Ev():
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TInputs.cpp:12





TInputs::TInputs(void) {
    263a:	fc 01       	movw	r30, r24
    263c:	11 82       	std	Z+1, r1	; 0x01
    263e:	10 82       	st	Z, r1
    2640:	13 82       	std	Z+3, r1	; 0x03
    2642:	12 82       	std	Z+2, r1	; 0x02
    2644:	15 82       	std	Z+5, r1	; 0x05
    2646:	14 82       	std	Z+4, r1	; 0x04
    2648:	17 82       	std	Z+7, r1	; 0x07
    264a:	16 82       	std	Z+6, r1	; 0x06
    264c:	84 e6       	ldi	r24, 0x64	; 100
    264e:	90 e0       	ldi	r25, 0x00	; 0
    2650:	91 87       	std	Z+9, r25	; 0x09
    2652:	80 87       	std	Z+8, r24	; 0x08
    2654:	13 86       	std	Z+11, r1	; 0x0b
    2656:	12 86       	std	Z+10, r1	; 0x0a
    2658:	14 86       	std	Z+12, r1	; 0x0c
    265a:	15 86       	std	Z+13, r1	; 0x0d
    265c:	16 86       	std	Z+14, r1	; 0x0e
    265e:	17 86       	std	Z+15, r1	; 0x0f
    2660:	8e e1       	ldi	r24, 0x1E	; 30
    2662:	90 e0       	ldi	r25, 0x00	; 0
    2664:	a0 e0       	ldi	r26, 0x00	; 0
    2666:	b0 e0       	ldi	r27, 0x00	; 0
    2668:	80 8b       	std	Z+16, r24	; 0x10
    266a:	91 8b       	std	Z+17, r25	; 0x11
    266c:	a2 8b       	std	Z+18, r26	; 0x12
    266e:	b3 8b       	std	Z+19, r27	; 0x13
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TInputs.cpp:15

   DemoMode = 0;
   pinMode(PIN_PD0, OUTPUT); 
    2670:	61 e0       	ldi	r22, 0x01	; 1
    2672:	8f e1       	ldi	r24, 0x1F	; 31
    2674:	0e 94 18 35 	call	0x6a30	; 0x6a30 <pinMode>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TInputs.cpp:16
   pinMode(PIN_PD1, OUTPUT);
    2678:	61 e0       	ldi	r22, 0x01	; 1
    267a:	8e e1       	ldi	r24, 0x1E	; 30
    267c:	0e 94 18 35 	call	0x6a30	; 0x6a30 <pinMode>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TInputs.cpp:17
   pinMode(PIN_PD2, OUTPUT);
    2680:	61 e0       	ldi	r22, 0x01	; 1
    2682:	8d e1       	ldi	r24, 0x1D	; 29
    2684:	0e 94 18 35 	call	0x6a30	; 0x6a30 <pinMode>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TInputs.cpp:18
   pinMode(PIN_PD3, OUTPUT);
    2688:	61 e0       	ldi	r22, 0x01	; 1
    268a:	8c e1       	ldi	r24, 0x1C	; 28
    268c:	0e 94 18 35 	call	0x6a30	; 0x6a30 <pinMode>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TInputs.cpp:19
   pinMode(PIN_PD4, OUTPUT);
    2690:	61 e0       	ldi	r22, 0x01	; 1
    2692:	8b e1       	ldi	r24, 0x1B	; 27
    2694:	0e 94 18 35 	call	0x6a30	; 0x6a30 <pinMode>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TInputs.cpp:20
   pinMode(PIN_PD5, OUTPUT);
    2698:	61 e0       	ldi	r22, 0x01	; 1
    269a:	8a e1       	ldi	r24, 0x1A	; 26
    269c:	0e 94 18 35 	call	0x6a30	; 0x6a30 <pinMode>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TInputs.cpp:21
   pinMode(PIN_PD6, OUTPUT);
    26a0:	61 e0       	ldi	r22, 0x01	; 1
    26a2:	89 e1       	ldi	r24, 0x19	; 25
    26a4:	0e 94 18 35 	call	0x6a30	; 0x6a30 <pinMode>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TInputs.cpp:22
   pinMode(PIN_PD7, OUTPUT);
    26a8:	61 e0       	ldi	r22, 0x01	; 1
    26aa:	88 e1       	ldi	r24, 0x18	; 24
    26ac:	0e 94 18 35 	call	0x6a30	; 0x6a30 <pinMode>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TInputs.cpp:24

   pinMode(PIN_PC5, INPUT);
    26b0:	60 e0       	ldi	r22, 0x00	; 0
    26b2:	86 e0       	ldi	r24, 0x06	; 6
    26b4:	0e 94 18 35 	call	0x6a30	; 0x6a30 <pinMode>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TInputs.cpp:25
   pinMode(PIN_PC6, INPUT);
    26b8:	60 e0       	ldi	r22, 0x00	; 0
    26ba:	85 e0       	ldi	r24, 0x05	; 5
    26bc:	0e 94 18 35 	call	0x6a30	; 0x6a30 <pinMode>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TInputs.cpp:26
   pinMode(PIN_PC7, INPUT);
    26c0:	60 e0       	ldi	r22, 0x00	; 0
    26c2:	8f e0       	ldi	r24, 0x0F	; 15
    26c4:	0e 94 18 35 	call	0x6a30	; 0x6a30 <pinMode>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TInputs.cpp:28

   digitalWrite(PIN_PD0, LOW);
    26c8:	60 e0       	ldi	r22, 0x00	; 0
    26ca:	8f e1       	ldi	r24, 0x1F	; 31
    26cc:	0e 94 54 35 	call	0x6aa8	; 0x6aa8 <digitalWrite>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TInputs.cpp:29
   digitalWrite(PIN_PD1, LOW);
    26d0:	60 e0       	ldi	r22, 0x00	; 0
    26d2:	8e e1       	ldi	r24, 0x1E	; 30
    26d4:	0e 94 54 35 	call	0x6aa8	; 0x6aa8 <digitalWrite>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TInputs.cpp:30
   digitalWrite(PIN_PD2, LOW);
    26d8:	60 e0       	ldi	r22, 0x00	; 0
    26da:	8d e1       	ldi	r24, 0x1D	; 29
    26dc:	0e 94 54 35 	call	0x6aa8	; 0x6aa8 <digitalWrite>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TInputs.cpp:31
   digitalWrite(PIN_PD3, LOW);
    26e0:	60 e0       	ldi	r22, 0x00	; 0
    26e2:	8c e1       	ldi	r24, 0x1C	; 28
    26e4:	0e 94 54 35 	call	0x6aa8	; 0x6aa8 <digitalWrite>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TInputs.cpp:32
   digitalWrite(PIN_PD4, LOW);
    26e8:	60 e0       	ldi	r22, 0x00	; 0
    26ea:	8b e1       	ldi	r24, 0x1B	; 27
    26ec:	0e 94 54 35 	call	0x6aa8	; 0x6aa8 <digitalWrite>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TInputs.cpp:33
   digitalWrite(PIN_PD5, LOW);
    26f0:	60 e0       	ldi	r22, 0x00	; 0
    26f2:	8a e1       	ldi	r24, 0x1A	; 26
    26f4:	0e 94 54 35 	call	0x6aa8	; 0x6aa8 <digitalWrite>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TInputs.cpp:34
   digitalWrite(PIN_PD6, LOW);
    26f8:	60 e0       	ldi	r22, 0x00	; 0
    26fa:	89 e1       	ldi	r24, 0x19	; 25
    26fc:	0e 94 54 35 	call	0x6aa8	; 0x6aa8 <digitalWrite>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TInputs.cpp:35
   digitalWrite(PIN_PD7, LOW);
    2700:	60 e0       	ldi	r22, 0x00	; 0
    2702:	88 e1       	ldi	r24, 0x18	; 24
    2704:	0c 94 54 35 	jmp	0x6aa8	; 0x6aa8 <digitalWrite>

00002708 <TInputs::DisableDemoMode()>:
_ZN7TInputs15DisableDemoModeEv():
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TInputs.cpp:119


}

void TInputs::DisableDemoMode() {
   DemoMode = 0;
    2708:	fc 01       	movw	r30, r24
    270a:	13 86       	std	Z+11, r1	; 0x0b
    270c:	12 86       	std	Z+10, r1	; 0x0a
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TInputs.cpp:120
}
    270e:	08 95       	ret

00002710 <TInputs::GetDemoMode()>:
_ZN7TInputs11GetDemoModeEv():
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TInputs.cpp:125

int TInputs::GetDemoMode() {

   return DemoMode;
}
    2710:	fc 01       	movw	r30, r24
    2712:	82 85       	ldd	r24, Z+10	; 0x0a
    2714:	93 85       	ldd	r25, Z+11	; 0x0b
    2716:	08 95       	ret

00002718 <TInputs::getKey(int)>:
_ZN7TInputs6getKeyEi():
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TInputs.cpp:169
   return r;
}


int TInputs::getKey(int shl) 
{
    2718:	1f 93       	push	r17
    271a:	cf 93       	push	r28
    271c:	df 93       	push	r29
    271e:	16 2f       	mov	r17, r22
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TInputs.cpp:172
   int x = 0;
 
   if (digitalRead(PIN_PC5) == HIGH) { x |= 0x01; }
    2720:	86 e0       	ldi	r24, 0x06	; 6
    2722:	0e 94 82 35 	call	0x6b04	; 0x6b04 <digitalRead>
    2726:	31 e0       	ldi	r19, 0x01	; 1
    2728:	20 e0       	ldi	r18, 0x00	; 0
    272a:	01 97       	sbiw	r24, 0x01	; 1
    272c:	09 f0       	breq	.+2      	; 0x2730 <TInputs::getKey(int)+0x18>
    272e:	30 e0       	ldi	r19, 0x00	; 0
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TInputs.cpp:170
}


int TInputs::getKey(int shl) 
{
   int x = 0;
    2730:	c3 2f       	mov	r28, r19
    2732:	d2 2f       	mov	r29, r18
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TInputs.cpp:173
 
   if (digitalRead(PIN_PC5) == HIGH) { x |= 0x01; }
   if (digitalRead(PIN_PC6) == HIGH) { x |= 0x02; }
    2734:	85 e0       	ldi	r24, 0x05	; 5
    2736:	0e 94 82 35 	call	0x6b04	; 0x6b04 <digitalRead>
    273a:	01 97       	sbiw	r24, 0x01	; 1
    273c:	09 f4       	brne	.+2      	; 0x2740 <TInputs::getKey(int)+0x28>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TInputs.cpp:173 (discriminator 1)
    273e:	c2 60       	ori	r28, 0x02	; 2
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TInputs.cpp:174
   if (digitalRead(PIN_PC7) == HIGH) { x |= 0x04; }
    2740:	8f e0       	ldi	r24, 0x0F	; 15
    2742:	0e 94 82 35 	call	0x6b04	; 0x6b04 <digitalRead>
    2746:	01 97       	sbiw	r24, 0x01	; 1
    2748:	09 f4       	brne	.+2      	; 0x274c <TInputs::getKey(int)+0x34>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TInputs.cpp:174 (discriminator 1)
    274a:	c4 60       	ori	r28, 0x04	; 4
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TInputs.cpp:177
   return x << shl;

}
    274c:	ce 01       	movw	r24, r28
    274e:	02 c0       	rjmp	.+4      	; 0x2754 <TInputs::getKey(int)+0x3c>
    2750:	88 0f       	add	r24, r24
    2752:	99 1f       	adc	r25, r25
    2754:	1a 95       	dec	r17
    2756:	e2 f7       	brpl	.-8      	; 0x2750 <TInputs::getKey(int)+0x38>
    2758:	df 91       	pop	r29
    275a:	cf 91       	pop	r28
    275c:	1f 91       	pop	r17
    275e:	08 95       	ret

00002760 <TInputs::readKeyLine(int, int)>:
_ZN7TInputs11readKeyLineEii():
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TInputs.cpp:159




int TInputs::readKeyLine(int pin, int shl) 
{
    2760:	ef 92       	push	r14
    2762:	ff 92       	push	r15
    2764:	0f 93       	push	r16
    2766:	1f 93       	push	r17
    2768:	cf 93       	push	r28
    276a:	8c 01       	movw	r16, r24
    276c:	c6 2f       	mov	r28, r22
    276e:	7a 01       	movw	r14, r20
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TInputs.cpp:160
   digitalWrite(pin, HIGH);
    2770:	61 e0       	ldi	r22, 0x01	; 1
    2772:	8c 2f       	mov	r24, r28
    2774:	0e 94 54 35 	call	0x6aa8	; 0x6aa8 <digitalWrite>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TInputs.cpp:161
   int r = getKey(shl); 
    2778:	b7 01       	movw	r22, r14
    277a:	c8 01       	movw	r24, r16
    277c:	0e 94 8c 13 	call	0x2718	; 0x2718 <TInputs::getKey(int)>
    2780:	8c 01       	movw	r16, r24
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TInputs.cpp:162
   digitalWrite(pin, LOW);
    2782:	60 e0       	ldi	r22, 0x00	; 0
    2784:	8c 2f       	mov	r24, r28
    2786:	0e 94 54 35 	call	0x6aa8	; 0x6aa8 <digitalWrite>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TInputs.cpp:163
   delay(5); // Affects the next readkeyline and results into flickering. Why? No Idea!
    278a:	65 e0       	ldi	r22, 0x05	; 5
    278c:	70 e0       	ldi	r23, 0x00	; 0
    278e:	80 e0       	ldi	r24, 0x00	; 0
    2790:	90 e0       	ldi	r25, 0x00	; 0
    2792:	0e 94 75 34 	call	0x68ea	; 0x68ea <delay>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TInputs.cpp:165
   return r;
}
    2796:	c8 01       	movw	r24, r16
    2798:	cf 91       	pop	r28
    279a:	1f 91       	pop	r17
    279c:	0f 91       	pop	r16
    279e:	ff 90       	pop	r15
    27a0:	ef 90       	pop	r14
    27a2:	08 95       	ret

000027a4 <TInputs::read()>:
_ZN7TInputs4readEv():
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TInputs.cpp:44
}



void TInputs::read() 
{
    27a4:	cf 92       	push	r12
    27a6:	df 92       	push	r13
    27a8:	ef 92       	push	r14
    27aa:	ff 92       	push	r15
    27ac:	0f 93       	push	r16
    27ae:	1f 93       	push	r17
    27b0:	cf 93       	push	r28
    27b2:	df 93       	push	r29
    27b4:	ec 01       	movw	r28, r24
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TInputs.cpp:48



   long now = millis();
    27b6:	0e 94 44 34 	call	0x6888	; 0x6888 <millis>
    27ba:	6b 01       	movw	r12, r22
    27bc:	7c 01       	movw	r14, r24
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TInputs.cpp:49
   if (LockKeyBoard > now) {
    27be:	8e 81       	ldd	r24, Y+6	; 0x06
    27c0:	9f 81       	ldd	r25, Y+7	; 0x07
    27c2:	09 2e       	mov	r0, r25
    27c4:	00 0c       	add	r0, r0
    27c6:	aa 0b       	sbc	r26, r26
    27c8:	bb 0b       	sbc	r27, r27
    27ca:	c8 16       	cp	r12, r24
    27cc:	d9 06       	cpc	r13, r25
    27ce:	ea 06       	cpc	r14, r26
    27d0:	fb 06       	cpc	r15, r27
    27d2:	0c f4       	brge	.+2      	; 0x27d6 <TInputs::read()+0x32>
    27d4:	94 c0       	rjmp	.+296    	; 0x28fe <TInputs::read()+0x15a>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TInputs.cpp:52
      return;
   }
   pressedKeys = 0; 
    27d6:	19 82       	std	Y+1, r1	; 0x01
    27d8:	18 82       	st	Y, r1
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TInputs.cpp:57



   // ensure the pins are down!
   digitalWrite(PIN_PD0, LOW);
    27da:	60 e0       	ldi	r22, 0x00	; 0
    27dc:	8f e1       	ldi	r24, 0x1F	; 31
    27de:	0e 94 54 35 	call	0x6aa8	; 0x6aa8 <digitalWrite>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TInputs.cpp:58
   digitalWrite(PIN_PD1, LOW);
    27e2:	60 e0       	ldi	r22, 0x00	; 0
    27e4:	8e e1       	ldi	r24, 0x1E	; 30
    27e6:	0e 94 54 35 	call	0x6aa8	; 0x6aa8 <digitalWrite>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TInputs.cpp:59
   digitalWrite(PIN_PD2, LOW);
    27ea:	60 e0       	ldi	r22, 0x00	; 0
    27ec:	8d e1       	ldi	r24, 0x1D	; 29
    27ee:	0e 94 54 35 	call	0x6aa8	; 0x6aa8 <digitalWrite>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TInputs.cpp:60
   digitalWrite(PIN_PD3, LOW);
    27f2:	60 e0       	ldi	r22, 0x00	; 0
    27f4:	8c e1       	ldi	r24, 0x1C	; 28
    27f6:	0e 94 54 35 	call	0x6aa8	; 0x6aa8 <digitalWrite>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TInputs.cpp:61
   digitalWrite(PIN_PD4, LOW);
    27fa:	60 e0       	ldi	r22, 0x00	; 0
    27fc:	8b e1       	ldi	r24, 0x1B	; 27
    27fe:	0e 94 54 35 	call	0x6aa8	; 0x6aa8 <digitalWrite>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TInputs.cpp:62
   digitalWrite(PIN_PD5, LOW);
    2802:	60 e0       	ldi	r22, 0x00	; 0
    2804:	8a e1       	ldi	r24, 0x1A	; 26
    2806:	0e 94 54 35 	call	0x6aa8	; 0x6aa8 <digitalWrite>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TInputs.cpp:63
   digitalWrite(PIN_PD6, LOW);
    280a:	60 e0       	ldi	r22, 0x00	; 0
    280c:	89 e1       	ldi	r24, 0x19	; 25
    280e:	0e 94 54 35 	call	0x6aa8	; 0x6aa8 <digitalWrite>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TInputs.cpp:64
   digitalWrite(PIN_PD7, LOW);
    2812:	60 e0       	ldi	r22, 0x00	; 0
    2814:	88 e1       	ldi	r24, 0x18	; 24
    2816:	0e 94 54 35 	call	0x6aa8	; 0x6aa8 <digitalWrite>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TInputs.cpp:68

   int x = 0;

   x |= readKeyLine(PIN_PD0,0);
    281a:	50 e0       	ldi	r21, 0x00	; 0
    281c:	40 e0       	ldi	r20, 0x00	; 0
    281e:	6f e1       	ldi	r22, 0x1F	; 31
    2820:	70 e0       	ldi	r23, 0x00	; 0
    2822:	ce 01       	movw	r24, r28
    2824:	0e 94 b0 13 	call	0x2760	; 0x2760 <TInputs::readKeyLine(int, int)>
    2828:	8c 01       	movw	r16, r24
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TInputs.cpp:69
   x |= readKeyLine(PIN_PD1,3);
    282a:	43 e0       	ldi	r20, 0x03	; 3
    282c:	50 e0       	ldi	r21, 0x00	; 0
    282e:	6e e1       	ldi	r22, 0x1E	; 30
    2830:	70 e0       	ldi	r23, 0x00	; 0
    2832:	ce 01       	movw	r24, r28
    2834:	0e 94 b0 13 	call	0x2760	; 0x2760 <TInputs::readKeyLine(int, int)>
    2838:	08 2b       	or	r16, r24
    283a:	19 2b       	or	r17, r25
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TInputs.cpp:70
   x |= readKeyLine(PIN_PD2,6);
    283c:	46 e0       	ldi	r20, 0x06	; 6
    283e:	50 e0       	ldi	r21, 0x00	; 0
    2840:	6d e1       	ldi	r22, 0x1D	; 29
    2842:	70 e0       	ldi	r23, 0x00	; 0
    2844:	ce 01       	movw	r24, r28
    2846:	0e 94 b0 13 	call	0x2760	; 0x2760 <TInputs::readKeyLine(int, int)>
    284a:	08 2b       	or	r16, r24
    284c:	19 2b       	or	r17, r25
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TInputs.cpp:71
   x |= readKeyLine(PIN_PD4,9);
    284e:	49 e0       	ldi	r20, 0x09	; 9
    2850:	50 e0       	ldi	r21, 0x00	; 0
    2852:	6b e1       	ldi	r22, 0x1B	; 27
    2854:	70 e0       	ldi	r23, 0x00	; 0
    2856:	ce 01       	movw	r24, r28
    2858:	0e 94 b0 13 	call	0x2760	; 0x2760 <TInputs::readKeyLine(int, int)>
    285c:	08 2b       	or	r16, r24
    285e:	19 2b       	or	r17, r25
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TInputs.cpp:72
   x |= readKeyLine(PIN_PD3,12);
    2860:	4c e0       	ldi	r20, 0x0C	; 12
    2862:	50 e0       	ldi	r21, 0x00	; 0
    2864:	6c e1       	ldi	r22, 0x1C	; 28
    2866:	70 e0       	ldi	r23, 0x00	; 0
    2868:	ce 01       	movw	r24, r28
    286a:	0e 94 b0 13 	call	0x2760	; 0x2760 <TInputs::readKeyLine(int, int)>
    286e:	08 2b       	or	r16, r24
    2870:	19 2b       	or	r17, r25
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TInputs.cpp:74

   if (x != oldPressedKeys) {
    2872:	8c 81       	ldd	r24, Y+4	; 0x04
    2874:	9d 81       	ldd	r25, Y+5	; 0x05
    2876:	80 17       	cp	r24, r16
    2878:	91 07       	cpc	r25, r17
    287a:	09 f4       	brne	.+2      	; 0x287e <TInputs::read()+0xda>
    287c:	49 c0       	rjmp	.+146    	; 0x2910 <TInputs::read()+0x16c>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TInputs.cpp:75
      pressedKeys = x;
    287e:	19 83       	std	Y+1, r17	; 0x01
    2880:	08 83       	st	Y, r16
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TInputs.cpp:76
      oldPressedKeys = x;
    2882:	1d 83       	std	Y+5, r17	; 0x05
    2884:	0c 83       	std	Y+4, r16	; 0x04
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TInputs.cpp:77
      LockKeyBoard = now + LockKeyBoardTime;
    2886:	88 85       	ldd	r24, Y+8	; 0x08
    2888:	99 85       	ldd	r25, Y+9	; 0x09
    288a:	c8 0e       	add	r12, r24
    288c:	d9 1e       	adc	r13, r25
    288e:	df 82       	std	Y+7, r13	; 0x07
    2890:	ce 82       	std	Y+6, r12	; 0x06
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TInputs.cpp:85
      // we always need fast forward and rewind 
      pressedKeys |= x & CASS_REWIND;
      pressedKeys |= x & CASS_FORWARD;
   }

  if (x == 56) {// (CASS_REWIND || CASS_FORWARD || CASS_PLAY) 
    2892:	08 33       	cpi	r16, 0x38	; 56
    2894:	11 05       	cpc	r17, r1
    2896:	51 f4       	brne	.+20     	; 0x28ac <TInputs::read()+0x108>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TInputs.cpp:86
      DemoMode = 1;
    2898:	81 e0       	ldi	r24, 0x01	; 1
    289a:	90 e0       	ldi	r25, 0x00	; 0
    289c:	9b 87       	std	Y+11, r25	; 0x0b
    289e:	8a 87       	std	Y+10, r24	; 0x0a
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TInputs.cpp:88
      #ifdef DEBUG
         Serial.println("> Entering demo mode 1");
    28a0:	61 ee       	ldi	r22, 0xE1	; 225
    28a2:	73 e0       	ldi	r23, 0x03	; 3
    28a4:	82 ed       	ldi	r24, 0xD2	; 210
    28a6:	9a e0       	ldi	r25, 0x0A	; 10
    28a8:	0e 94 e9 37 	call	0x6fd2	; 0x6fd2 <Print::println(char const*)>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TInputs.cpp:93
      #endif
  }


  if (DemoMode > 0 && x == CASS_PLAY) {
    28ac:	8a 85       	ldd	r24, Y+10	; 0x0a
    28ae:	9b 85       	ldd	r25, Y+11	; 0x0b
    28b0:	18 16       	cp	r1, r24
    28b2:	19 06       	cpc	r1, r25
    28b4:	24 f5       	brge	.+72     	; 0x28fe <TInputs::read()+0x15a>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TInputs.cpp:93 (discriminator 1)
    28b6:	08 30       	cpi	r16, 0x08	; 8
    28b8:	11 05       	cpc	r17, r1
    28ba:	a1 f5       	brne	.+104    	; 0x2924 <TInputs::read()+0x180>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TInputs.cpp:94
     pressedKeys = 0;
    28bc:	19 82       	std	Y+1, r1	; 0x01
    28be:	18 82       	st	Y, r1
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TInputs.cpp:95
     DemoMode += 1;
    28c0:	01 96       	adiw	r24, 0x01	; 1
    28c2:	9b 87       	std	Y+11, r25	; 0x0b
    28c4:	8a 87       	std	Y+10, r24	; 0x0a
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TInputs.cpp:97
           #ifdef DEBUG
         Serial.print("> Entering demo mode ");
    28c6:	68 ef       	ldi	r22, 0xF8	; 248
    28c8:	73 e0       	ldi	r23, 0x03	; 3
    28ca:	82 ed       	ldi	r24, 0xD2	; 210
    28cc:	9a e0       	ldi	r25, 0x0A	; 10
    28ce:	0e 94 c4 37 	call	0x6f88	; 0x6f88 <Print::print(char const*)>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TInputs.cpp:98
         Serial.println(DemoMode);
    28d2:	6a 85       	ldd	r22, Y+10	; 0x0a
    28d4:	7b 85       	ldd	r23, Y+11	; 0x0b
    28d6:	4a e0       	ldi	r20, 0x0A	; 10
    28d8:	50 e0       	ldi	r21, 0x00	; 0
    28da:	82 ed       	ldi	r24, 0xD2	; 210
    28dc:	9a e0       	ldi	r25, 0x0A	; 10
    28de:	0e 94 9b 38 	call	0x7136	; 0x7136 <Print::println(int, int)>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TInputs.cpp:100
      #endif
     if (DemoMode >= 4) { 
    28e2:	8a 85       	ldd	r24, Y+10	; 0x0a
    28e4:	9b 85       	ldd	r25, Y+11	; 0x0b
    28e6:	04 97       	sbiw	r24, 0x04	; 4
    28e8:	54 f0       	brlt	.+20     	; 0x28fe <TInputs::read()+0x15a>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TInputs.cpp:102
         #ifdef DEBUG
            Serial.println("> Entering demo mode 1");
    28ea:	61 ee       	ldi	r22, 0xE1	; 225
    28ec:	73 e0       	ldi	r23, 0x03	; 3
    28ee:	82 ed       	ldi	r24, 0xD2	; 210
    28f0:	9a e0       	ldi	r25, 0x0A	; 10
    28f2:	0e 94 e9 37 	call	0x6fd2	; 0x6fd2 <Print::println(char const*)>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TInputs.cpp:104
         #endif
         DemoMode = 1; 
    28f6:	81 e0       	ldi	r24, 0x01	; 1
    28f8:	90 e0       	ldi	r25, 0x00	; 0
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TInputs.cpp:111
  }
  if (DemoMode > 0 && x == CASS_STOP) {
         #ifdef DEBUG
            Serial.println("> Disable demo mode");
         #endif
         DemoMode = 4; 
    28fa:	9b 87       	std	Y+11, r25	; 0x0b
    28fc:	8a 87       	std	Y+10, r24	; 0x0a
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TInputs.cpp:116
  }



}
    28fe:	df 91       	pop	r29
    2900:	cf 91       	pop	r28
    2902:	1f 91       	pop	r17
    2904:	0f 91       	pop	r16
    2906:	ff 90       	pop	r15
    2908:	ef 90       	pop	r14
    290a:	df 90       	pop	r13
    290c:	cf 90       	pop	r12
    290e:	08 95       	ret
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TInputs.cpp:82
      LockKeyBoard = now + LockKeyBoardTime;
   }
   else {
      // we always need fast forward and rewind 
      pressedKeys |= x & CASS_REWIND;
      pressedKeys |= x & CASS_FORWARD;
    2910:	88 81       	ld	r24, Y
    2912:	99 81       	ldd	r25, Y+1	; 0x01
    2914:	98 01       	movw	r18, r16
    2916:	20 73       	andi	r18, 0x30	; 48
    2918:	33 27       	eor	r19, r19
    291a:	82 2b       	or	r24, r18
    291c:	93 2b       	or	r25, r19
    291e:	99 83       	std	Y+1, r25	; 0x01
    2920:	88 83       	st	Y, r24
    2922:	b7 cf       	rjmp	.-146    	; 0x2892 <TInputs::read()+0xee>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TInputs.cpp:107
            Serial.println("> Entering demo mode 1");
         #endif
         DemoMode = 1; 
        }
  }
  if (DemoMode > 0 && x == CASS_STOP) {
    2924:	00 34       	cpi	r16, 0x40	; 64
    2926:	11 05       	cpc	r17, r1
    2928:	51 f7       	brne	.-44     	; 0x28fe <TInputs::read()+0x15a>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TInputs.cpp:109
         #ifdef DEBUG
            Serial.println("> Disable demo mode");
    292a:	6e e0       	ldi	r22, 0x0E	; 14
    292c:	74 e0       	ldi	r23, 0x04	; 4
    292e:	82 ed       	ldi	r24, 0xD2	; 210
    2930:	9a e0       	ldi	r25, 0x0A	; 10
    2932:	0e 94 e9 37 	call	0x6fd2	; 0x6fd2 <Print::println(char const*)>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TInputs.cpp:111
         #endif
         DemoMode = 4; 
    2936:	84 e0       	ldi	r24, 0x04	; 4
    2938:	90 e0       	ldi	r25, 0x00	; 0
    293a:	df cf       	rjmp	.-66     	; 0x28fa <TInputs::read()+0x156>

0000293c <TInputs::ReadCassetteState()>:
_ZN7TInputs17ReadCassetteStateEv():
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TInputs.cpp:135
   return cassetteState;
}


void TInputs::ReadCassetteState()
{
    293c:	0f 93       	push	r16
    293e:	1f 93       	push	r17
    2940:	cf 93       	push	r28
    2942:	df 93       	push	r29
    2944:	8c 01       	movw	r16, r24
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TInputs.cpp:137
   // ensure the pins are down!
   digitalWrite(PIN_PD0, LOW);
    2946:	60 e0       	ldi	r22, 0x00	; 0
    2948:	8f e1       	ldi	r24, 0x1F	; 31
    294a:	0e 94 54 35 	call	0x6aa8	; 0x6aa8 <digitalWrite>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TInputs.cpp:138
   digitalWrite(PIN_PD1, LOW);
    294e:	60 e0       	ldi	r22, 0x00	; 0
    2950:	8e e1       	ldi	r24, 0x1E	; 30
    2952:	0e 94 54 35 	call	0x6aa8	; 0x6aa8 <digitalWrite>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TInputs.cpp:139
   digitalWrite(PIN_PD2, LOW);
    2956:	60 e0       	ldi	r22, 0x00	; 0
    2958:	8d e1       	ldi	r24, 0x1D	; 29
    295a:	0e 94 54 35 	call	0x6aa8	; 0x6aa8 <digitalWrite>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TInputs.cpp:140
   digitalWrite(PIN_PD3, LOW);
    295e:	60 e0       	ldi	r22, 0x00	; 0
    2960:	8c e1       	ldi	r24, 0x1C	; 28
    2962:	0e 94 54 35 	call	0x6aa8	; 0x6aa8 <digitalWrite>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TInputs.cpp:141
   digitalWrite(PIN_PD4, LOW);
    2966:	60 e0       	ldi	r22, 0x00	; 0
    2968:	8b e1       	ldi	r24, 0x1B	; 27
    296a:	0e 94 54 35 	call	0x6aa8	; 0x6aa8 <digitalWrite>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TInputs.cpp:142
   digitalWrite(PIN_PD5, LOW);
    296e:	60 e0       	ldi	r22, 0x00	; 0
    2970:	8a e1       	ldi	r24, 0x1A	; 26
    2972:	0e 94 54 35 	call	0x6aa8	; 0x6aa8 <digitalWrite>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TInputs.cpp:143
   digitalWrite(PIN_PD6, LOW);
    2976:	60 e0       	ldi	r22, 0x00	; 0
    2978:	89 e1       	ldi	r24, 0x19	; 25
    297a:	0e 94 54 35 	call	0x6aa8	; 0x6aa8 <digitalWrite>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TInputs.cpp:144
   digitalWrite(PIN_PD7, LOW); // Record only
    297e:	60 e0       	ldi	r22, 0x00	; 0
    2980:	88 e1       	ldi	r24, 0x18	; 24
    2982:	0e 94 54 35 	call	0x6aa8	; 0x6aa8 <digitalWrite>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TInputs.cpp:147

   int x = 0;
   x |= readKeyLine(PIN_PD5, 0);
    2986:	50 e0       	ldi	r21, 0x00	; 0
    2988:	40 e0       	ldi	r20, 0x00	; 0
    298a:	6a e1       	ldi	r22, 0x1A	; 26
    298c:	70 e0       	ldi	r23, 0x00	; 0
    298e:	c8 01       	movw	r24, r16
    2990:	0e 94 b0 13 	call	0x2760	; 0x2760 <TInputs::readKeyLine(int, int)>
    2994:	ec 01       	movw	r28, r24
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TInputs.cpp:148
   x |= readKeyLine(PIN_PD6, 3);
    2996:	43 e0       	ldi	r20, 0x03	; 3
    2998:	50 e0       	ldi	r21, 0x00	; 0
    299a:	69 e1       	ldi	r22, 0x19	; 25
    299c:	70 e0       	ldi	r23, 0x00	; 0
    299e:	c8 01       	movw	r24, r16
    29a0:	0e 94 b0 13 	call	0x2760	; 0x2760 <TInputs::readKeyLine(int, int)>
    29a4:	c8 2b       	or	r28, r24
    29a6:	d9 2b       	or	r29, r25
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TInputs.cpp:149
   x |= readKeyLine(PIN_PD7, 6);
    29a8:	46 e0       	ldi	r20, 0x06	; 6
    29aa:	50 e0       	ldi	r21, 0x00	; 0
    29ac:	68 e1       	ldi	r22, 0x18	; 24
    29ae:	70 e0       	ldi	r23, 0x00	; 0
    29b0:	c8 01       	movw	r24, r16
    29b2:	0e 94 b0 13 	call	0x2760	; 0x2760 <TInputs::readKeyLine(int, int)>
    29b6:	8c 2b       	or	r24, r28
    29b8:	9d 2b       	or	r25, r29
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TInputs.cpp:151

   if (x != cassetteState) cassetteState = x;
    29ba:	f8 01       	movw	r30, r16
    29bc:	22 81       	ldd	r18, Z+2	; 0x02
    29be:	33 81       	ldd	r19, Z+3	; 0x03
    29c0:	28 17       	cp	r18, r24
    29c2:	39 07       	cpc	r19, r25
    29c4:	11 f0       	breq	.+4      	; 0x29ca <TInputs::ReadCassetteState()+0x8e>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TInputs.cpp:151 (discriminator 1)
    29c6:	93 83       	std	Z+3, r25	; 0x03
    29c8:	82 83       	std	Z+2, r24	; 0x02
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TInputs.cpp:153

}
    29ca:	df 91       	pop	r29
    29cc:	cf 91       	pop	r28
    29ce:	1f 91       	pop	r17
    29d0:	0f 91       	pop	r16
    29d2:	08 95       	ret

000029d4 <TInputs::GetCassetteState()>:
_ZN7TInputs16GetCassetteStateEv():
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TInputs.cpp:128

   return DemoMode;
}

int TInputs::GetCassetteState()
{
    29d4:	cf 93       	push	r28
    29d6:	df 93       	push	r29
    29d8:	ec 01       	movw	r28, r24
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TInputs.cpp:129
   ReadCassetteState();
    29da:	0e 94 9e 14 	call	0x293c	; 0x293c <TInputs::ReadCassetteState()>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TInputs.cpp:131
   return cassetteState;
}
    29de:	8a 81       	ldd	r24, Y+2	; 0x02
    29e0:	9b 81       	ldd	r25, Y+3	; 0x03
    29e2:	df 91       	pop	r29
    29e4:	cf 91       	pop	r28
    29e6:	08 95       	ret

000029e8 <TInputs::ReadKeySet1()>:
_ZN7TInputs11ReadKeySet1Ev():
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TInputs.cpp:181

}

int TInputs::ReadKeySet1()
{
   if (pressedKeys == CASS_NEXT) return 1;
    29e8:	fc 01       	movw	r30, r24
    29ea:	20 81       	ld	r18, Z
    29ec:	31 81       	ldd	r19, Z+1	; 0x01
    29ee:	81 e0       	ldi	r24, 0x01	; 1
    29f0:	90 e0       	ldi	r25, 0x00	; 0
    29f2:	21 15       	cp	r18, r1
    29f4:	f2 e0       	ldi	r31, 0x02	; 2
    29f6:	3f 07       	cpc	r19, r31
    29f8:	49 f0       	breq	.+18     	; 0x2a0c <TInputs::ReadKeySet1()+0x24>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TInputs.cpp:182
   if (pressedKeys == CASS_PREV) return -1;
    29fa:	21 15       	cp	r18, r1
    29fc:	34 40       	sbci	r19, 0x04	; 4
    29fe:	11 f0       	breq	.+4      	; 0x2a04 <TInputs::ReadKeySet1()+0x1c>
    2a00:	90 e0       	ldi	r25, 0x00	; 0
    2a02:	80 e0       	ldi	r24, 0x00	; 0
    2a04:	91 95       	neg	r25
    2a06:	81 95       	neg	r24
    2a08:	91 09       	sbc	r25, r1
    2a0a:	08 95       	ret
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TInputs.cpp:184
   return 0;
}
    2a0c:	08 95       	ret

00002a0e <TInputs::ReadKeySet2()>:
_ZN7TInputs11ReadKeySet2Ev():
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TInputs.cpp:187
int TInputs::ReadKeySet2()
{
   if (pressedKeys == CASS_FORWARD) return 1;
    2a0e:	fc 01       	movw	r30, r24
    2a10:	20 81       	ld	r18, Z
    2a12:	31 81       	ldd	r19, Z+1	; 0x01
    2a14:	81 e0       	ldi	r24, 0x01	; 1
    2a16:	90 e0       	ldi	r25, 0x00	; 0
    2a18:	20 32       	cpi	r18, 0x20	; 32
    2a1a:	31 05       	cpc	r19, r1
    2a1c:	49 f0       	breq	.+18     	; 0x2a30 <TInputs::ReadKeySet2()+0x22>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TInputs.cpp:188
   if (pressedKeys == CASS_REWIND) return -1;   
    2a1e:	20 31       	cpi	r18, 0x10	; 16
    2a20:	31 05       	cpc	r19, r1
    2a22:	11 f0       	breq	.+4      	; 0x2a28 <TInputs::ReadKeySet2()+0x1a>
    2a24:	90 e0       	ldi	r25, 0x00	; 0
    2a26:	80 e0       	ldi	r24, 0x00	; 0
    2a28:	91 95       	neg	r25
    2a2a:	81 95       	neg	r24
    2a2c:	91 09       	sbc	r25, r1
    2a2e:	08 95       	ret
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TInputs.cpp:190
   return 0;
}
    2a30:	08 95       	ret

00002a32 <TTapeController::AddSearchTrackNumber(int) [clone .part.0]>:
_ZN15TTapeController20AddSearchTrackNumberEi():
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:262


void TTapeController::StopKeyPressed()
{
    GotoPosition = -1;
    Stop();
    2a32:	fc 01       	movw	r30, r24
    2a34:	84 a5       	ldd	r24, Z+44	; 0x2c
    2a36:	95 a5       	ldd	r25, Z+45	; 0x2d
    2a38:	88 3f       	cpi	r24, 0xF8	; 248
    2a3a:	2f ef       	ldi	r18, 0xFF	; 255
    2a3c:	92 07       	cpc	r25, r18
    2a3e:	1c f0       	brlt	.+6      	; 0x2a46 <TTapeController::AddSearchTrackNumber(int) [clone .part.0]+0x14>
    2a40:	01 97       	sbiw	r24, 0x01	; 1
    2a42:	95 a7       	std	Z+45, r25	; 0x2d
    2a44:	84 a7       	std	Z+44, r24	; 0x2c
    2a46:	84 a5       	ldd	r24, Z+44	; 0x2c
    2a48:	95 a5       	ldd	r25, Z+45	; 0x2d
    2a4a:	89 2b       	or	r24, r25
    2a4c:	31 f4       	brne	.+12     	; 0x2a5a <TTapeController::AddSearchTrackNumber(int) [clone .part.0]+0x28>
    2a4e:	8f ef       	ldi	r24, 0xFF	; 255
    2a50:	9f ef       	ldi	r25, 0xFF	; 255
    2a52:	95 a7       	std	Z+45, r25	; 0x2d
    2a54:	84 a7       	std	Z+44, r24	; 0x2c
    2a56:	81 e0       	ldi	r24, 0x01	; 1
    2a58:	08 95       	ret
    2a5a:	80 e0       	ldi	r24, 0x00	; 0
    2a5c:	08 95       	ret

00002a5e <TTapeController::GetDirection()>:
_ZN15TTapeController12GetDirectionEv():
    2a5e:	8e 54       	subi	r24, 0x4E	; 78
    2a60:	9f 4f       	sbci	r25, 0xFF	; 255
    2a62:	fc 01       	movw	r30, r24
    2a64:	80 81       	ld	r24, Z
    2a66:	91 81       	ldd	r25, Z+1	; 0x01
    2a68:	08 95       	ret

00002a6a <TTapeController::IsRecording()>:
_ZN15TTapeController11IsRecordingEv():
    2a6a:	8e 57       	subi	r24, 0x7E	; 126
    2a6c:	9f 4f       	sbci	r25, 0xFF	; 255
    2a6e:	fc 01       	movw	r30, r24
    2a70:	80 81       	ld	r24, Z
    2a72:	08 95       	ret

00002a74 <TTapeController::GetCurrentState()>:
_ZN15TTapeController15GetCurrentStateEv():
    2a74:	fc 01       	movw	r30, r24
    2a76:	86 a1       	ldd	r24, Z+38	; 0x26
    2a78:	97 a1       	ldd	r25, Z+39	; 0x27
    2a7a:	08 95       	ret

00002a7c <TTapeController::IsOnRecord()>:
_ZN15TTapeController10IsOnRecordEv():
    2a7c:	86 57       	subi	r24, 0x76	; 118
    2a7e:	9f 4f       	sbci	r25, 0xFF	; 255
    2a80:	fc 01       	movw	r30, r24
    2a82:	80 81       	ld	r24, Z
    2a84:	08 95       	ret

00002a86 <TTapeController::IsOnAutoRecord()>:
_ZN15TTapeController14IsOnAutoRecordEv():
    2a86:	9c 01       	movw	r18, r24
    2a88:	fc 01       	movw	r30, r24
    2a8a:	e6 57       	subi	r30, 0x76	; 118
    2a8c:	ff 4f       	sbci	r31, 0xFF	; 255
    2a8e:	80 81       	ld	r24, Z
    2a90:	88 23       	and	r24, r24
    2a92:	51 f0       	breq	.+20     	; 0x2aa8 <TTapeController::IsOnAutoRecord()+0x22>
    2a94:	24 54       	subi	r18, 0x44	; 68
    2a96:	3f 4f       	sbci	r19, 0xFF	; 255
    2a98:	81 e0       	ldi	r24, 0x01	; 1
    2a9a:	f9 01       	movw	r30, r18
    2a9c:	20 81       	ld	r18, Z
    2a9e:	31 81       	ldd	r19, Z+1	; 0x01
    2aa0:	23 30       	cpi	r18, 0x03	; 3
    2aa2:	31 05       	cpc	r19, r1
    2aa4:	09 f0       	breq	.+2      	; 0x2aa8 <TTapeController::IsOnAutoRecord()+0x22>
    2aa6:	80 e0       	ldi	r24, 0x00	; 0
    2aa8:	08 95       	ret

00002aaa <TTapeController::IsOnSyncRecord()>:
_ZN15TTapeController14IsOnSyncRecordEv():
    2aaa:	9c 01       	movw	r18, r24
    2aac:	fc 01       	movw	r30, r24
    2aae:	e6 57       	subi	r30, 0x76	; 118
    2ab0:	ff 4f       	sbci	r31, 0xFF	; 255
    2ab2:	80 81       	ld	r24, Z
    2ab4:	88 23       	and	r24, r24
    2ab6:	51 f0       	breq	.+20     	; 0x2acc <TTapeController::IsOnSyncRecord()+0x22>
    2ab8:	24 54       	subi	r18, 0x44	; 68
    2aba:	3f 4f       	sbci	r19, 0xFF	; 255
    2abc:	81 e0       	ldi	r24, 0x01	; 1
    2abe:	f9 01       	movw	r30, r18
    2ac0:	20 81       	ld	r18, Z
    2ac2:	31 81       	ldd	r19, Z+1	; 0x01
    2ac4:	22 30       	cpi	r18, 0x02	; 2
    2ac6:	31 05       	cpc	r19, r1
    2ac8:	09 f0       	breq	.+2      	; 0x2acc <TTapeController::IsOnSyncRecord()+0x22>
    2aca:	80 e0       	ldi	r24, 0x00	; 0
    2acc:	08 95       	ret

00002ace <TTapeController::StartCapstan()>:
_ZN15TTapeController12StartCapstanEv():
    2ace:	cf 93       	push	r28
    2ad0:	df 93       	push	r29
    2ad2:	ec 01       	movw	r28, r24
    2ad4:	62 e2       	ldi	r22, 0x22	; 34
    2ad6:	74 e0       	ldi	r23, 0x04	; 4
    2ad8:	82 ed       	ldi	r24, 0xD2	; 210
    2ada:	9a e0       	ldi	r25, 0x0A	; 10
    2adc:	0e 94 e9 37 	call	0x6fd2	; 0x6fd2 <Print::println(char const*)>
    2ae0:	fe 01       	movw	r30, r28
    2ae2:	ee 55       	subi	r30, 0x5E	; 94
    2ae4:	ff 4f       	sbci	r31, 0xFF	; 255
    2ae6:	10 82       	st	Z, r1
    2ae8:	11 82       	std	Z+1, r1	; 0x01
    2aea:	12 82       	std	Z+2, r1	; 0x02
    2aec:	13 82       	std	Z+3, r1	; 0x03
    2aee:	61 e0       	ldi	r22, 0x01	; 1
    2af0:	8e 85       	ldd	r24, Y+14	; 0x0e
    2af2:	df 91       	pop	r29
    2af4:	cf 91       	pop	r28
    2af6:	0c 94 54 35 	jmp	0x6aa8	; 0x6aa8 <digitalWrite>

00002afa <TTapeController::StopCapstan()>:
_ZN15TTapeController11StopCapstanEv():
    2afa:	cf 93       	push	r28
    2afc:	df 93       	push	r29
    2afe:	fc 01       	movw	r30, r24
    2b00:	ee 55       	subi	r30, 0x5E	; 94
    2b02:	ff 4f       	sbci	r31, 0xFF	; 255
    2b04:	ec 01       	movw	r28, r24
    2b06:	c2 55       	subi	r28, 0x52	; 82
    2b08:	df 4f       	sbci	r29, 0xFF	; 255
    2b0a:	86 56       	subi	r24, 0x66	; 102
    2b0c:	9f 4f       	sbci	r25, 0xFF	; 255
    2b0e:	dc 01       	movw	r26, r24
    2b10:	8d 91       	ld	r24, X+
    2b12:	9c 91       	ld	r25, X
    2b14:	09 2e       	mov	r0, r25
    2b16:	00 0c       	add	r0, r0
    2b18:	aa 0b       	sbc	r26, r26
    2b1a:	bb 0b       	sbc	r27, r27
    2b1c:	48 81       	ld	r20, Y
    2b1e:	59 81       	ldd	r21, Y+1	; 0x01
    2b20:	6a 81       	ldd	r22, Y+2	; 0x02
    2b22:	7b 81       	ldd	r23, Y+3	; 0x03
    2b24:	84 0f       	add	r24, r20
    2b26:	95 1f       	adc	r25, r21
    2b28:	a6 1f       	adc	r26, r22
    2b2a:	b7 1f       	adc	r27, r23
    2b2c:	80 83       	st	Z, r24
    2b2e:	91 83       	std	Z+1, r25	; 0x01
    2b30:	a2 83       	std	Z+2, r26	; 0x02
    2b32:	b3 83       	std	Z+3, r27	; 0x03
    2b34:	df 91       	pop	r29
    2b36:	cf 91       	pop	r28
    2b38:	08 95       	ret

00002b3a <TTapeController::IsFastWinding()>:
_ZN15TTapeController13IsFastWindingEv():
    2b3a:	82 54       	subi	r24, 0x42	; 66
    2b3c:	9f 4f       	sbci	r25, 0xFF	; 255
    2b3e:	fc 01       	movw	r30, r24
    2b40:	80 81       	ld	r24, Z
    2b42:	91 81       	ldd	r25, Z+1	; 0x01
    2b44:	08 95       	ret

00002b46 <TTapeController::NewTrack()>:
_ZN15TTapeController8NewTrackEv():
    2b46:	cf 93       	push	r28
    2b48:	df 93       	push	r29
    2b4a:	ec 01       	movw	r28, r24
    2b4c:	60 e3       	ldi	r22, 0x30	; 48
    2b4e:	74 e0       	ldi	r23, 0x04	; 4
    2b50:	82 ed       	ldi	r24, 0xD2	; 210
    2b52:	9a e0       	ldi	r25, 0x0A	; 10
    2b54:	0e 94 e9 37 	call	0x6fd2	; 0x6fd2 <Print::println(char const*)>
    2b58:	fe 01       	movw	r30, r28
    2b5a:	ee 56       	subi	r30, 0x6E	; 110
    2b5c:	ff 4f       	sbci	r31, 0xFF	; 255
    2b5e:	80 81       	ld	r24, Z
    2b60:	81 11       	cpse	r24, r1
    2b62:	04 c0       	rjmp	.+8      	; 0x2b6c <TTapeController::NewTrack()+0x26>
    2b64:	cc 57       	subi	r28, 0x7C	; 124
    2b66:	df 4f       	sbci	r29, 0xFF	; 255
    2b68:	81 e0       	ldi	r24, 0x01	; 1
    2b6a:	88 83       	st	Y, r24
    2b6c:	df 91       	pop	r29
    2b6e:	cf 91       	pop	r28
    2b70:	08 95       	ret

00002b72 <TTapeController::AnyProgrammedTracksAfter(int)>:
_ZN15TTapeController24AnyProgrammedTracksAfterEi():
    2b72:	dc 01       	movw	r26, r24
    2b74:	6f 5f       	subi	r22, 0xFF	; 255
    2b76:	16 96       	adiw	r26, 0x06	; 6
    2b78:	4d 91       	ld	r20, X+
    2b7a:	5c 91       	ld	r21, X
    2b7c:	17 97       	sbiw	r26, 0x07	; 7
    2b7e:	90 e0       	ldi	r25, 0x00	; 0
    2b80:	26 2f       	mov	r18, r22
    2b82:	29 0f       	add	r18, r25
    2b84:	e2 2f       	mov	r30, r18
    2b86:	f0 e0       	ldi	r31, 0x00	; 0
    2b88:	4e 17       	cp	r20, r30
    2b8a:	5f 07       	cpc	r21, r31
    2b8c:	64 f0       	brlt	.+24     	; 0x2ba6 <TTapeController::AnyProgrammedTracksAfter(int)+0x34>
    2b8e:	9f 5f       	subi	r25, 0xFF	; 255
    2b90:	77 96       	adiw	r30, 0x17	; 23
    2b92:	ee 0f       	add	r30, r30
    2b94:	ff 1f       	adc	r31, r31
    2b96:	ea 0f       	add	r30, r26
    2b98:	fb 1f       	adc	r31, r27
    2b9a:	20 81       	ld	r18, Z
    2b9c:	31 81       	ldd	r19, Z+1	; 0x01
    2b9e:	23 2b       	or	r18, r19
    2ba0:	79 f3       	breq	.-34     	; 0x2b80 <TTapeController::AnyProgrammedTracksAfter(int)+0xe>
    2ba2:	81 e0       	ldi	r24, 0x01	; 1
    2ba4:	08 95       	ret
    2ba6:	80 e0       	ldi	r24, 0x00	; 0
    2ba8:	08 95       	ret

00002baa <TTapeController::ClearProgramm()>:
_ZN15TTapeController13ClearProgrammEv():
    2baa:	cf 93       	push	r28
    2bac:	df 93       	push	r29
    2bae:	ec 01       	movw	r28, r24
    2bb0:	6c e3       	ldi	r22, 0x3C	; 60
    2bb2:	74 e0       	ldi	r23, 0x04	; 4
    2bb4:	82 ed       	ldi	r24, 0xD2	; 210
    2bb6:	9a e0       	ldi	r25, 0x0A	; 10
    2bb8:	0e 94 e9 37 	call	0x6fd2	; 0x6fd2 <Print::println(char const*)>
    2bbc:	19 82       	std	Y+1, r1	; 0x01
    2bbe:	4e 81       	ldd	r20, Y+6	; 0x06
    2bc0:	5f 81       	ldd	r21, Y+7	; 0x07
    2bc2:	20 e0       	ldi	r18, 0x00	; 0
    2bc4:	e2 2f       	mov	r30, r18
    2bc6:	f0 e0       	ldi	r31, 0x00	; 0
    2bc8:	4e 17       	cp	r20, r30
    2bca:	5f 07       	cpc	r21, r31
    2bcc:	4c f0       	brlt	.+18     	; 0x2be0 <TTapeController::ClearProgramm()+0x36>
    2bce:	77 96       	adiw	r30, 0x17	; 23
    2bd0:	ee 0f       	add	r30, r30
    2bd2:	ff 1f       	adc	r31, r31
    2bd4:	ec 0f       	add	r30, r28
    2bd6:	fd 1f       	adc	r31, r29
    2bd8:	11 82       	std	Z+1, r1	; 0x01
    2bda:	10 82       	st	Z, r1
    2bdc:	2f 5f       	subi	r18, 0xFF	; 255
    2bde:	f2 cf       	rjmp	.-28     	; 0x2bc4 <TTapeController::ClearProgramm()+0x1a>
    2be0:	88 a1       	ldd	r24, Y+32	; 0x20
    2be2:	99 a1       	ldd	r25, Y+33	; 0x21
    2be4:	df 91       	pop	r29
    2be6:	cf 91       	pop	r28
    2be8:	0c 94 5a 0b 	jmp	0x16b4	; 0x16b4 <TDisplay::Clear()>

00002bec <TTapeController::TTapeController(TDisplay*, TInputs*, TCounter*)>:
_ZN15TTapeControllerC2EP8TDisplayP7TInputsP8TCounter():
    2bec:	cf 92       	push	r12
    2bee:	df 92       	push	r13
    2bf0:	ef 92       	push	r14
    2bf2:	ff 92       	push	r15
    2bf4:	1f 93       	push	r17
    2bf6:	cf 93       	push	r28
    2bf8:	df 93       	push	r29
    2bfa:	ec 01       	movw	r28, r24
    2bfc:	cb 01       	movw	r24, r22
    2bfe:	18 82       	st	Y, r1
    2c00:	19 82       	std	Y+1, r1	; 0x01
    2c02:	1a 82       	std	Y+2, r1	; 0x02
    2c04:	1b 82       	std	Y+3, r1	; 0x03
    2c06:	1d 82       	std	Y+5, r1	; 0x05
    2c08:	1c 82       	std	Y+4, r1	; 0x04
    2c0a:	68 e2       	ldi	r22, 0x28	; 40
    2c0c:	70 e0       	ldi	r23, 0x00	; 0
    2c0e:	7f 83       	std	Y+7, r23	; 0x07
    2c10:	6e 83       	std	Y+6, r22	; 0x06
    2c12:	60 e5       	ldi	r22, 0x50	; 80
    2c14:	70 e0       	ldi	r23, 0x00	; 0
    2c16:	79 87       	std	Y+9, r23	; 0x09
    2c18:	68 87       	std	Y+8, r22	; 0x08
    2c1a:	64 e6       	ldi	r22, 0x64	; 100
    2c1c:	70 e0       	ldi	r23, 0x00	; 0
    2c1e:	7b 87       	std	Y+11, r23	; 0x0b
    2c20:	6a 87       	std	Y+10, r22	; 0x0a
    2c22:	e6 e9       	ldi	r30, 0x96	; 150
    2c24:	f0 e0       	ldi	r31, 0x00	; 0
    2c26:	fd 87       	std	Y+13, r31	; 0x0d
    2c28:	ec 87       	std	Y+12, r30	; 0x0c
    2c2a:	6e e0       	ldi	r22, 0x0E	; 14
    2c2c:	70 e0       	ldi	r23, 0x00	; 0
    2c2e:	7f 87       	std	Y+15, r23	; 0x0f
    2c30:	6e 87       	std	Y+14, r22	; 0x0e
    2c32:	63 e1       	ldi	r22, 0x13	; 19
    2c34:	70 e0       	ldi	r23, 0x00	; 0
    2c36:	79 8b       	std	Y+17, r23	; 0x11
    2c38:	68 8b       	std	Y+16, r22	; 0x10
    2c3a:	6b e0       	ldi	r22, 0x0B	; 11
    2c3c:	70 e0       	ldi	r23, 0x00	; 0
    2c3e:	7b 8b       	std	Y+19, r23	; 0x13
    2c40:	6a 8b       	std	Y+18, r22	; 0x12
    2c42:	6a e0       	ldi	r22, 0x0A	; 10
    2c44:	70 e0       	ldi	r23, 0x00	; 0
    2c46:	7d 8b       	std	Y+21, r23	; 0x15
    2c48:	6c 8b       	std	Y+20, r22	; 0x14
    2c4a:	6d e0       	ldi	r22, 0x0D	; 13
    2c4c:	70 e0       	ldi	r23, 0x00	; 0
    2c4e:	7f 8b       	std	Y+23, r23	; 0x17
    2c50:	6e 8b       	std	Y+22, r22	; 0x16
    2c52:	64 e1       	ldi	r22, 0x14	; 20
    2c54:	70 e0       	ldi	r23, 0x00	; 0
    2c56:	79 8f       	std	Y+25, r23	; 0x19
    2c58:	68 8f       	std	Y+24, r22	; 0x18
    2c5a:	6c e0       	ldi	r22, 0x0C	; 12
    2c5c:	70 e0       	ldi	r23, 0x00	; 0
    2c5e:	7b 8f       	std	Y+27, r23	; 0x1b
    2c60:	6a 8f       	std	Y+26, r22	; 0x1a
    2c62:	64 e0       	ldi	r22, 0x04	; 4
    2c64:	70 e0       	ldi	r23, 0x00	; 0
    2c66:	7d 8f       	std	Y+29, r23	; 0x1d
    2c68:	6c 8f       	std	Y+28, r22	; 0x1c
    2c6a:	67 e1       	ldi	r22, 0x17	; 23
    2c6c:	70 e0       	ldi	r23, 0x00	; 0
    2c6e:	7f 8f       	std	Y+31, r23	; 0x1f
    2c70:	6e 8f       	std	Y+30, r22	; 0x1e
    2c72:	1f a2       	std	Y+39, r1	; 0x27
    2c74:	1e a2       	std	Y+38, r1	; 0x26
    2c76:	61 e0       	ldi	r22, 0x01	; 1
    2c78:	70 e0       	ldi	r23, 0x00	; 0
    2c7a:	79 a7       	std	Y+41, r23	; 0x29
    2c7c:	68 a7       	std	Y+40, r22	; 0x28
    2c7e:	af ef       	ldi	r26, 0xFF	; 255
    2c80:	bf ef       	ldi	r27, 0xFF	; 255
    2c82:	bb a7       	std	Y+43, r27	; 0x2b
    2c84:	aa a7       	std	Y+42, r26	; 0x2a
    2c86:	1d a6       	std	Y+45, r1	; 0x2d
    2c88:	1c a6       	std	Y+44, r1	; 0x2c
    2c8a:	de 01       	movw	r26, r28
    2c8c:	a0 58       	subi	r26, 0x80	; 128
    2c8e:	bf 4f       	sbci	r27, 0xFF	; 255
    2c90:	11 96       	adiw	r26, 0x01	; 1
    2c92:	1c 92       	st	X, r1
    2c94:	1e 92       	st	-X, r1
    2c96:	13 96       	adiw	r26, 0x03	; 3
    2c98:	1c 92       	st	X, r1
    2c9a:	11 96       	adiw	r26, 0x01	; 1
    2c9c:	1c 92       	st	X, r1
    2c9e:	11 96       	adiw	r26, 0x01	; 1
    2ca0:	1c 92       	st	X, r1
    2ca2:	11 96       	adiw	r26, 0x01	; 1
    2ca4:	1c 92       	st	X, r1
    2ca6:	11 96       	adiw	r26, 0x01	; 1
    2ca8:	11 96       	adiw	r26, 0x01	; 1
    2caa:	1c 92       	st	X, r1
    2cac:	1e 92       	st	-X, r1
    2cae:	12 96       	adiw	r26, 0x02	; 2
    2cb0:	1c 92       	st	X, r1
    2cb2:	11 96       	adiw	r26, 0x01	; 1
    2cb4:	1c 92       	st	X, r1
    2cb6:	11 96       	adiw	r26, 0x01	; 1
    2cb8:	1c 92       	st	X, r1
    2cba:	11 96       	adiw	r26, 0x01	; 1
    2cbc:	1c 92       	st	X, r1
    2cbe:	11 96       	adiw	r26, 0x01	; 1
    2cc0:	1c 92       	st	X, r1
    2cc2:	11 96       	adiw	r26, 0x01	; 1
    2cc4:	1c 92       	st	X, r1
    2cc6:	11 96       	adiw	r26, 0x01	; 1
    2cc8:	1c 92       	st	X, r1
    2cca:	11 96       	adiw	r26, 0x01	; 1
    2ccc:	11 e0       	ldi	r17, 0x01	; 1
    2cce:	1c 93       	st	X, r17
    2cd0:	11 96       	adiw	r26, 0x01	; 1
    2cd2:	1c 93       	st	X, r17
    2cd4:	11 96       	adiw	r26, 0x01	; 1
    2cd6:	1c 92       	st	X, r1
    2cd8:	11 96       	adiw	r26, 0x01	; 1
    2cda:	cc 24       	eor	r12, r12
    2cdc:	ca 94       	dec	r12
    2cde:	dc 2c       	mov	r13, r12
    2ce0:	76 01       	movw	r14, r12
    2ce2:	cd 92       	st	X+, r12
    2ce4:	dd 92       	st	X+, r13
    2ce6:	ed 92       	st	X+, r14
    2ce8:	fc 92       	st	X, r15
    2cea:	13 97       	sbiw	r26, 0x03	; 3
    2cec:	14 96       	adiw	r26, 0x04	; 4
    2cee:	11 96       	adiw	r26, 0x01	; 1
    2cf0:	1c 92       	st	X, r1
    2cf2:	1e 92       	st	-X, r1
    2cf4:	12 96       	adiw	r26, 0x02	; 2
    2cf6:	1c 92       	st	X, r1
    2cf8:	11 96       	adiw	r26, 0x01	; 1
    2cfa:	0f 2e       	mov	r0, r31
    2cfc:	f8 e8       	ldi	r31, 0x88	; 136
    2cfe:	ef 2e       	mov	r14, r31
    2d00:	f3 e1       	ldi	r31, 0x13	; 19
    2d02:	ff 2e       	mov	r15, r31
    2d04:	f0 2d       	mov	r31, r0
    2d06:	11 96       	adiw	r26, 0x01	; 1
    2d08:	fc 92       	st	X, r15
    2d0a:	ee 92       	st	-X, r14
    2d0c:	12 96       	adiw	r26, 0x02	; 2
    2d0e:	ed 93       	st	X+, r30
    2d10:	fc 93       	st	X, r31
    2d12:	fe 01       	movw	r30, r28
    2d14:	e2 56       	subi	r30, 0x62	; 98
    2d16:	ff 4f       	sbci	r31, 0xFF	; 255
    2d18:	10 82       	st	Z, r1
    2d1a:	11 82       	std	Z+1, r1	; 0x01
    2d1c:	12 82       	std	Z+2, r1	; 0x02
    2d1e:	13 82       	std	Z+3, r1	; 0x03
    2d20:	34 96       	adiw	r30, 0x04	; 4
    2d22:	10 82       	st	Z, r1
    2d24:	11 82       	std	Z+1, r1	; 0x01
    2d26:	12 82       	std	Z+2, r1	; 0x02
    2d28:	13 82       	std	Z+3, r1	; 0x03
    2d2a:	34 96       	adiw	r30, 0x04	; 4
    2d2c:	10 82       	st	Z, r1
    2d2e:	11 82       	std	Z+1, r1	; 0x01
    2d30:	12 82       	std	Z+2, r1	; 0x02
    2d32:	13 82       	std	Z+3, r1	; 0x03
    2d34:	34 96       	adiw	r30, 0x04	; 4
    2d36:	10 82       	st	Z, r1
    2d38:	11 82       	std	Z+1, r1	; 0x01
    2d3a:	12 82       	std	Z+2, r1	; 0x02
    2d3c:	13 82       	std	Z+3, r1	; 0x03
    2d3e:	34 96       	adiw	r30, 0x04	; 4
    2d40:	10 82       	st	Z, r1
    2d42:	11 82       	std	Z+1, r1	; 0x01
    2d44:	12 82       	std	Z+2, r1	; 0x02
    2d46:	13 82       	std	Z+3, r1	; 0x03
    2d48:	7e 01       	movw	r14, r28
    2d4a:	e4 eb       	ldi	r30, 0xB4	; 180
    2d4c:	ee 0e       	add	r14, r30
    2d4e:	f1 1c       	adc	r15, r1
    2d50:	f7 01       	movw	r30, r14
    2d52:	10 83       	st	Z, r17
    2d54:	31 96       	adiw	r30, 0x01	; 1
    2d56:	10 82       	st	Z, r1
    2d58:	31 96       	adiw	r30, 0x01	; 1
    2d5a:	10 82       	st	Z, r1
    2d5c:	31 96       	adiw	r30, 0x01	; 1
    2d5e:	10 82       	st	Z, r1
    2d60:	31 96       	adiw	r30, 0x01	; 1
    2d62:	10 82       	st	Z, r1
    2d64:	31 96       	adiw	r30, 0x01	; 1
    2d66:	10 82       	st	Z, r1
    2d68:	31 96       	adiw	r30, 0x01	; 1
    2d6a:	11 82       	std	Z+1, r1	; 0x01
    2d6c:	10 82       	st	Z, r1
    2d6e:	32 96       	adiw	r30, 0x02	; 2
    2d70:	11 82       	std	Z+1, r1	; 0x01
    2d72:	10 82       	st	Z, r1
    2d74:	32 96       	adiw	r30, 0x02	; 2
    2d76:	11 82       	std	Z+1, r1	; 0x01
    2d78:	10 82       	st	Z, r1
    2d7a:	3c 97       	sbiw	r30, 0x0c	; 12
    2d7c:	71 83       	std	Z+1, r23	; 0x01
    2d7e:	60 83       	st	Z, r22
    2d80:	5b a3       	std	Y+35, r21	; 0x23
    2d82:	4a a3       	std	Y+34, r20	; 0x22
    2d84:	99 a3       	std	Y+33, r25	; 0x21
    2d86:	88 a3       	std	Y+32, r24	; 0x20
    2d88:	3d a3       	std	Y+37, r19	; 0x25
    2d8a:	2c a3       	std	Y+36, r18	; 0x24
    2d8c:	0e 94 5a 0b 	call	0x16b4	; 0x16b4 <TDisplay::Clear()>
    2d90:	f7 01       	movw	r30, r14
    2d92:	10 83       	st	Z, r17
    2d94:	ce 01       	movw	r24, r28
    2d96:	0e 94 d5 15 	call	0x2baa	; 0x2baa <TTapeController::ClearProgramm()>
    2d9a:	61 e0       	ldi	r22, 0x01	; 1
    2d9c:	8a 89       	ldd	r24, Y+18	; 0x12
    2d9e:	0e 94 18 35 	call	0x6a30	; 0x6a30 <pinMode>
    2da2:	61 e0       	ldi	r22, 0x01	; 1
    2da4:	8a 89       	ldd	r24, Y+18	; 0x12
    2da6:	0e 94 18 35 	call	0x6a30	; 0x6a30 <pinMode>
    2daa:	61 e0       	ldi	r22, 0x01	; 1
    2dac:	8c 89       	ldd	r24, Y+20	; 0x14
    2dae:	0e 94 18 35 	call	0x6a30	; 0x6a30 <pinMode>
    2db2:	61 e0       	ldi	r22, 0x01	; 1
    2db4:	8e 89       	ldd	r24, Y+22	; 0x16
    2db6:	0e 94 18 35 	call	0x6a30	; 0x6a30 <pinMode>
    2dba:	61 e0       	ldi	r22, 0x01	; 1
    2dbc:	88 8d       	ldd	r24, Y+24	; 0x18
    2dbe:	0e 94 18 35 	call	0x6a30	; 0x6a30 <pinMode>
    2dc2:	61 e0       	ldi	r22, 0x01	; 1
    2dc4:	8e 85       	ldd	r24, Y+14	; 0x0e
    2dc6:	0e 94 18 35 	call	0x6a30	; 0x6a30 <pinMode>
    2dca:	61 e0       	ldi	r22, 0x01	; 1
    2dcc:	88 89       	ldd	r24, Y+16	; 0x10
    2dce:	0e 94 18 35 	call	0x6a30	; 0x6a30 <pinMode>
    2dd2:	61 e0       	ldi	r22, 0x01	; 1
    2dd4:	8a 8d       	ldd	r24, Y+26	; 0x1a
    2dd6:	0e 94 18 35 	call	0x6a30	; 0x6a30 <pinMode>
    2dda:	60 e0       	ldi	r22, 0x00	; 0
    2ddc:	8a 89       	ldd	r24, Y+18	; 0x12
    2dde:	0e 94 54 35 	call	0x6aa8	; 0x6aa8 <digitalWrite>
    2de2:	60 e0       	ldi	r22, 0x00	; 0
    2de4:	8c 89       	ldd	r24, Y+20	; 0x14
    2de6:	0e 94 54 35 	call	0x6aa8	; 0x6aa8 <digitalWrite>
    2dea:	61 e0       	ldi	r22, 0x01	; 1
    2dec:	8e 89       	ldd	r24, Y+22	; 0x16
    2dee:	0e 94 54 35 	call	0x6aa8	; 0x6aa8 <digitalWrite>
    2df2:	61 e0       	ldi	r22, 0x01	; 1
    2df4:	88 8d       	ldd	r24, Y+24	; 0x18
    2df6:	0e 94 54 35 	call	0x6aa8	; 0x6aa8 <digitalWrite>
    2dfa:	60 e0       	ldi	r22, 0x00	; 0
    2dfc:	8e 85       	ldd	r24, Y+14	; 0x0e
    2dfe:	0e 94 54 35 	call	0x6aa8	; 0x6aa8 <digitalWrite>
    2e02:	61 e0       	ldi	r22, 0x01	; 1
    2e04:	88 89       	ldd	r24, Y+16	; 0x10
    2e06:	0e 94 54 35 	call	0x6aa8	; 0x6aa8 <digitalWrite>
    2e0a:	60 e0       	ldi	r22, 0x00	; 0
    2e0c:	8a 8d       	ldd	r24, Y+26	; 0x1a
    2e0e:	df 91       	pop	r29
    2e10:	cf 91       	pop	r28
    2e12:	1f 91       	pop	r17
    2e14:	ff 90       	pop	r15
    2e16:	ef 90       	pop	r14
    2e18:	df 90       	pop	r13
    2e1a:	cf 90       	pop	r12
    2e1c:	0c 94 54 35 	jmp	0x6aa8	; 0x6aa8 <digitalWrite>

00002e20 <TTapeController::HasProgramm()>:
_ZN15TTapeController11HasProgrammEv():
    2e20:	dc 01       	movw	r26, r24
    2e22:	16 96       	adiw	r26, 0x06	; 6
    2e24:	4d 91       	ld	r20, X+
    2e26:	5c 91       	ld	r21, X
    2e28:	17 97       	sbiw	r26, 0x07	; 7
    2e2a:	90 e0       	ldi	r25, 0x00	; 0
    2e2c:	e9 2f       	mov	r30, r25
    2e2e:	f0 e0       	ldi	r31, 0x00	; 0
    2e30:	4e 17       	cp	r20, r30
    2e32:	5f 07       	cpc	r21, r31
    2e34:	5c f0       	brlt	.+22     	; 0x2e4c <TTapeController::HasProgramm()+0x2c>
    2e36:	77 96       	adiw	r30, 0x17	; 23
    2e38:	ee 0f       	add	r30, r30
    2e3a:	ff 1f       	adc	r31, r31
    2e3c:	ea 0f       	add	r30, r26
    2e3e:	fb 1f       	adc	r31, r27
    2e40:	20 81       	ld	r18, Z
    2e42:	31 81       	ldd	r19, Z+1	; 0x01
    2e44:	23 2b       	or	r18, r19
    2e46:	21 f4       	brne	.+8      	; 0x2e50 <TTapeController::HasProgramm()+0x30>
    2e48:	9f 5f       	subi	r25, 0xFF	; 255
    2e4a:	f0 cf       	rjmp	.-32     	; 0x2e2c <TTapeController::HasProgramm()+0xc>
    2e4c:	80 e0       	ldi	r24, 0x00	; 0
    2e4e:	08 95       	ret
    2e50:	81 e0       	ldi	r24, 0x01	; 1
    2e52:	08 95       	ret

00002e54 <TTapeController::GetNextProgrammedTrack()>:
_ZN15TTapeController22GetNextProgrammedTrackEv():
    2e54:	fc 01       	movw	r30, r24
    2e56:	20 a5       	ldd	r18, Z+40	; 0x28
    2e58:	31 a5       	ldd	r19, Z+41	; 0x29
    2e5a:	2f 5f       	subi	r18, 0xFF	; 255
    2e5c:	3f 4f       	sbci	r19, 0xFF	; 255
    2e5e:	46 81       	ldd	r20, Z+6	; 0x06
    2e60:	57 81       	ldd	r21, Z+7	; 0x07
    2e62:	42 17       	cp	r20, r18
    2e64:	53 07       	cpc	r21, r19
    2e66:	14 f4       	brge	.+4      	; 0x2e6c <TTapeController::GetNextProgrammedTrack()+0x18>
    2e68:	21 e0       	ldi	r18, 0x01	; 1
    2e6a:	30 e0       	ldi	r19, 0x00	; 0
    2e6c:	ca 01       	movw	r24, r20
    2e6e:	d9 01       	movw	r26, r18
    2e70:	57 96       	adiw	r26, 0x17	; 23
    2e72:	aa 0f       	add	r26, r26
    2e74:	bb 1f       	adc	r27, r27
    2e76:	ae 0f       	add	r26, r30
    2e78:	bf 1f       	adc	r27, r31
    2e7a:	6d 91       	ld	r22, X+
    2e7c:	7c 91       	ld	r23, X
    2e7e:	67 2b       	or	r22, r23
    2e80:	61 f4       	brne	.+24     	; 0x2e9a <TTapeController::GetNextProgrammedTrack()+0x46>
    2e82:	18 16       	cp	r1, r24
    2e84:	19 06       	cpc	r1, r25
    2e86:	4c f4       	brge	.+18     	; 0x2e9a <TTapeController::GetNextProgrammedTrack()+0x46>
    2e88:	2f 5f       	subi	r18, 0xFF	; 255
    2e8a:	3f 4f       	sbci	r19, 0xFF	; 255
    2e8c:	42 17       	cp	r20, r18
    2e8e:	53 07       	cpc	r21, r19
    2e90:	14 f4       	brge	.+4      	; 0x2e96 <TTapeController::GetNextProgrammedTrack()+0x42>
    2e92:	21 e0       	ldi	r18, 0x01	; 1
    2e94:	30 e0       	ldi	r19, 0x00	; 0
    2e96:	01 97       	sbiw	r24, 0x01	; 1
    2e98:	ea cf       	rjmp	.-44     	; 0x2e6e <TTapeController::GetNextProgrammedTrack()+0x1a>
    2e9a:	89 2b       	or	r24, r25
    2e9c:	29 f4       	brne	.+10     	; 0x2ea8 <TTapeController::GetNextProgrammedTrack()+0x54>
    2e9e:	11 a6       	std	Z+41, r1	; 0x29
    2ea0:	10 a6       	std	Z+40, r1	; 0x28
    2ea2:	80 a5       	ldd	r24, Z+40	; 0x28
    2ea4:	91 a5       	ldd	r25, Z+41	; 0x29
    2ea6:	08 95       	ret
    2ea8:	31 a7       	std	Z+41, r19	; 0x29
    2eaa:	20 a7       	std	Z+40, r18	; 0x28
    2eac:	fa cf       	rjmp	.-12     	; 0x2ea2 <TTapeController::GetNextProgrammedTrack()+0x4e>

00002eae <TTapeController::AddSearchTrackNumber(int)>:
_ZN15TTapeController20AddSearchTrackNumberEi():
    2eae:	16 16       	cp	r1, r22
    2eb0:	17 06       	cpc	r1, r23
    2eb2:	ac f4       	brge	.+42     	; 0x2ede <TTapeController::AddSearchTrackNumber(int)+0x30>
    2eb4:	fc 01       	movw	r30, r24
    2eb6:	24 a5       	ldd	r18, Z+44	; 0x2c
    2eb8:	35 a5       	ldd	r19, Z+45	; 0x2d
    2eba:	29 30       	cpi	r18, 0x09	; 9
    2ebc:	31 05       	cpc	r19, r1
    2ebe:	24 f4       	brge	.+8      	; 0x2ec8 <TTapeController::AddSearchTrackNumber(int)+0x1a>
    2ec0:	2f 5f       	subi	r18, 0xFF	; 255
    2ec2:	3f 4f       	sbci	r19, 0xFF	; 255
    2ec4:	35 a7       	std	Z+45, r19	; 0x2d
    2ec6:	24 a7       	std	Z+44, r18	; 0x2c
    2ec8:	fc 01       	movw	r30, r24
    2eca:	24 a5       	ldd	r18, Z+44	; 0x2c
    2ecc:	35 a5       	ldd	r19, Z+45	; 0x2d
    2ece:	23 2b       	or	r18, r19
    2ed0:	41 f4       	brne	.+16     	; 0x2ee2 <TTapeController::AddSearchTrackNumber(int)+0x34>
    2ed2:	21 e0       	ldi	r18, 0x01	; 1
    2ed4:	30 e0       	ldi	r19, 0x00	; 0
    2ed6:	35 a7       	std	Z+45, r19	; 0x2d
    2ed8:	24 a7       	std	Z+44, r18	; 0x2c
    2eda:	81 e0       	ldi	r24, 0x01	; 1
    2edc:	08 95       	ret
    2ede:	0c 94 19 15 	jmp	0x2a32	; 0x2a32 <TTapeController::AddSearchTrackNumber(int) [clone .part.0]>
    2ee2:	80 e0       	ldi	r24, 0x00	; 0
    2ee4:	08 95       	ret

00002ee6 <TTapeController::GetTrackForProgramm(int)>:
_ZN15TTapeController19GetTrackForProgrammEi():
    2ee6:	0f 93       	push	r16
    2ee8:	1f 93       	push	r17
    2eea:	cf 93       	push	r28
    2eec:	df 93       	push	r29
    2eee:	ec 01       	movw	r28, r24
    2ef0:	8b 01       	movw	r16, r22
_ZN15TTapeController12GetDirectionEv():
    2ef2:	fc 01       	movw	r30, r24
    2ef4:	ee 54       	subi	r30, 0x4E	; 78
    2ef6:	ff 4f       	sbci	r31, 0xFF	; 255
_ZN15TTapeController19GetTrackForProgrammEi():
    2ef8:	80 81       	ld	r24, Z
    2efa:	91 81       	ldd	r25, Z+1	; 0x01
    2efc:	18 16       	cp	r1, r24
    2efe:	19 06       	cpc	r1, r25
    2f00:	1c f4       	brge	.+6      	; 0x2f08 <TTapeController::GetTrackForProgramm(int)+0x22>
    2f02:	11 95       	neg	r17
    2f04:	01 95       	neg	r16
    2f06:	11 09       	sbc	r17, r1
    2f08:	89 81       	ldd	r24, Y+1	; 0x01
    2f0a:	17 ff       	sbrs	r17, 7
    2f0c:	61 c0       	rjmp	.+194    	; 0x2fd0 <TTapeController::GetTrackForProgramm(int)+0xea>
    2f0e:	88 23       	and	r24, r24
    2f10:	09 f4       	brne	.+2      	; 0x2f14 <TTapeController::GetTrackForProgramm(int)+0x2e>
    2f12:	59 c0       	rjmp	.+178    	; 0x2fc6 <TTapeController::GetTrackForProgramm(int)+0xe0>
    2f14:	2e 81       	ldd	r18, Y+6	; 0x06
    2f16:	3f 81       	ldd	r19, Y+7	; 0x07
    2f18:	88 a5       	ldd	r24, Y+40	; 0x28
    2f1a:	99 a5       	ldd	r25, Y+41	; 0x29
    2f1c:	01 97       	sbiw	r24, 0x01	; 1
_ZN15TTapeController7InRangeEiii():
    2f1e:	8d 3f       	cpi	r24, 0xFD	; 253
    2f20:	4f ef       	ldi	r20, 0xFF	; 255
    2f22:	94 07       	cpc	r25, r20
    2f24:	2c f0       	brlt	.+10     	; 0x2f30 <TTapeController::GetTrackForProgramm(int)+0x4a>
    2f26:	28 17       	cp	r18, r24
    2f28:	39 07       	cpc	r19, r25
    2f2a:	0c f4       	brge	.+2      	; 0x2f2e <TTapeController::GetTrackForProgramm(int)+0x48>
    2f2c:	59 c0       	rjmp	.+178    	; 0x2fe0 <TTapeController::GetTrackForProgramm(int)+0xfa>
    2f2e:	9c 01       	movw	r18, r24
_ZN15TTapeController19GetTrackForProgrammEi():
    2f30:	39 a7       	std	Y+41, r19	; 0x29
    2f32:	28 a7       	std	Y+40, r18	; 0x28
    2f34:	88 a5       	ldd	r24, Y+40	; 0x28
    2f36:	99 a5       	ldd	r25, Y+41	; 0x29
    2f38:	03 96       	adiw	r24, 0x03	; 3
    2f3a:	61 f4       	brne	.+24     	; 0x2f54 <TTapeController::GetTrackForProgramm(int)+0x6e>
    2f3c:	63 e0       	ldi	r22, 0x03	; 3
    2f3e:	70 e0       	ldi	r23, 0x00	; 0
    2f40:	8c a1       	ldd	r24, Y+36	; 0x24
    2f42:	9d a1       	ldd	r25, Y+37	; 0x25
    2f44:	0e 94 61 0a 	call	0x14c2	; 0x14c2 <TCounter::GetMemoryPosition(int)>
    2f48:	97 ff       	sbrs	r25, 7
    2f4a:	04 c0       	rjmp	.+8      	; 0x2f54 <TTapeController::GetTrackForProgramm(int)+0x6e>
    2f4c:	8e ef       	ldi	r24, 0xFE	; 254
    2f4e:	9f ef       	ldi	r25, 0xFF	; 255
    2f50:	99 a7       	std	Y+41, r25	; 0x29
    2f52:	88 a7       	std	Y+40, r24	; 0x28
    2f54:	88 a5       	ldd	r24, Y+40	; 0x28
    2f56:	99 a5       	ldd	r25, Y+41	; 0x29
    2f58:	02 96       	adiw	r24, 0x02	; 2
    2f5a:	61 f4       	brne	.+24     	; 0x2f74 <TTapeController::GetTrackForProgramm(int)+0x8e>
    2f5c:	62 e0       	ldi	r22, 0x02	; 2
    2f5e:	70 e0       	ldi	r23, 0x00	; 0
    2f60:	8c a1       	ldd	r24, Y+36	; 0x24
    2f62:	9d a1       	ldd	r25, Y+37	; 0x25
    2f64:	0e 94 61 0a 	call	0x14c2	; 0x14c2 <TCounter::GetMemoryPosition(int)>
    2f68:	97 ff       	sbrs	r25, 7
    2f6a:	04 c0       	rjmp	.+8      	; 0x2f74 <TTapeController::GetTrackForProgramm(int)+0x8e>
    2f6c:	8f ef       	ldi	r24, 0xFF	; 255
    2f6e:	9f ef       	ldi	r25, 0xFF	; 255
    2f70:	99 a7       	std	Y+41, r25	; 0x29
    2f72:	88 a7       	std	Y+40, r24	; 0x28
    2f74:	88 a5       	ldd	r24, Y+40	; 0x28
    2f76:	99 a5       	ldd	r25, Y+41	; 0x29
    2f78:	01 96       	adiw	r24, 0x01	; 1
    2f7a:	69 f4       	brne	.+26     	; 0x2f96 <TTapeController::GetTrackForProgramm(int)+0xb0>
    2f7c:	61 e0       	ldi	r22, 0x01	; 1
    2f7e:	70 e0       	ldi	r23, 0x00	; 0
    2f80:	8c a1       	ldd	r24, Y+36	; 0x24
    2f82:	9d a1       	ldd	r25, Y+37	; 0x25
    2f84:	0e 94 61 0a 	call	0x14c2	; 0x14c2 <TCounter::GetMemoryPosition(int)>
    2f88:	97 ff       	sbrs	r25, 7
    2f8a:	05 c0       	rjmp	.+10     	; 0x2f96 <TTapeController::GetTrackForProgramm(int)+0xb0>
    2f8c:	10 16       	cp	r1, r16
    2f8e:	11 06       	cpc	r1, r17
    2f90:	7c f5       	brge	.+94     	; 0x2ff0 <TTapeController::GetTrackForProgramm(int)+0x10a>
    2f92:	19 a6       	std	Y+41, r1	; 0x29
    2f94:	18 a6       	std	Y+40, r1	; 0x28
    2f96:	68 a5       	ldd	r22, Y+40	; 0x28
    2f98:	79 a5       	ldd	r23, Y+41	; 0x29
    2f9a:	88 a1       	ldd	r24, Y+32	; 0x20
    2f9c:	99 a1       	ldd	r25, Y+33	; 0x21
    2f9e:	50 e0       	ldi	r21, 0x00	; 0
    2fa0:	40 e0       	ldi	r20, 0x00	; 0
    2fa2:	16 16       	cp	r1, r22
    2fa4:	17 06       	cpc	r1, r23
    2fa6:	4c f4       	brge	.+18     	; 0x2fba <TTapeController::GetTrackForProgramm(int)+0xd4>
    2fa8:	9b 01       	movw	r18, r22
    2faa:	29 5e       	subi	r18, 0xE9	; 233
    2fac:	3f 4f       	sbci	r19, 0xFF	; 255
    2fae:	22 0f       	add	r18, r18
    2fb0:	33 1f       	adc	r19, r19
    2fb2:	c2 0f       	add	r28, r18
    2fb4:	d3 1f       	adc	r29, r19
    2fb6:	48 81       	ld	r20, Y
    2fb8:	59 81       	ldd	r21, Y+1	; 0x01
    2fba:	df 91       	pop	r29
    2fbc:	cf 91       	pop	r28
    2fbe:	1f 91       	pop	r17
    2fc0:	0f 91       	pop	r16
    2fc2:	0c 94 18 0b 	jmp	0x1630	; 0x1630 <TDisplay::Programm(int, int)>
    2fc6:	19 a6       	std	Y+41, r1	; 0x29
    2fc8:	18 a6       	std	Y+40, r1	; 0x28
    2fca:	81 e0       	ldi	r24, 0x01	; 1
    2fcc:	89 83       	std	Y+1, r24	; 0x01
    2fce:	b2 cf       	rjmp	.-156    	; 0x2f34 <TTapeController::GetTrackForProgramm(int)+0x4e>
    2fd0:	88 23       	and	r24, r24
    2fd2:	49 f0       	breq	.+18     	; 0x2fe6 <TTapeController::GetTrackForProgramm(int)+0x100>
    2fd4:	2e 81       	ldd	r18, Y+6	; 0x06
    2fd6:	3f 81       	ldd	r19, Y+7	; 0x07
    2fd8:	88 a5       	ldd	r24, Y+40	; 0x28
    2fda:	99 a5       	ldd	r25, Y+41	; 0x29
    2fdc:	01 96       	adiw	r24, 0x01	; 1
    2fde:	9f cf       	rjmp	.-194    	; 0x2f1e <TTapeController::GetTrackForProgramm(int)+0x38>
_ZN15TTapeController7InRangeEiii():
    2fe0:	2d ef       	ldi	r18, 0xFD	; 253
    2fe2:	3f ef       	ldi	r19, 0xFF	; 255
    2fe4:	a5 cf       	rjmp	.-182    	; 0x2f30 <TTapeController::GetTrackForProgramm(int)+0x4a>
_ZN15TTapeController19GetTrackForProgrammEi():
    2fe6:	81 e0       	ldi	r24, 0x01	; 1
    2fe8:	90 e0       	ldi	r25, 0x00	; 0
    2fea:	99 a7       	std	Y+41, r25	; 0x29
    2fec:	88 a7       	std	Y+40, r24	; 0x28
    2fee:	ee cf       	rjmp	.-36     	; 0x2fcc <TTapeController::GetTrackForProgramm(int)+0xe6>
    2ff0:	8e 81       	ldd	r24, Y+6	; 0x06
    2ff2:	9f 81       	ldd	r25, Y+7	; 0x07
    2ff4:	99 a7       	std	Y+41, r25	; 0x29
    2ff6:	88 a7       	std	Y+40, r24	; 0x28
    2ff8:	ce cf       	rjmp	.-100    	; 0x2f96 <TTapeController::GetTrackForProgramm(int)+0xb0>

00002ffa <TTapeController::SetMute(bool)>:
_ZN15TTapeController7SetMuteEb():
    2ffa:	1f 93       	push	r17
    2ffc:	cf 93       	push	r28
    2ffe:	df 93       	push	r29
    3000:	ec 01       	movw	r28, r24
    3002:	16 2f       	mov	r17, r22
    3004:	6d e4       	ldi	r22, 0x4D	; 77
    3006:	74 e0       	ldi	r23, 0x04	; 4
    3008:	82 ed       	ldi	r24, 0xD2	; 210
    300a:	9a e0       	ldi	r25, 0x0A	; 10
    300c:	0e 94 c4 37 	call	0x6f88	; 0x6f88 <Print::print(char const*)>
    3010:	61 2f       	mov	r22, r17
    3012:	70 e0       	ldi	r23, 0x00	; 0
    3014:	4a e0       	ldi	r20, 0x0A	; 10
    3016:	50 e0       	ldi	r21, 0x00	; 0
    3018:	82 ed       	ldi	r24, 0xD2	; 210
    301a:	9a e0       	ldi	r25, 0x0A	; 10
    301c:	0e 94 94 38 	call	0x7128	; 0x7128 <Print::print(int, int)>
    3020:	66 ef       	ldi	r22, 0xF6	; 246
    3022:	74 e0       	ldi	r23, 0x04	; 4
    3024:	82 ed       	ldi	r24, 0xD2	; 210
    3026:	9a e0       	ldi	r25, 0x0A	; 10
    3028:	0e 94 e9 37 	call	0x6fd2	; 0x6fd2 <Print::println(char const*)>
    302c:	fe 01       	movw	r30, r28
    302e:	ea 55       	subi	r30, 0x5A	; 90
    3030:	ff 4f       	sbci	r31, 0xFF	; 255
    3032:	11 23       	and	r17, r17
    3034:	59 f0       	breq	.+22     	; 0x304c <TTapeController::SetMute(bool)+0x52>
    3036:	10 82       	st	Z, r1
    3038:	11 82       	std	Z+1, r1	; 0x01
    303a:	12 82       	std	Z+2, r1	; 0x02
    303c:	13 82       	std	Z+3, r1	; 0x03
    303e:	61 e0       	ldi	r22, 0x01	; 1
    3040:	8a 8d       	ldd	r24, Y+26	; 0x1a
    3042:	df 91       	pop	r29
    3044:	cf 91       	pop	r28
    3046:	1f 91       	pop	r17
    3048:	0c 94 54 35 	jmp	0x6aa8	; 0x6aa8 <digitalWrite>
    304c:	9e 01       	movw	r18, r28
    304e:	22 55       	subi	r18, 0x52	; 82
    3050:	3f 4f       	sbci	r19, 0xFF	; 255
    3052:	c4 56       	subi	r28, 0x64	; 100
    3054:	df 4f       	sbci	r29, 0xFF	; 255
    3056:	88 81       	ld	r24, Y
    3058:	99 81       	ldd	r25, Y+1	; 0x01
    305a:	09 2e       	mov	r0, r25
    305c:	00 0c       	add	r0, r0
    305e:	aa 0b       	sbc	r26, r26
    3060:	bb 0b       	sbc	r27, r27
    3062:	e9 01       	movw	r28, r18
    3064:	48 81       	ld	r20, Y
    3066:	59 81       	ldd	r21, Y+1	; 0x01
    3068:	6a 81       	ldd	r22, Y+2	; 0x02
    306a:	7b 81       	ldd	r23, Y+3	; 0x03
    306c:	84 0f       	add	r24, r20
    306e:	95 1f       	adc	r25, r21
    3070:	a6 1f       	adc	r26, r22
    3072:	b7 1f       	adc	r27, r23
    3074:	80 83       	st	Z, r24
    3076:	91 83       	std	Z+1, r25	; 0x01
    3078:	a2 83       	std	Z+2, r26	; 0x02
    307a:	b3 83       	std	Z+3, r27	; 0x03
    307c:	df 91       	pop	r29
    307e:	cf 91       	pop	r28
    3080:	1f 91       	pop	r17
    3082:	08 95       	ret

00003084 <TTapeController::PushSlideServo()>:
_ZN15TTapeController14PushSlideServoEv():
    3084:	cf 93       	push	r28
    3086:	df 93       	push	r29
    3088:	ec 01       	movw	r28, r24
    308a:	67 e5       	ldi	r22, 0x57	; 87
    308c:	74 e0       	ldi	r23, 0x04	; 4
    308e:	82 ed       	ldi	r24, 0xD2	; 210
    3090:	9a e0       	ldi	r25, 0x0A	; 10
    3092:	0e 94 e9 37 	call	0x6fd2	; 0x6fd2 <Print::println(char const*)>
    3096:	60 e0       	ldi	r22, 0x00	; 0
    3098:	88 89       	ldd	r24, Y+16	; 0x10
    309a:	0e 94 54 35 	call	0x6aa8	; 0x6aa8 <digitalWrite>
    309e:	68 85       	ldd	r22, Y+8	; 0x08
    30a0:	79 85       	ldd	r23, Y+9	; 0x09
    30a2:	07 2e       	mov	r0, r23
    30a4:	00 0c       	add	r0, r0
    30a6:	88 0b       	sbc	r24, r24
    30a8:	99 0b       	sbc	r25, r25
    30aa:	0e 94 75 34 	call	0x68ea	; 0x68ea <delay>
    30ae:	61 e0       	ldi	r22, 0x01	; 1
    30b0:	88 89       	ldd	r24, Y+16	; 0x10
    30b2:	0e 94 54 35 	call	0x6aa8	; 0x6aa8 <digitalWrite>
    30b6:	6a 85       	ldd	r22, Y+10	; 0x0a
    30b8:	7b 85       	ldd	r23, Y+11	; 0x0b
    30ba:	07 2e       	mov	r0, r23
    30bc:	00 0c       	add	r0, r0
    30be:	88 0b       	sbc	r24, r24
    30c0:	99 0b       	sbc	r25, r25
    30c2:	df 91       	pop	r29
    30c4:	cf 91       	pop	r28
    30c6:	0c 94 75 34 	jmp	0x68ea	; 0x68ea <delay>

000030ca <TTapeController::ToggleReverseMode()>:
_ZN15TTapeController17ToggleReverseModeEv():
    30ca:	0f 93       	push	r16
    30cc:	1f 93       	push	r17
    30ce:	cf 93       	push	r28
    30d0:	df 93       	push	r29
    30d2:	8c 01       	movw	r16, r24
    30d4:	ec 01       	movw	r28, r24
    30d6:	c6 54       	subi	r28, 0x46	; 70
    30d8:	df 4f       	sbci	r29, 0xFF	; 255
    30da:	88 81       	ld	r24, Y
    30dc:	99 81       	ldd	r25, Y+1	; 0x01
    30de:	81 30       	cpi	r24, 0x01	; 1
    30e0:	91 05       	cpc	r25, r1
    30e2:	f9 f0       	breq	.+62     	; 0x3122 <TTapeController::ToggleReverseMode()+0x58>
    30e4:	b8 f0       	brcs	.+46     	; 0x3114 <TTapeController::ToggleReverseMode()+0x4a>
    30e6:	82 30       	cpi	r24, 0x02	; 2
    30e8:	91 05       	cpc	r25, r1
    30ea:	19 f1       	breq	.+70     	; 0x3132 <TTapeController::ToggleReverseMode()+0x68>
    30ec:	03 97       	sbiw	r24, 0x03	; 3
    30ee:	41 f1       	breq	.+80     	; 0x3140 <TTapeController::ToggleReverseMode()+0x76>
    30f0:	68 81       	ld	r22, Y
    30f2:	79 81       	ldd	r23, Y+1	; 0x01
    30f4:	f8 01       	movw	r30, r16
    30f6:	80 a1       	ldd	r24, Z+32	; 0x20
    30f8:	91 a1       	ldd	r25, Z+33	; 0x21
    30fa:	0e 94 72 0d 	call	0x1ae4	; 0x1ae4 <TDisplay::ReverseMode(int)>
    30fe:	68 81       	ld	r22, Y
    3100:	79 81       	ldd	r23, Y+1	; 0x01
    3102:	f8 01       	movw	r30, r16
    3104:	84 a1       	ldd	r24, Z+36	; 0x24
    3106:	95 a1       	ldd	r25, Z+37	; 0x25
    3108:	df 91       	pop	r29
    310a:	cf 91       	pop	r28
    310c:	1f 91       	pop	r17
    310e:	0f 91       	pop	r16
    3110:	0c 94 d3 08 	jmp	0x11a6	; 0x11a6 <TCounter::StoreReverseMode(int)>
    3114:	f8 01       	movw	r30, r16
    3116:	e4 54       	subi	r30, 0x44	; 68
    3118:	ff 4f       	sbci	r31, 0xFF	; 255
    311a:	80 81       	ld	r24, Z
    311c:	91 81       	ldd	r25, Z+1	; 0x01
    311e:	89 2b       	or	r24, r25
    3120:	19 f0       	breq	.+6      	; 0x3128 <TTapeController::ToggleReverseMode()+0x5e>
    3122:	82 e0       	ldi	r24, 0x02	; 2
    3124:	90 e0       	ldi	r25, 0x00	; 0
    3126:	02 c0       	rjmp	.+4      	; 0x312c <TTapeController::ToggleReverseMode()+0x62>
    3128:	81 e0       	ldi	r24, 0x01	; 1
    312a:	90 e0       	ldi	r25, 0x00	; 0
    312c:	99 83       	std	Y+1, r25	; 0x01
    312e:	88 83       	st	Y, r24
    3130:	df cf       	rjmp	.-66     	; 0x30f0 <TTapeController::ToggleReverseMode()+0x26>
    3132:	f8 01       	movw	r30, r16
    3134:	e4 54       	subi	r30, 0x44	; 68
    3136:	ff 4f       	sbci	r31, 0xFF	; 255
    3138:	80 81       	ld	r24, Z
    313a:	91 81       	ldd	r25, Z+1	; 0x01
    313c:	89 2b       	or	r24, r25
    313e:	19 f0       	breq	.+6      	; 0x3146 <TTapeController::ToggleReverseMode()+0x7c>
    3140:	19 82       	std	Y+1, r1	; 0x01
    3142:	18 82       	st	Y, r1
    3144:	d5 cf       	rjmp	.-86     	; 0x30f0 <TTapeController::ToggleReverseMode()+0x26>
    3146:	83 e0       	ldi	r24, 0x03	; 3
    3148:	90 e0       	ldi	r25, 0x00	; 0
    314a:	f0 cf       	rjmp	.-32     	; 0x312c <TTapeController::ToggleReverseMode()+0x62>

0000314c <TTapeController::ToggleRecordMode()>:
_ZN15TTapeController16ToggleRecordModeEv():
    314c:	fc 01       	movw	r30, r24
    314e:	e4 54       	subi	r30, 0x44	; 68
    3150:	ff 4f       	sbci	r31, 0xFF	; 255
    3152:	20 81       	ld	r18, Z
    3154:	31 81       	ldd	r19, Z+1	; 0x01
    3156:	21 30       	cpi	r18, 0x01	; 1
    3158:	31 05       	cpc	r19, r1
    315a:	71 f0       	breq	.+28     	; 0x3178 <TTapeController::ToggleRecordMode()+0x2c>
    315c:	c0 f0       	brcs	.+48     	; 0x318e <TTapeController::ToggleRecordMode()+0x42>
    315e:	22 30       	cpi	r18, 0x02	; 2
    3160:	31 05       	cpc	r19, r1
    3162:	79 f0       	breq	.+30     	; 0x3182 <TTapeController::ToggleRecordMode()+0x36>
    3164:	23 30       	cpi	r18, 0x03	; 3
    3166:	31 05       	cpc	r19, r1
    3168:	79 f0       	breq	.+30     	; 0x3188 <TTapeController::ToggleRecordMode()+0x3c>
    316a:	60 81       	ld	r22, Z
    316c:	71 81       	ldd	r23, Z+1	; 0x01
    316e:	fc 01       	movw	r30, r24
    3170:	80 a1       	ldd	r24, Z+32	; 0x20
    3172:	91 a1       	ldd	r25, Z+33	; 0x21
    3174:	0c 94 fc 0c 	jmp	0x19f8	; 0x19f8 <TDisplay::RecordMode(int)>
    3178:	22 e0       	ldi	r18, 0x02	; 2
    317a:	30 e0       	ldi	r19, 0x00	; 0
    317c:	31 83       	std	Z+1, r19	; 0x01
    317e:	20 83       	st	Z, r18
    3180:	f4 cf       	rjmp	.-24     	; 0x316a <TTapeController::ToggleRecordMode()+0x1e>
    3182:	23 e0       	ldi	r18, 0x03	; 3
    3184:	30 e0       	ldi	r19, 0x00	; 0
    3186:	fa cf       	rjmp	.-12     	; 0x317c <TTapeController::ToggleRecordMode()+0x30>
    3188:	21 e0       	ldi	r18, 0x01	; 1
    318a:	30 e0       	ldi	r19, 0x00	; 0
    318c:	f7 cf       	rjmp	.-18     	; 0x317c <TTapeController::ToggleRecordMode()+0x30>
    318e:	08 95       	ret

00003190 <TTapeController::StateToString()>:
_ZN15TTapeController13StateToStringEv():
    3190:	0f 93       	push	r16
    3192:	1f 93       	push	r17
    3194:	cf 93       	push	r28
    3196:	df 93       	push	r29
    3198:	cd b7       	in	r28, 0x3d	; 61
    319a:	de b7       	in	r29, 0x3e	; 62
    319c:	2c 97       	sbiw	r28, 0x0c	; 12
    319e:	0f b6       	in	r0, 0x3f	; 63
    31a0:	f8 94       	cli
    31a2:	de bf       	out	0x3e, r29	; 62
    31a4:	0f be       	out	0x3f, r0	; 63
    31a6:	cd bf       	out	0x3d, r28	; 61
    31a8:	8c 01       	movw	r16, r24
    31aa:	fc 01       	movw	r30, r24
    31ac:	66 a1       	ldd	r22, Z+38	; 0x26
    31ae:	77 a1       	ldd	r23, Z+39	; 0x27
    31b0:	4a e0       	ldi	r20, 0x0A	; 10
    31b2:	ce 01       	movw	r24, r28
    31b4:	07 96       	adiw	r24, 0x07	; 7
    31b6:	0e 94 3b 39 	call	0x7276	; 0x7276 <String::String(int, unsigned char)>
_ZN15StringSumHelperC4EPKc():
    31ba:	6e ea       	ldi	r22, 0xAE	; 174
    31bc:	71 e0       	ldi	r23, 0x01	; 1
    31be:	ce 01       	movw	r24, r28
    31c0:	01 96       	adiw	r24, 0x01	; 1
    31c2:	0e 94 1c 39 	call	0x7238	; 0x7238 <String::String(char const*)>
_ZN15TTapeController13StateToStringEv():
    31c6:	be 01       	movw	r22, r28
    31c8:	69 5f       	subi	r22, 0xF9	; 249
    31ca:	7f 4f       	sbci	r23, 0xFF	; 255
    31cc:	ce 01       	movw	r24, r28
    31ce:	01 96       	adiw	r24, 0x01	; 1
    31d0:	0e 94 c2 39 	call	0x7384	; 0x7384 <operator+(StringSumHelper const&, String const&)>
    31d4:	61 eb       	ldi	r22, 0xB1	; 177
    31d6:	74 e0       	ldi	r23, 0x04	; 4
    31d8:	0e 94 d5 39 	call	0x73aa	; 0x73aa <operator+(StringSumHelper const&, char const*)>
    31dc:	bc 01       	movw	r22, r24
    31de:	82 ed       	ldi	r24, 0xD2	; 210
    31e0:	9a e0       	ldi	r25, 0x0A	; 10
    31e2:	0e 94 b6 37 	call	0x6f6c	; 0x6f6c <Print::print(String const&)>
_ZN15StringSumHelperD4Ev():
    31e6:	ce 01       	movw	r24, r28
    31e8:	01 96       	adiw	r24, 0x01	; 1
    31ea:	0e 94 ad 38 	call	0x715a	; 0x715a <String::~String()>
_ZN15TTapeController13StateToStringEv():
    31ee:	ce 01       	movw	r24, r28
    31f0:	07 96       	adiw	r24, 0x07	; 7
    31f2:	0e 94 ad 38 	call	0x715a	; 0x715a <String::~String()>
    31f6:	f8 01       	movw	r30, r16
    31f8:	e7 57       	subi	r30, 0x77	; 119
    31fa:	ff 4f       	sbci	r31, 0xFF	; 255
    31fc:	80 81       	ld	r24, Z
    31fe:	88 23       	and	r24, r24
    3200:	31 f0       	breq	.+12     	; 0x320e <TTapeController::StateToString()+0x7e>
    3202:	68 ef       	ldi	r22, 0xF8	; 248
    3204:	71 e0       	ldi	r23, 0x01	; 1
    3206:	82 ed       	ldi	r24, 0xD2	; 210
    3208:	9a e0       	ldi	r25, 0x0A	; 10
    320a:	0e 94 c4 37 	call	0x6f88	; 0x6f88 <Print::print(char const*)>
    320e:	f8 01       	movw	r30, r16
    3210:	e6 57       	subi	r30, 0x76	; 118
    3212:	ff 4f       	sbci	r31, 0xFF	; 255
    3214:	80 81       	ld	r24, Z
    3216:	88 23       	and	r24, r24
    3218:	31 f0       	breq	.+12     	; 0x3226 <TTapeController::StateToString()+0x96>
    321a:	68 ec       	ldi	r22, 0xC8	; 200
    321c:	71 e0       	ldi	r23, 0x01	; 1
    321e:	82 ed       	ldi	r24, 0xD2	; 210
    3220:	9a e0       	ldi	r25, 0x0A	; 10
    3222:	0e 94 c4 37 	call	0x6f88	; 0x6f88 <Print::print(char const*)>
    3226:	f8 01       	movw	r30, r16
    3228:	e5 57       	subi	r30, 0x75	; 117
    322a:	ff 4f       	sbci	r31, 0xFF	; 255
    322c:	80 81       	ld	r24, Z
    322e:	88 23       	and	r24, r24
    3230:	31 f0       	breq	.+12     	; 0x323e <TTapeController::StateToString()+0xae>
    3232:	66 eb       	ldi	r22, 0xB6	; 182
    3234:	71 e0       	ldi	r23, 0x01	; 1
    3236:	82 ed       	ldi	r24, 0xD2	; 210
    3238:	9a e0       	ldi	r25, 0x0A	; 10
    323a:	0e 94 c4 37 	call	0x6f88	; 0x6f88 <Print::print(char const*)>
    323e:	f8 01       	movw	r30, r16
    3240:	e3 57       	subi	r30, 0x73	; 115
    3242:	ff 4f       	sbci	r31, 0xFF	; 255
    3244:	80 81       	ld	r24, Z
    3246:	88 23       	and	r24, r24
    3248:	31 f0       	breq	.+12     	; 0x3256 <TTapeController::StateToString()+0xc6>
    324a:	61 ec       	ldi	r22, 0xC1	; 193
    324c:	71 e0       	ldi	r23, 0x01	; 1
    324e:	82 ed       	ldi	r24, 0xD2	; 210
    3250:	9a e0       	ldi	r25, 0x0A	; 10
    3252:	0e 94 c4 37 	call	0x6f88	; 0x6f88 <Print::print(char const*)>
    3256:	f8 01       	movw	r30, r16
    3258:	e4 57       	subi	r30, 0x74	; 116
    325a:	ff 4f       	sbci	r31, 0xFF	; 255
    325c:	80 81       	ld	r24, Z
    325e:	88 23       	and	r24, r24
    3260:	31 f0       	breq	.+12     	; 0x326e <TTapeController::StateToString()+0xde>
    3262:	64 e0       	ldi	r22, 0x04	; 4
    3264:	72 e0       	ldi	r23, 0x02	; 2
    3266:	82 ed       	ldi	r24, 0xD2	; 210
    3268:	9a e0       	ldi	r25, 0x0A	; 10
    326a:	0e 94 c4 37 	call	0x6f88	; 0x6f88 <Print::print(char const*)>
    326e:	f8 01       	movw	r30, r16
    3270:	e9 54       	subi	r30, 0x49	; 73
    3272:	ff 4f       	sbci	r31, 0xFF	; 255
    3274:	80 81       	ld	r24, Z
    3276:	88 23       	and	r24, r24
    3278:	31 f0       	breq	.+12     	; 0x3286 <TTapeController::StateToString()+0xf6>
    327a:	6d ee       	ldi	r22, 0xED	; 237
    327c:	71 e0       	ldi	r23, 0x01	; 1
    327e:	82 ed       	ldi	r24, 0xD2	; 210
    3280:	9a e0       	ldi	r25, 0x0A	; 10
    3282:	0e 94 c4 37 	call	0x6f88	; 0x6f88 <Print::print(char const*)>
    3286:	f8 01       	movw	r30, r16
    3288:	e1 57       	subi	r30, 0x71	; 113
    328a:	ff 4f       	sbci	r31, 0xFF	; 255
    328c:	80 81       	ld	r24, Z
    328e:	88 23       	and	r24, r24
    3290:	31 f0       	breq	.+12     	; 0x329e <TTapeController::StateToString()+0x10e>
    3292:	6d ec       	ldi	r22, 0xCD	; 205
    3294:	71 e0       	ldi	r23, 0x01	; 1
    3296:	82 ed       	ldi	r24, 0xD2	; 210
    3298:	9a e0       	ldi	r25, 0x0A	; 10
    329a:	0e 94 c4 37 	call	0x6f88	; 0x6f88 <Print::print(char const*)>
    329e:	f8 01       	movw	r30, r16
    32a0:	e0 57       	subi	r30, 0x70	; 112
    32a2:	ff 4f       	sbci	r31, 0xFF	; 255
    32a4:	80 81       	ld	r24, Z
    32a6:	88 23       	and	r24, r24
    32a8:	31 f0       	breq	.+12     	; 0x32b6 <TTapeController::StateToString()+0x126>
    32aa:	69 ed       	ldi	r22, 0xD9	; 217
    32ac:	71 e0       	ldi	r23, 0x01	; 1
    32ae:	82 ed       	ldi	r24, 0xD2	; 210
    32b0:	9a e0       	ldi	r25, 0x0A	; 10
    32b2:	0e 94 c4 37 	call	0x6f88	; 0x6f88 <Print::print(char const*)>
    32b6:	f8 01       	movw	r30, r16
    32b8:	ef 56       	subi	r30, 0x6F	; 111
    32ba:	ff 4f       	sbci	r31, 0xFF	; 255
    32bc:	80 81       	ld	r24, Z
    32be:	88 23       	and	r24, r24
    32c0:	31 f0       	breq	.+12     	; 0x32ce <TTapeController::StateToString()+0x13e>
    32c2:	63 ee       	ldi	r22, 0xE3	; 227
    32c4:	71 e0       	ldi	r23, 0x01	; 1
    32c6:	82 ed       	ldi	r24, 0xD2	; 210
    32c8:	9a e0       	ldi	r25, 0x0A	; 10
    32ca:	0e 94 c4 37 	call	0x6f88	; 0x6f88 <Print::print(char const*)>
    32ce:	82 ed       	ldi	r24, 0xD2	; 210
    32d0:	9a e0       	ldi	r25, 0x0A	; 10
    32d2:	0e 94 d3 37 	call	0x6fa6	; 0x6fa6 <Print::println()>
    32d6:	2c 96       	adiw	r28, 0x0c	; 12
    32d8:	0f b6       	in	r0, 0x3f	; 63
    32da:	f8 94       	cli
    32dc:	de bf       	out	0x3e, r29	; 62
    32de:	0f be       	out	0x3f, r0	; 63
    32e0:	cd bf       	out	0x3d, r28	; 61
    32e2:	df 91       	pop	r29
    32e4:	cf 91       	pop	r28
    32e6:	1f 91       	pop	r17
    32e8:	0f 91       	pop	r16
    32ea:	08 95       	ret

000032ec <TTapeController::ReadyForInput()>:
_ZN15TTapeController13ReadyForInputEv():
    32ec:	fc 01       	movw	r30, r24
_ZN15TTapeController10IsOnRecordEv():
    32ee:	dc 01       	movw	r26, r24
    32f0:	a6 57       	subi	r26, 0x76	; 118
    32f2:	bf 4f       	sbci	r27, 0xFF	; 255
    32f4:	9c 91       	ld	r25, X
_ZN15TTapeController13ReadyForInputEv():
    32f6:	91 11       	cpse	r25, r1
    32f8:	0e c0       	rjmp	.+28     	; 0x3316 <TTapeController::ReadyForInput()+0x2a>
    32fa:	80 81       	ld	r24, Z
    32fc:	81 11       	cpse	r24, r1
    32fe:	0c c0       	rjmp	.+24     	; 0x3318 <TTapeController::ReadyForInput()+0x2c>
    3300:	e2 56       	subi	r30, 0x62	; 98
    3302:	ff 4f       	sbci	r31, 0xFF	; 255
    3304:	91 e0       	ldi	r25, 0x01	; 1
    3306:	40 81       	ld	r20, Z
    3308:	51 81       	ldd	r21, Z+1	; 0x01
    330a:	62 81       	ldd	r22, Z+2	; 0x02
    330c:	73 81       	ldd	r23, Z+3	; 0x03
    330e:	45 2b       	or	r20, r21
    3310:	46 2b       	or	r20, r22
    3312:	47 2b       	or	r20, r23
    3314:	09 f0       	breq	.+2      	; 0x3318 <TTapeController::ReadyForInput()+0x2c>
    3316:	90 e0       	ldi	r25, 0x00	; 0
    3318:	89 2f       	mov	r24, r25
    331a:	08 95       	ret

0000331c <TTapeController::PauseAfterFourSeconds()>:
_ZN15TTapeController21PauseAfterFourSecondsEv():
    331c:	cf 93       	push	r28
    331e:	df 93       	push	r29
    3320:	fc 01       	movw	r30, r24
    3322:	e2 56       	subi	r30, 0x62	; 98
    3324:	ff 4f       	sbci	r31, 0xFF	; 255
    3326:	82 55       	subi	r24, 0x52	; 82
    3328:	9f 4f       	sbci	r25, 0xFF	; 255
    332a:	ec 01       	movw	r28, r24
    332c:	88 81       	ld	r24, Y
    332e:	99 81       	ldd	r25, Y+1	; 0x01
    3330:	aa 81       	ldd	r26, Y+2	; 0x02
    3332:	bb 81       	ldd	r27, Y+3	; 0x03
    3334:	80 56       	subi	r24, 0x60	; 96
    3336:	90 4f       	sbci	r25, 0xF0	; 240
    3338:	af 4f       	sbci	r26, 0xFF	; 255
    333a:	bf 4f       	sbci	r27, 0xFF	; 255
    333c:	80 83       	st	Z, r24
    333e:	91 83       	std	Z+1, r25	; 0x01
    3340:	a2 83       	std	Z+2, r26	; 0x02
    3342:	b3 83       	std	Z+3, r27	; 0x03
    3344:	df 91       	pop	r29
    3346:	cf 91       	pop	r28
    3348:	08 95       	ret

0000334a <TTapeController::NewAutoRecordTrackStarted()>:
_ZN15TTapeController25NewAutoRecordTrackStartedEv():
    334a:	fc 01       	movw	r30, r24
    334c:	e9 57       	subi	r30, 0x79	; 121
    334e:	ff 4f       	sbci	r31, 0xFF	; 255
    3350:	60 81       	ld	r22, Z
    3352:	71 81       	ldd	r23, Z+1	; 0x01
    3354:	6f 5f       	subi	r22, 0xFF	; 255
    3356:	7f 4f       	sbci	r23, 0xFF	; 255
    3358:	71 83       	std	Z+1, r23	; 0x01
    335a:	60 83       	st	Z, r22
    335c:	fc 01       	movw	r30, r24
    335e:	80 a1       	ldd	r24, Z+32	; 0x20
    3360:	91 a1       	ldd	r25, Z+33	; 0x21
    3362:	0c 94 0d 0b 	jmp	0x161a	; 0x161a <TDisplay::ShowDigit(int)>

00003366 <TTapeController::GetState()>:
_ZN15TTapeController8GetStateEv():
    3366:	cf 92       	push	r12
    3368:	df 92       	push	r13
    336a:	ef 92       	push	r14
    336c:	ff 92       	push	r15
    336e:	0f 93       	push	r16
    3370:	1f 93       	push	r17
    3372:	cf 93       	push	r28
    3374:	df 93       	push	r29
    3376:	ec 01       	movw	r28, r24
    3378:	8a a1       	ldd	r24, Y+34	; 0x22
    337a:	9b a1       	ldd	r25, Y+35	; 0x23
    337c:	0e 94 ea 14 	call	0x29d4	; 0x29d4 <TInputs::GetCassetteState()>
    3380:	9f a3       	std	Y+39, r25	; 0x27
    3382:	8e a3       	std	Y+38, r24	; 0x26
    3384:	fe 01       	movw	r30, r28
    3386:	e7 57       	subi	r30, 0x77	; 119
    3388:	ff 4f       	sbci	r31, 0xFF	; 255
    338a:	28 2f       	mov	r18, r24
    338c:	21 70       	andi	r18, 0x01	; 1
    338e:	20 83       	st	Z, r18
    3390:	31 96       	adiw	r30, 0x01	; 1
    3392:	81 fb       	bst	r24, 1
    3394:	22 27       	eor	r18, r18
    3396:	20 f9       	bld	r18, 0
    3398:	20 83       	st	Z, r18
    339a:	31 96       	adiw	r30, 0x01	; 1
    339c:	82 fb       	bst	r24, 2
    339e:	22 27       	eor	r18, r18
    33a0:	20 f9       	bld	r18, 0
    33a2:	20 83       	st	Z, r18
    33a4:	32 96       	adiw	r30, 0x02	; 2
    33a6:	83 fb       	bst	r24, 3
    33a8:	22 27       	eor	r18, r18
    33aa:	20 f9       	bld	r18, 0
    33ac:	20 83       	st	Z, r18
    33ae:	ac 01       	movw	r20, r24
    33b0:	24 e0       	ldi	r18, 0x04	; 4
    33b2:	56 95       	lsr	r21
    33b4:	47 95       	ror	r20
    33b6:	2a 95       	dec	r18
    33b8:	e1 f7       	brne	.-8      	; 0x33b2 <TTapeController::GetState()+0x4c>
    33ba:	41 70       	andi	r20, 0x01	; 1
    33bc:	de 01       	movw	r26, r28
    33be:	a4 57       	subi	r26, 0x74	; 116
    33c0:	bf 4f       	sbci	r27, 0xFF	; 255
    33c2:	4c 93       	st	X, r20
    33c4:	ba 96       	adiw	r30, 0x2a	; 42
    33c6:	85 fb       	bst	r24, 5
    33c8:	22 27       	eor	r18, r18
    33ca:	20 f9       	bld	r18, 0
    33cc:	20 83       	st	Z, r18
    33ce:	b8 97       	sbiw	r30, 0x28	; 40
    33d0:	9c 01       	movw	r18, r24
    33d2:	56 e0       	ldi	r21, 0x06	; 6
    33d4:	36 95       	lsr	r19
    33d6:	27 95       	ror	r18
    33d8:	5a 95       	dec	r21
    33da:	e1 f7       	brne	.-8      	; 0x33d4 <TTapeController::GetState()+0x6e>
    33dc:	51 e0       	ldi	r21, 0x01	; 1
    33de:	25 27       	eor	r18, r21
    33e0:	21 70       	andi	r18, 0x01	; 1
    33e2:	20 83       	st	Z, r18
    33e4:	31 96       	adiw	r30, 0x01	; 1
    33e6:	87 fb       	bst	r24, 7
    33e8:	88 27       	eor	r24, r24
    33ea:	80 f9       	bld	r24, 0
    33ec:	80 83       	st	Z, r24
    33ee:	31 96       	adiw	r30, 0x01	; 1
    33f0:	89 2f       	mov	r24, r25
    33f2:	81 70       	andi	r24, 0x01	; 1
    33f4:	80 83       	st	Z, r24
    33f6:	be 01       	movw	r22, r28
    33f8:	66 55       	subi	r22, 0x56	; 86
    33fa:	7f 4f       	sbci	r23, 0xFF	; 255
    33fc:	fb 01       	movw	r30, r22
    33fe:	00 81       	ld	r16, Z
    3400:	11 81       	ldd	r17, Z+1	; 0x01
    3402:	22 81       	ldd	r18, Z+2	; 0x02
    3404:	33 81       	ldd	r19, Z+3	; 0x03
    3406:	10 16       	cp	r1, r16
    3408:	11 06       	cpc	r1, r17
    340a:	12 06       	cpc	r1, r18
    340c:	13 06       	cpc	r1, r19
    340e:	74 f4       	brge	.+28     	; 0x342c <TTapeController::GetState()+0xc6>
    3410:	ce 01       	movw	r24, r28
    3412:	82 55       	subi	r24, 0x52	; 82
    3414:	9f 4f       	sbci	r25, 0xFF	; 255
    3416:	fc 01       	movw	r30, r24
    3418:	c0 80       	ld	r12, Z
    341a:	d1 80       	ldd	r13, Z+1	; 0x01
    341c:	e2 80       	ldd	r14, Z+2	; 0x02
    341e:	f3 80       	ldd	r15, Z+3	; 0x03
    3420:	c0 16       	cp	r12, r16
    3422:	d1 06       	cpc	r13, r17
    3424:	e2 06       	cpc	r14, r18
    3426:	f3 06       	cpc	r15, r19
    3428:	54 f4       	brge	.+20     	; 0x343e <TTapeController::GetState()+0xd8>
    342a:	1c 92       	st	X, r1
    342c:	df 91       	pop	r29
    342e:	cf 91       	pop	r28
    3430:	1f 91       	pop	r17
    3432:	0f 91       	pop	r16
    3434:	ff 90       	pop	r15
    3436:	ef 90       	pop	r14
    3438:	df 90       	pop	r13
    343a:	cf 90       	pop	r12
    343c:	08 95       	ret
    343e:	cb 57       	subi	r28, 0x7B	; 123
    3440:	df 4f       	sbci	r29, 0xFF	; 255
    3442:	48 83       	st	Y, r20
    3444:	fb 01       	movw	r30, r22
    3446:	10 82       	st	Z, r1
    3448:	11 82       	std	Z+1, r1	; 0x01
    344a:	12 82       	std	Z+2, r1	; 0x02
    344c:	13 82       	std	Z+3, r1	; 0x03
    344e:	ee cf       	rjmp	.-36     	; 0x342c <TTapeController::GetState()+0xc6>

00003450 <TTapeController::Pause()>:
_ZN15TTapeController5PauseEv():
    3450:	0f 93       	push	r16
    3452:	1f 93       	push	r17
    3454:	cf 93       	push	r28
    3456:	df 93       	push	r29
    3458:	ec 01       	movw	r28, r24
    345a:	64 e1       	ldi	r22, 0x14	; 20
    345c:	73 e0       	ldi	r23, 0x03	; 3
    345e:	82 ed       	ldi	r24, 0xD2	; 210
    3460:	9a e0       	ldi	r25, 0x0A	; 10
    3462:	0e 94 e9 37 	call	0x6fd2	; 0x6fd2 <Print::println(char const*)>
    3466:	8e 01       	movw	r16, r28
    3468:	0a 54       	subi	r16, 0x4A	; 74
    346a:	1f 4f       	sbci	r17, 0xFF	; 255
    346c:	f8 01       	movw	r30, r16
    346e:	80 81       	ld	r24, Z
    3470:	81 11       	cpse	r24, r1
    3472:	34 c0       	rjmp	.+104    	; 0x34dc <TTapeController::Pause()+0x8c>
    3474:	8b 81       	ldd	r24, Y+3	; 0x03
    3476:	81 11       	cpse	r24, r1
    3478:	31 c0       	rjmp	.+98     	; 0x34dc <TTapeController::Pause()+0x8c>
    347a:	ce 01       	movw	r24, r28
    347c:	0e 94 b3 19 	call	0x3366	; 0x3366 <TTapeController::GetState()>
    3480:	fe 01       	movw	r30, r28
    3482:	e7 57       	subi	r30, 0x77	; 119
    3484:	ff 4f       	sbci	r31, 0xFF	; 255
    3486:	80 81       	ld	r24, Z
    3488:	88 23       	and	r24, r24
    348a:	41 f1       	breq	.+80     	; 0x34dc <TTapeController::Pause()+0x8c>
    348c:	61 e0       	ldi	r22, 0x01	; 1
    348e:	ce 01       	movw	r24, r28
    3490:	0e 94 fd 17 	call	0x2ffa	; 0x2ffa <TTapeController::SetMute(bool)>
    3494:	88 a1       	ldd	r24, Y+32	; 0x20
    3496:	99 a1       	ldd	r25, Y+33	; 0x21
    3498:	0e 94 0f 0c 	call	0x181e	; 0x181e <TDisplay::Pause()>
    349c:	61 e0       	ldi	r22, 0x01	; 1
    349e:	8e 89       	ldd	r24, Y+22	; 0x16
    34a0:	0e 94 54 35 	call	0x6aa8	; 0x6aa8 <digitalWrite>
    34a4:	60 e0       	ldi	r22, 0x00	; 0
    34a6:	8a 89       	ldd	r24, Y+18	; 0x12
    34a8:	0e 94 54 35 	call	0x6aa8	; 0x6aa8 <digitalWrite>
    34ac:	60 e0       	ldi	r22, 0x00	; 0
    34ae:	8c 89       	ldd	r24, Y+20	; 0x14
    34b0:	0e 94 54 35 	call	0x6aa8	; 0x6aa8 <digitalWrite>
    34b4:	60 e0       	ldi	r22, 0x00	; 0
    34b6:	8e 85       	ldd	r24, Y+14	; 0x0e
    34b8:	0e 94 54 35 	call	0x6aa8	; 0x6aa8 <digitalWrite>
    34bc:	8c a1       	ldd	r24, Y+36	; 0x24
    34be:	9d a1       	ldd	r25, Y+37	; 0x25
    34c0:	0e 94 14 0a 	call	0x1428	; 0x1428 <TCounter::Stop()>
    34c4:	fe 01       	movw	r30, r28
    34c6:	ed 57       	subi	r30, 0x7D	; 125
    34c8:	ff 4f       	sbci	r31, 0xFF	; 255
    34ca:	10 82       	st	Z, r1
    34cc:	81 e0       	ldi	r24, 0x01	; 1
    34ce:	f8 01       	movw	r30, r16
    34d0:	80 83       	st	Z, r24
    34d2:	1b 82       	std	Y+3, r1	; 0x03
    34d4:	c2 54       	subi	r28, 0x42	; 66
    34d6:	df 4f       	sbci	r29, 0xFF	; 255
    34d8:	19 82       	std	Y+1, r1	; 0x01
    34da:	18 82       	st	Y, r1
    34dc:	df 91       	pop	r29
    34de:	cf 91       	pop	r28
    34e0:	1f 91       	pop	r17
    34e2:	0f 91       	pop	r16
    34e4:	08 95       	ret

000034e6 <TTapeController::MoveRecPlaybackLever()>:
_ZN15TTapeController20MoveRecPlaybackLeverEv():
    34e6:	cf 92       	push	r12
    34e8:	df 92       	push	r13
    34ea:	ef 92       	push	r14
    34ec:	ff 92       	push	r15
    34ee:	1f 93       	push	r17
    34f0:	cf 93       	push	r28
    34f2:	df 93       	push	r29
    34f4:	ec 01       	movw	r28, r24
    34f6:	6c 01       	movw	r12, r24
    34f8:	8a e8       	ldi	r24, 0x8A	; 138
    34fa:	c8 0e       	add	r12, r24
    34fc:	d1 1c       	adc	r13, r1
    34fe:	f6 01       	movw	r30, r12
    3500:	10 81       	ld	r17, Z
    3502:	81 e0       	ldi	r24, 0x01	; 1
    3504:	18 27       	eor	r17, r24
    3506:	69 e6       	ldi	r22, 0x69	; 105
    3508:	74 e0       	ldi	r23, 0x04	; 4
    350a:	82 ed       	ldi	r24, 0xD2	; 210
    350c:	9a e0       	ldi	r25, 0x0A	; 10
    350e:	0e 94 e9 37 	call	0x6fd2	; 0x6fd2 <Print::println(char const*)>
    3512:	f6 01       	movw	r30, r12
    3514:	60 81       	ld	r22, Z
    3516:	70 e0       	ldi	r23, 0x00	; 0
    3518:	4a e0       	ldi	r20, 0x0A	; 10
    351a:	50 e0       	ldi	r21, 0x00	; 0
    351c:	82 ed       	ldi	r24, 0xD2	; 210
    351e:	9a e0       	ldi	r25, 0x0A	; 10
    3520:	0e 94 94 38 	call	0x7128	; 0x7128 <Print::print(int, int)>
    3524:	61 e8       	ldi	r22, 0x81	; 129
    3526:	74 e0       	ldi	r23, 0x04	; 4
    3528:	82 ed       	ldi	r24, 0xD2	; 210
    352a:	9a e0       	ldi	r25, 0x0A	; 10
    352c:	0e 94 c4 37 	call	0x6f88	; 0x6f88 <Print::print(char const*)>
    3530:	61 2f       	mov	r22, r17
    3532:	70 e0       	ldi	r23, 0x00	; 0
    3534:	4a e0       	ldi	r20, 0x0A	; 10
    3536:	50 e0       	ldi	r21, 0x00	; 0
    3538:	82 ed       	ldi	r24, 0xD2	; 210
    353a:	9a e0       	ldi	r25, 0x0A	; 10
    353c:	0e 94 9b 38 	call	0x7136	; 0x7136 <Print::println(int, int)>
    3540:	60 e0       	ldi	r22, 0x00	; 0
    3542:	8a 89       	ldd	r24, Y+18	; 0x12
    3544:	0e 94 54 35 	call	0x6aa8	; 0x6aa8 <digitalWrite>
    3548:	61 e0       	ldi	r22, 0x01	; 1
    354a:	8c 89       	ldd	r24, Y+20	; 0x14
    354c:	0e 94 54 35 	call	0x6aa8	; 0x6aa8 <digitalWrite>
    3550:	60 e0       	ldi	r22, 0x00	; 0
    3552:	8e 89       	ldd	r24, Y+22	; 0x16
    3554:	0e 94 54 35 	call	0x6aa8	; 0x6aa8 <digitalWrite>
    3558:	84 e1       	ldi	r24, 0x14	; 20
    355a:	e8 2e       	mov	r14, r24
    355c:	f1 2c       	mov	r15, r1
    355e:	f6 01       	movw	r30, r12
    3560:	80 81       	ld	r24, Z
    3562:	81 17       	cp	r24, r17
    3564:	e1 f0       	breq	.+56     	; 0x359e <TTapeController::MoveRecPlaybackLever()+0xb8>
    3566:	ce 01       	movw	r24, r28
    3568:	0e 94 c8 18 	call	0x3190	; 0x3190 <TTapeController::StateToString()>
    356c:	65 e0       	ldi	r22, 0x05	; 5
    356e:	70 e0       	ldi	r23, 0x00	; 0
    3570:	80 e0       	ldi	r24, 0x00	; 0
    3572:	90 e0       	ldi	r25, 0x00	; 0
    3574:	0e 94 75 34 	call	0x68ea	; 0x68ea <delay>
    3578:	ce 01       	movw	r24, r28
    357a:	0e 94 b3 19 	call	0x3366	; 0x3366 <TTapeController::GetState()>
    357e:	f1 e0       	ldi	r31, 0x01	; 1
    3580:	ef 1a       	sub	r14, r31
    3582:	f1 08       	sbc	r15, r1
    3584:	61 f7       	brne	.-40     	; 0x355e <TTapeController::MoveRecPlaybackLever()+0x78>
    3586:	65 e8       	ldi	r22, 0x85	; 133
    3588:	74 e0       	ldi	r23, 0x04	; 4
    358a:	82 ed       	ldi	r24, 0xD2	; 210
    358c:	9a e0       	ldi	r25, 0x0A	; 10
    358e:	0e 94 e9 37 	call	0x6fd2	; 0x6fd2 <Print::println(char const*)>
    3592:	63 e0       	ldi	r22, 0x03	; 3
    3594:	70 e0       	ldi	r23, 0x00	; 0
    3596:	88 a1       	ldd	r24, Y+32	; 0x20
    3598:	99 a1       	ldd	r25, Y+33	; 0x21
    359a:	0e 94 52 0b 	call	0x16a4	; 0x16a4 <TDisplay::ShowError(short)>
    359e:	61 e0       	ldi	r22, 0x01	; 1
    35a0:	8e 89       	ldd	r24, Y+22	; 0x16
    35a2:	0e 94 54 35 	call	0x6aa8	; 0x6aa8 <digitalWrite>
    35a6:	60 e0       	ldi	r22, 0x00	; 0
    35a8:	8a 89       	ldd	r24, Y+18	; 0x12
    35aa:	0e 94 54 35 	call	0x6aa8	; 0x6aa8 <digitalWrite>
    35ae:	60 e0       	ldi	r22, 0x00	; 0
    35b0:	8c 89       	ldd	r24, Y+20	; 0x14
    35b2:	df 91       	pop	r29
    35b4:	cf 91       	pop	r28
    35b6:	1f 91       	pop	r17
    35b8:	ff 90       	pop	r15
    35ba:	ef 90       	pop	r14
    35bc:	df 90       	pop	r13
    35be:	cf 90       	pop	r12
    35c0:	0c 94 54 35 	jmp	0x6aa8	; 0x6aa8 <digitalWrite>

000035c4 <TTapeController::WindRight()>:
_ZN15TTapeController9WindRightEv():
    35c4:	ef 92       	push	r14
    35c6:	ff 92       	push	r15
    35c8:	0f 93       	push	r16
    35ca:	1f 93       	push	r17
    35cc:	cf 93       	push	r28
    35ce:	df 93       	push	r29
    35d0:	ec 01       	movw	r28, r24
    35d2:	61 ea       	ldi	r22, 0xA1	; 161
    35d4:	74 e0       	ldi	r23, 0x04	; 4
    35d6:	82 ed       	ldi	r24, 0xD2	; 210
    35d8:	9a e0       	ldi	r25, 0x0A	; 10
    35da:	0e 94 e9 37 	call	0x6fd2	; 0x6fd2 <Print::println(char const*)>
    35de:	fe 01       	movw	r30, r28
    35e0:	ea 54       	subi	r30, 0x4A	; 74
    35e2:	ff 4f       	sbci	r31, 0xFF	; 255
    35e4:	80 81       	ld	r24, Z
    35e6:	81 11       	cpse	r24, r1
    35e8:	47 c0       	rjmp	.+142    	; 0x3678 <TTapeController::WindRight()+0xb4>
    35ea:	8a 81       	ldd	r24, Y+2	; 0x02
    35ec:	81 11       	cpse	r24, r1
    35ee:	44 c0       	rjmp	.+136    	; 0x3678 <TTapeController::WindRight()+0xb4>
    35f0:	7e 01       	movw	r14, r28
    35f2:	8e eb       	ldi	r24, 0xBE	; 190
    35f4:	e8 0e       	add	r14, r24
    35f6:	f1 1c       	adc	r15, r1
    35f8:	f7 01       	movw	r30, r14
    35fa:	80 81       	ld	r24, Z
    35fc:	91 81       	ldd	r25, Z+1	; 0x01
    35fe:	8e 01       	movw	r16, r28
    3600:	0e 54       	subi	r16, 0x4E	; 78
    3602:	1f 4f       	sbci	r17, 0xFF	; 255
    3604:	89 2b       	or	r24, r25
    3606:	71 f5       	brne	.+92     	; 0x3664 <TTapeController::WindRight()+0xa0>
    3608:	fe 01       	movw	r30, r28
    360a:	eb 54       	subi	r30, 0x4B	; 75
    360c:	ff 4f       	sbci	r31, 0xFF	; 255
    360e:	80 81       	ld	r24, Z
    3610:	8a 83       	std	Y+2, r24	; 0x02
    3612:	ce 01       	movw	r24, r28
    3614:	0e 94 4b 1e 	call	0x3c96	; 0x3c96 <TTapeController::Stop()>
    3618:	6c 85       	ldd	r22, Y+12	; 0x0c
    361a:	7d 85       	ldd	r23, Y+13	; 0x0d
    361c:	07 2e       	mov	r0, r23
    361e:	00 0c       	add	r0, r0
    3620:	88 0b       	sbc	r24, r24
    3622:	99 0b       	sbc	r25, r25
    3624:	0e 94 75 34 	call	0x68ea	; 0x68ea <delay>
    3628:	ce 01       	movw	r24, r28
    362a:	0e 94 b3 19 	call	0x3366	; 0x3366 <TTapeController::GetState()>
    362e:	fe 01       	movw	r30, r28
    3630:	e6 55       	subi	r30, 0x56	; 86
    3632:	ff 4f       	sbci	r31, 0xFF	; 255
    3634:	de 01       	movw	r26, r28
    3636:	a2 55       	subi	r26, 0x52	; 82
    3638:	bf 4f       	sbci	r27, 0xFF	; 255
    363a:	8d 91       	ld	r24, X+
    363c:	9d 91       	ld	r25, X+
    363e:	0d 90       	ld	r0, X+
    3640:	bc 91       	ld	r27, X
    3642:	a0 2d       	mov	r26, r0
    3644:	80 56       	subi	r24, 0x60	; 96
    3646:	90 4f       	sbci	r25, 0xF0	; 240
    3648:	af 4f       	sbci	r26, 0xFF	; 255
    364a:	bf 4f       	sbci	r27, 0xFF	; 255
    364c:	80 83       	st	Z, r24
    364e:	91 83       	std	Z+1, r25	; 0x01
    3650:	a2 83       	std	Z+2, r26	; 0x02
    3652:	b3 83       	std	Z+3, r27	; 0x03
    3654:	8a 81       	ldd	r24, Y+2	; 0x02
    3656:	81 11       	cpse	r24, r1
    3658:	16 c0       	rjmp	.+44     	; 0x3686 <TTapeController::WindRight()+0xc2>
    365a:	61 e0       	ldi	r22, 0x01	; 1
    365c:	ce 01       	movw	r24, r28
    365e:	0e 94 fd 17 	call	0x2ffa	; 0x2ffa <TTapeController::SetMute(bool)>
    3662:	18 c0       	rjmp	.+48     	; 0x3694 <TTapeController::WindRight()+0xd0>
    3664:	8a 89       	ldd	r24, Y+18	; 0x12
    3666:	0e 94 82 35 	call	0x6b04	; 0x6b04 <digitalRead>
    366a:	01 97       	sbiw	r24, 0x01	; 1
    366c:	69 f6       	brne	.-102    	; 0x3608 <TTapeController::WindRight()+0x44>
    366e:	f8 01       	movw	r30, r16
    3670:	80 81       	ld	r24, Z
    3672:	91 81       	ldd	r25, Z+1	; 0x01
    3674:	97 ff       	sbrs	r25, 7
    3676:	c8 cf       	rjmp	.-112    	; 0x3608 <TTapeController::WindRight()+0x44>
    3678:	df 91       	pop	r29
    367a:	cf 91       	pop	r28
    367c:	1f 91       	pop	r17
    367e:	0f 91       	pop	r16
    3680:	ff 90       	pop	r15
    3682:	ef 90       	pop	r14
    3684:	08 95       	ret
    3686:	8b 81       	ldd	r24, Y+3	; 0x03
    3688:	81 11       	cpse	r24, r1
    368a:	e7 cf       	rjmp	.-50     	; 0x365a <TTapeController::WindRight()+0x96>
    368c:	60 e0       	ldi	r22, 0x00	; 0
    368e:	8a 8d       	ldd	r24, Y+26	; 0x1a
    3690:	0e 94 54 35 	call	0x6aa8	; 0x6aa8 <digitalWrite>
    3694:	ce 01       	movw	r24, r28
    3696:	0e 94 67 15 	call	0x2ace	; 0x2ace <TTapeController::StartCapstan()>
    369a:	60 e0       	ldi	r22, 0x00	; 0
    369c:	88 8d       	ldd	r24, Y+24	; 0x18
    369e:	0e 94 54 35 	call	0x6aa8	; 0x6aa8 <digitalWrite>
    36a2:	61 e0       	ldi	r22, 0x01	; 1
    36a4:	8e 89       	ldd	r24, Y+22	; 0x16
    36a6:	0e 94 54 35 	call	0x6aa8	; 0x6aa8 <digitalWrite>
    36aa:	64 e6       	ldi	r22, 0x64	; 100
    36ac:	70 e0       	ldi	r23, 0x00	; 0
    36ae:	80 e0       	ldi	r24, 0x00	; 0
    36b0:	90 e0       	ldi	r25, 0x00	; 0
    36b2:	0e 94 75 34 	call	0x68ea	; 0x68ea <delay>
    36b6:	8c a1       	ldd	r24, Y+36	; 0x24
    36b8:	9d a1       	ldd	r25, Y+37	; 0x25
    36ba:	0e 94 ad 0a 	call	0x155a	; 0x155a <TCounter::WakeUp()>
    36be:	f8 01       	movw	r30, r16
    36c0:	80 81       	ld	r24, Z
    36c2:	91 81       	ldd	r25, Z+1	; 0x01
    36c4:	60 e0       	ldi	r22, 0x00	; 0
    36c6:	97 ff       	sbrs	r25, 7
    36c8:	3b c0       	rjmp	.+118    	; 0x3740 <TTapeController::WindRight()+0x17c>
    36ca:	8c 89       	ldd	r24, Y+20	; 0x14
    36cc:	0e 94 54 35 	call	0x6aa8	; 0x6aa8 <digitalWrite>
    36d0:	61 e0       	ldi	r22, 0x01	; 1
    36d2:	8a 89       	ldd	r24, Y+18	; 0x12
    36d4:	0e 94 54 35 	call	0x6aa8	; 0x6aa8 <digitalWrite>
    36d8:	62 e3       	ldi	r22, 0x32	; 50
    36da:	70 e0       	ldi	r23, 0x00	; 0
    36dc:	80 e0       	ldi	r24, 0x00	; 0
    36de:	90 e0       	ldi	r25, 0x00	; 0
    36e0:	0e 94 75 34 	call	0x68ea	; 0x68ea <delay>
    36e4:	ce 01       	movw	r24, r28
    36e6:	0e 94 42 18 	call	0x3084	; 0x3084 <TTapeController::PushSlideServo()>
    36ea:	64 e6       	ldi	r22, 0x64	; 100
    36ec:	70 e0       	ldi	r23, 0x00	; 0
    36ee:	80 e0       	ldi	r24, 0x00	; 0
    36f0:	90 e0       	ldi	r25, 0x00	; 0
    36f2:	0e 94 75 34 	call	0x68ea	; 0x68ea <delay>
    36f6:	60 e0       	ldi	r22, 0x00	; 0
    36f8:	8e 89       	ldd	r24, Y+22	; 0x16
    36fa:	0e 94 54 35 	call	0x6aa8	; 0x6aa8 <digitalWrite>
    36fe:	61 e0       	ldi	r22, 0x01	; 1
    3700:	70 e0       	ldi	r23, 0x00	; 0
    3702:	8c a1       	ldd	r24, Y+36	; 0x24
    3704:	9d a1       	ldd	r25, Y+37	; 0x25
    3706:	0e 94 2a 0a 	call	0x1454	; 0x1454 <TCounter::FastWind(int)>
    370a:	81 e0       	ldi	r24, 0x01	; 1
    370c:	90 e0       	ldi	r25, 0x00	; 0
    370e:	f7 01       	movw	r30, r14
    3710:	91 83       	std	Z+1, r25	; 0x01
    3712:	80 83       	st	Z, r24
    3714:	8a 81       	ldd	r24, Y+2	; 0x02
    3716:	88 23       	and	r24, r24
    3718:	21 f0       	breq	.+8      	; 0x3722 <TTapeController::WindRight()+0x15e>
    371a:	88 a1       	ldd	r24, Y+32	; 0x20
    371c:	99 a1       	ldd	r25, Y+33	; 0x21
    371e:	0e 94 89 0b 	call	0x1712	; 0x1712 <TDisplay::Play()>
    3722:	88 a1       	ldd	r24, Y+32	; 0x20
    3724:	99 a1       	ldd	r25, Y+33	; 0x21
    3726:	f8 01       	movw	r30, r16
    3728:	20 81       	ld	r18, Z
    372a:	31 81       	ldd	r19, Z+1	; 0x01
    372c:	37 ff       	sbrs	r19, 7
    372e:	0e c0       	rjmp	.+28     	; 0x374c <TTapeController::WindRight()+0x188>
    3730:	0e 94 6f 0c 	call	0x18de	; 0x18de <TDisplay::WindRight()>
    3734:	1b 82       	std	Y+3, r1	; 0x03
    3736:	cd 57       	subi	r28, 0x7D	; 125
    3738:	df 4f       	sbci	r29, 0xFF	; 255
    373a:	81 e0       	ldi	r24, 0x01	; 1
    373c:	88 83       	st	Y, r24
    373e:	9c cf       	rjmp	.-200    	; 0x3678 <TTapeController::WindRight()+0xb4>
    3740:	8a 89       	ldd	r24, Y+18	; 0x12
    3742:	0e 94 54 35 	call	0x6aa8	; 0x6aa8 <digitalWrite>
    3746:	61 e0       	ldi	r22, 0x01	; 1
    3748:	8c 89       	ldd	r24, Y+20	; 0x14
    374a:	c4 cf       	rjmp	.-120    	; 0x36d4 <TTapeController::WindRight()+0x110>
    374c:	0e 94 40 0c 	call	0x1880	; 0x1880 <TDisplay::WindLeft()>
    3750:	f1 cf       	rjmp	.-30     	; 0x3734 <TTapeController::WindRight()+0x170>

00003752 <TTapeController::MoveToPosition(bool, int)>:
_ZN15TTapeController14MoveToPositionEbi():
    3752:	ef 92       	push	r14
    3754:	ff 92       	push	r15
    3756:	0f 93       	push	r16
    3758:	1f 93       	push	r17
    375a:	cf 93       	push	r28
    375c:	df 93       	push	r29
    375e:	ec 01       	movw	r28, r24
    3760:	f6 2e       	mov	r15, r22
    3762:	8a 01       	movw	r16, r20
    3764:	0e 94 d5 15 	call	0x2baa	; 0x2baa <TTapeController::ClearProgramm()>
    3768:	ce 01       	movw	r24, r28
    376a:	0e 94 4b 1e 	call	0x3c96	; 0x3c96 <TTapeController::Stop()>
    376e:	fe 01       	movw	r30, r28
    3770:	e7 56       	subi	r30, 0x67	; 103
    3772:	ff 4f       	sbci	r31, 0xFF	; 255
    3774:	f0 82       	st	Z, r15
    3776:	7e 01       	movw	r14, r28
    3778:	83 e9       	ldi	r24, 0x93	; 147
    377a:	e8 0e       	add	r14, r24
    377c:	f1 1c       	adc	r15, r1
    377e:	01 2e       	mov	r0, r17
    3780:	00 0c       	add	r0, r0
    3782:	22 0b       	sbc	r18, r18
    3784:	33 0b       	sbc	r19, r19
    3786:	f7 01       	movw	r30, r14
    3788:	00 83       	st	Z, r16
    378a:	11 83       	std	Z+1, r17	; 0x01
    378c:	22 83       	std	Z+2, r18	; 0x02
    378e:	33 83       	std	Z+3, r19	; 0x03
    3790:	8c a1       	ldd	r24, Y+36	; 0x24
    3792:	9d a1       	ldd	r25, Y+37	; 0x25
    3794:	0e 94 5d 0a 	call	0x14ba	; 0x14ba <TCounter::GetCurrentPosition()>
    3798:	8c 01       	movw	r16, r24
    379a:	6f ef       	ldi	r22, 0xFF	; 255
    379c:	7f ef       	ldi	r23, 0xFF	; 255
    379e:	88 a1       	ldd	r24, Y+32	; 0x20
    37a0:	99 a1       	ldd	r25, Y+33	; 0x21
    37a2:	0e 94 0d 0b 	call	0x161a	; 0x161a <TDisplay::ShowDigit(int)>
    37a6:	fe 01       	movw	r30, r28
    37a8:	ee 54       	subi	r30, 0x4E	; 78
    37aa:	ff 4f       	sbci	r31, 0xFF	; 255
    37ac:	60 81       	ld	r22, Z
    37ae:	71 81       	ldd	r23, Z+1	; 0x01
    37b0:	4a e0       	ldi	r20, 0x0A	; 10
    37b2:	50 e0       	ldi	r21, 0x00	; 0
    37b4:	82 ed       	ldi	r24, 0xD2	; 210
    37b6:	9a e0       	ldi	r25, 0x0A	; 10
    37b8:	0e 94 94 38 	call	0x7128	; 0x7128 <Print::print(int, int)>
    37bc:	6e ea       	ldi	r22, 0xAE	; 174
    37be:	74 e0       	ldi	r23, 0x04	; 4
    37c0:	82 ed       	ldi	r24, 0xD2	; 210
    37c2:	9a e0       	ldi	r25, 0x0A	; 10
    37c4:	0e 94 c4 37 	call	0x6f88	; 0x6f88 <Print::print(char const*)>
    37c8:	4a e0       	ldi	r20, 0x0A	; 10
    37ca:	50 e0       	ldi	r21, 0x00	; 0
    37cc:	b8 01       	movw	r22, r16
    37ce:	82 ed       	ldi	r24, 0xD2	; 210
    37d0:	9a e0       	ldi	r25, 0x0A	; 10
    37d2:	0e 94 94 38 	call	0x7128	; 0x7128 <Print::print(int, int)>
    37d6:	63 eb       	ldi	r22, 0xB3	; 179
    37d8:	74 e0       	ldi	r23, 0x04	; 4
    37da:	82 ed       	ldi	r24, 0xD2	; 210
    37dc:	9a e0       	ldi	r25, 0x0A	; 10
    37de:	0e 94 c4 37 	call	0x6f88	; 0x6f88 <Print::print(char const*)>
    37e2:	f7 01       	movw	r30, r14
    37e4:	40 81       	ld	r20, Z
    37e6:	51 81       	ldd	r21, Z+1	; 0x01
    37e8:	62 81       	ldd	r22, Z+2	; 0x02
    37ea:	73 81       	ldd	r23, Z+3	; 0x03
    37ec:	2a e0       	ldi	r18, 0x0A	; 10
    37ee:	30 e0       	ldi	r19, 0x00	; 0
    37f0:	82 ed       	ldi	r24, 0xD2	; 210
    37f2:	9a e0       	ldi	r25, 0x0A	; 10
    37f4:	0e 94 4c 38 	call	0x7098	; 0x7098 <Print::print(long, int)>
    37f8:	01 2e       	mov	r0, r17
    37fa:	00 0c       	add	r0, r0
    37fc:	22 0b       	sbc	r18, r18
    37fe:	33 0b       	sbc	r19, r19
    3800:	f7 01       	movw	r30, r14
    3802:	40 81       	ld	r20, Z
    3804:	51 81       	ldd	r21, Z+1	; 0x01
    3806:	62 81       	ldd	r22, Z+2	; 0x02
    3808:	73 81       	ldd	r23, Z+3	; 0x03
    380a:	ce 01       	movw	r24, r28
    380c:	04 17       	cp	r16, r20
    380e:	15 07       	cpc	r17, r21
    3810:	26 07       	cpc	r18, r22
    3812:	37 07       	cpc	r19, r23
    3814:	44 f4       	brge	.+16     	; 0x3826 <TTapeController::MoveToPosition(bool, int)+0xd4>
    3816:	df 91       	pop	r29
    3818:	cf 91       	pop	r28
    381a:	1f 91       	pop	r17
    381c:	0f 91       	pop	r16
    381e:	ff 90       	pop	r15
    3820:	ef 90       	pop	r14
    3822:	0c 94 e2 1a 	jmp	0x35c4	; 0x35c4 <TTapeController::WindRight()>
    3826:	df 91       	pop	r29
    3828:	cf 91       	pop	r28
    382a:	1f 91       	pop	r17
    382c:	0f 91       	pop	r16
    382e:	ff 90       	pop	r15
    3830:	ef 90       	pop	r14
    3832:	0c 94 0c 1f 	jmp	0x3e18	; 0x3e18 <TTapeController::WindLeft()>

00003836 <TTapeController::Play()>:
_ZN15TTapeController4PlayEv():
    3836:	af 92       	push	r10
    3838:	bf 92       	push	r11
    383a:	cf 92       	push	r12
    383c:	df 92       	push	r13
    383e:	ef 92       	push	r14
    3840:	ff 92       	push	r15
    3842:	0f 93       	push	r16
    3844:	1f 93       	push	r17
    3846:	cf 93       	push	r28
    3848:	df 93       	push	r29
    384a:	ec 01       	movw	r28, r24
    384c:	60 ef       	ldi	r22, 0xF0	; 240
    384e:	72 e0       	ldi	r23, 0x02	; 2
    3850:	82 ed       	ldi	r24, 0xD2	; 210
    3852:	9a e0       	ldi	r25, 0x0A	; 10
    3854:	0e 94 e9 37 	call	0x6fd2	; 0x6fd2 <Print::println(char const*)>
    3858:	ce 01       	movw	r24, r28
    385a:	0e 94 b3 19 	call	0x3366	; 0x3366 <TTapeController::GetState()>
    385e:	1a 82       	std	Y+2, r1	; 0x02
    3860:	89 81       	ldd	r24, Y+1	; 0x01
    3862:	88 23       	and	r24, r24
    3864:	d9 f1       	breq	.+118    	; 0x38dc <TTapeController::Play()+0xa6>
    3866:	68 a5       	ldd	r22, Y+40	; 0x28
    3868:	79 a5       	ldd	r23, Y+41	; 0x29
    386a:	6d 3f       	cpi	r22, 0xFD	; 253
    386c:	8f ef       	ldi	r24, 0xFF	; 255
    386e:	78 07       	cpc	r23, r24
    3870:	4c f0       	brlt	.+18     	; 0x3884 <TTapeController::Play()+0x4e>
    3872:	6f 3f       	cpi	r22, 0xFF	; 255
    3874:	ef ef       	ldi	r30, 0xFF	; 255
    3876:	7e 07       	cpc	r23, r30
    3878:	d9 f0       	breq	.+54     	; 0x38b0 <TTapeController::Play()+0x7a>
    387a:	d4 f0       	brlt	.+52     	; 0x38b0 <TTapeController::Play()+0x7a>
    387c:	50 e0       	ldi	r21, 0x00	; 0
    387e:	40 e0       	ldi	r20, 0x00	; 0
    3880:	67 2b       	or	r22, r23
    3882:	f1 f0       	breq	.+60     	; 0x38c0 <TTapeController::Play()+0x8a>
    3884:	6b eb       	ldi	r22, 0xBB	; 187
    3886:	74 e0       	ldi	r23, 0x04	; 4
    3888:	82 ed       	ldi	r24, 0xD2	; 210
    388a:	9a e0       	ldi	r25, 0x0A	; 10
    388c:	0e 94 e9 37 	call	0x6fd2	; 0x6fd2 <Print::println(char const*)>
    3890:	70 e0       	ldi	r23, 0x00	; 0
    3892:	60 e0       	ldi	r22, 0x00	; 0
    3894:	88 a1       	ldd	r24, Y+32	; 0x20
    3896:	99 a1       	ldd	r25, Y+33	; 0x21
    3898:	df 91       	pop	r29
    389a:	cf 91       	pop	r28
    389c:	1f 91       	pop	r17
    389e:	0f 91       	pop	r16
    38a0:	ff 90       	pop	r15
    38a2:	ef 90       	pop	r14
    38a4:	df 90       	pop	r13
    38a6:	cf 90       	pop	r12
    38a8:	bf 90       	pop	r11
    38aa:	af 90       	pop	r10
    38ac:	0c 94 52 0b 	jmp	0x16a4	; 0x16a4 <TDisplay::ShowError(short)>
    38b0:	71 95       	neg	r23
    38b2:	61 95       	neg	r22
    38b4:	71 09       	sbc	r23, r1
    38b6:	8c a1       	ldd	r24, Y+36	; 0x24
    38b8:	9d a1       	ldd	r25, Y+37	; 0x25
    38ba:	0e 94 61 0a 	call	0x14c2	; 0x14c2 <TCounter::GetMemoryPosition(int)>
    38be:	ac 01       	movw	r20, r24
    38c0:	61 e0       	ldi	r22, 0x01	; 1
    38c2:	ce 01       	movw	r24, r28
    38c4:	df 91       	pop	r29
    38c6:	cf 91       	pop	r28
    38c8:	1f 91       	pop	r17
    38ca:	0f 91       	pop	r16
    38cc:	ff 90       	pop	r15
    38ce:	ef 90       	pop	r14
    38d0:	df 90       	pop	r13
    38d2:	cf 90       	pop	r12
    38d4:	bf 90       	pop	r11
    38d6:	af 90       	pop	r10
    38d8:	0c 94 a9 1b 	jmp	0x3752	; 0x3752 <TTapeController::MoveToPosition(bool, int)>
    38dc:	88 a1       	ldd	r24, Y+32	; 0x20
    38de:	99 a1       	ldd	r25, Y+33	; 0x21
    38e0:	0e 94 4f 0b 	call	0x169e	; 0x169e <TDisplay::WaitingForInput()>
    38e4:	88 23       	and	r24, r24
    38e6:	21 f0       	breq	.+8      	; 0x38f0 <TTapeController::Play()+0xba>
    38e8:	88 a1       	ldd	r24, Y+32	; 0x20
    38ea:	99 a1       	ldd	r25, Y+33	; 0x21
    38ec:	0e 94 5a 0b 	call	0x16b4	; 0x16b4 <TDisplay::Clear()>
    38f0:	7e 01       	movw	r14, r28
    38f2:	f6 eb       	ldi	r31, 0xB6	; 182
    38f4:	ef 0e       	add	r14, r31
    38f6:	f1 1c       	adc	r15, r1
    38f8:	f7 01       	movw	r30, r14
    38fa:	80 81       	ld	r24, Z
    38fc:	88 23       	and	r24, r24
    38fe:	a1 f1       	breq	.+104    	; 0x3968 <TTapeController::Play()+0x132>
    3900:	61 e0       	ldi	r22, 0x01	; 1
    3902:	8e 89       	ldd	r24, Y+22	; 0x16
    3904:	0e 94 54 35 	call	0x6aa8	; 0x6aa8 <digitalWrite>
    3908:	ce 01       	movw	r24, r28
    390a:	0e 94 67 15 	call	0x2ace	; 0x2ace <TTapeController::StartCapstan()>
    390e:	fe 01       	movw	r30, r28
    3910:	ee 54       	subi	r30, 0x4E	; 78
    3912:	ff 4f       	sbci	r31, 0xFF	; 255
    3914:	80 81       	ld	r24, Z
    3916:	91 81       	ldd	r25, Z+1	; 0x01
    3918:	60 e0       	ldi	r22, 0x00	; 0
    391a:	97 ff       	sbrs	r25, 7
    391c:	1f c0       	rjmp	.+62     	; 0x395c <TTapeController::Play()+0x126>
    391e:	8c 89       	ldd	r24, Y+20	; 0x14
    3920:	0e 94 54 35 	call	0x6aa8	; 0x6aa8 <digitalWrite>
    3924:	61 e0       	ldi	r22, 0x01	; 1
    3926:	8a 89       	ldd	r24, Y+18	; 0x12
    3928:	0e 94 54 35 	call	0x6aa8	; 0x6aa8 <digitalWrite>
    392c:	f7 01       	movw	r30, r14
    392e:	10 82       	st	Z, r1
    3930:	60 e0       	ldi	r22, 0x00	; 0
    3932:	ce 01       	movw	r24, r28
    3934:	0e 94 fd 17 	call	0x2ffa	; 0x2ffa <TTapeController::SetMute(bool)>
    3938:	88 a1       	ldd	r24, Y+32	; 0x20
    393a:	99 a1       	ldd	r25, Y+33	; 0x21
    393c:	0e 94 89 0b 	call	0x1712	; 0x1712 <TDisplay::Play()>
    3940:	8c a1       	ldd	r24, Y+36	; 0x24
    3942:	9d a1       	ldd	r25, Y+37	; 0x25
    3944:	df 91       	pop	r29
    3946:	cf 91       	pop	r28
    3948:	1f 91       	pop	r17
    394a:	0f 91       	pop	r16
    394c:	ff 90       	pop	r15
    394e:	ef 90       	pop	r14
    3950:	df 90       	pop	r13
    3952:	cf 90       	pop	r12
    3954:	bf 90       	pop	r11
    3956:	af 90       	pop	r10
    3958:	0c 94 6d 09 	jmp	0x12da	; 0x12da <TCounter::Play()>
    395c:	8a 89       	ldd	r24, Y+18	; 0x12
    395e:	0e 94 54 35 	call	0x6aa8	; 0x6aa8 <digitalWrite>
    3962:	61 e0       	ldi	r22, 0x01	; 1
    3964:	8c 89       	ldd	r24, Y+20	; 0x14
    3966:	e0 cf       	rjmp	.-64     	; 0x3928 <TTapeController::Play()+0xf2>
    3968:	6e 01       	movw	r12, r28
    396a:	f5 eb       	ldi	r31, 0xB5	; 181
    396c:	cf 0e       	add	r12, r31
    396e:	d1 1c       	adc	r13, r1
    3970:	f6 01       	movw	r30, r12
    3972:	80 81       	ld	r24, Z
    3974:	88 23       	and	r24, r24
    3976:	31 f0       	breq	.+12     	; 0x3984 <TTapeController::Play()+0x14e>
    3978:	39 96       	adiw	r30, 0x09	; 9
    397a:	80 81       	ld	r24, Z
    397c:	91 81       	ldd	r25, Z+1	; 0x01
    397e:	89 2b       	or	r24, r25
    3980:	09 f4       	brne	.+2      	; 0x3984 <TTapeController::Play()+0x14e>
    3982:	10 c1       	rjmp	.+544    	; 0x3ba4 <TTapeController::Play()+0x36e>
    3984:	8e 01       	movw	r16, r28
    3986:	0e 56       	subi	r16, 0x6E	; 110
    3988:	1f 4f       	sbci	r17, 0xFF	; 255
    398a:	f8 01       	movw	r30, r16
    398c:	80 81       	ld	r24, Z
    398e:	81 11       	cpse	r24, r1
    3990:	08 c0       	rjmp	.+16     	; 0x39a2 <TTapeController::Play()+0x16c>
    3992:	88 81       	ld	r24, Y
    3994:	81 11       	cpse	r24, r1
    3996:	05 c0       	rjmp	.+10     	; 0x39a2 <TTapeController::Play()+0x16c>
    3998:	ce 01       	movw	r24, r28
    399a:	0e 94 10 17 	call	0x2e20	; 0x2e20 <TTapeController::HasProgramm()>
    399e:	81 11       	cpse	r24, r1
    39a0:	ee c0       	rjmp	.+476    	; 0x3b7e <TTapeController::Play()+0x348>
    39a2:	f8 01       	movw	r30, r16
    39a4:	10 82       	st	Z, r1
    39a6:	5e 01       	movw	r10, r28
    39a8:	f9 e8       	ldi	r31, 0x89	; 137
    39aa:	af 0e       	add	r10, r31
    39ac:	b1 1c       	adc	r11, r1
    39ae:	f5 01       	movw	r30, r10
    39b0:	80 81       	ld	r24, Z
    39b2:	88 23       	and	r24, r24
    39b4:	61 f0       	breq	.+24     	; 0x39ce <TTapeController::Play()+0x198>
    39b6:	ce 01       	movw	r24, r28
    39b8:	0e 94 4b 1e 	call	0x3c96	; 0x3c96 <TTapeController::Stop()>
    39bc:	64 e6       	ldi	r22, 0x64	; 100
    39be:	70 e0       	ldi	r23, 0x00	; 0
    39c0:	80 e0       	ldi	r24, 0x00	; 0
    39c2:	90 e0       	ldi	r25, 0x00	; 0
    39c4:	0e 94 75 34 	call	0x68ea	; 0x68ea <delay>
    39c8:	ce 01       	movw	r24, r28
    39ca:	0e 94 b3 19 	call	0x3366	; 0x3366 <TTapeController::GetState()>
    39ce:	f6 01       	movw	r30, r12
    39d0:	80 81       	ld	r24, Z
    39d2:	81 11       	cpse	r24, r1
    39d4:	17 c0       	rjmp	.+46     	; 0x3a04 <TTapeController::Play()+0x1ce>
    39d6:	fe 01       	movw	r30, r28
    39d8:	e4 54       	subi	r30, 0x44	; 68
    39da:	ff 4f       	sbci	r31, 0xFF	; 255
    39dc:	80 81       	ld	r24, Z
    39de:	91 81       	ldd	r25, Z+1	; 0x01
    39e0:	00 97       	sbiw	r24, 0x00	; 0
    39e2:	81 f0       	breq	.+32     	; 0x3a04 <TTapeController::Play()+0x1ce>
    39e4:	21 e0       	ldi	r18, 0x01	; 1
    39e6:	fa 97       	sbiw	r30, 0x3a	; 58
    39e8:	20 83       	st	Z, r18
    39ea:	03 97       	sbiw	r24, 0x03	; 3
    39ec:	59 f4       	brne	.+22     	; 0x3a04 <TTapeController::Play()+0x1ce>
    39ee:	81 e0       	ldi	r24, 0x01	; 1
    39f0:	90 e0       	ldi	r25, 0x00	; 0
    39f2:	35 96       	adiw	r30, 0x05	; 5
    39f4:	91 83       	std	Z+1, r25	; 0x01
    39f6:	80 83       	st	Z, r24
    39f8:	61 e0       	ldi	r22, 0x01	; 1
    39fa:	70 e0       	ldi	r23, 0x00	; 0
    39fc:	88 a1       	ldd	r24, Y+32	; 0x20
    39fe:	99 a1       	ldd	r25, Y+33	; 0x21
    3a00:	0e 94 0d 0b 	call	0x161a	; 0x161a <TDisplay::ShowDigit(int)>
    3a04:	fe 01       	movw	r30, r28
    3a06:	e4 57       	subi	r30, 0x74	; 116
    3a08:	ff 4f       	sbci	r31, 0xFF	; 255
    3a0a:	80 81       	ld	r24, Z
    3a0c:	8e 01       	movw	r16, r28
    3a0e:	0b 57       	subi	r16, 0x7B	; 123
    3a10:	1f 4f       	sbci	r17, 0xFF	; 255
    3a12:	f8 01       	movw	r30, r16
    3a14:	80 83       	st	Z, r24
    3a16:	6d ec       	ldi	r22, 0xCD	; 205
    3a18:	74 e0       	ldi	r23, 0x04	; 4
    3a1a:	82 ed       	ldi	r24, 0xD2	; 210
    3a1c:	9a e0       	ldi	r25, 0x0A	; 10
    3a1e:	0e 94 c4 37 	call	0x6f88	; 0x6f88 <Print::print(char const*)>
    3a22:	f8 01       	movw	r30, r16
    3a24:	60 81       	ld	r22, Z
    3a26:	70 e0       	ldi	r23, 0x00	; 0
    3a28:	4a e0       	ldi	r20, 0x0A	; 10
    3a2a:	50 e0       	ldi	r21, 0x00	; 0
    3a2c:	82 ed       	ldi	r24, 0xD2	; 210
    3a2e:	9a e0       	ldi	r25, 0x0A	; 10
    3a30:	0e 94 9b 38 	call	0x7136	; 0x7136 <Print::println(int, int)>
    3a34:	61 e0       	ldi	r22, 0x01	; 1
    3a36:	88 8d       	ldd	r24, Y+24	; 0x18
    3a38:	0e 94 54 35 	call	0x6aa8	; 0x6aa8 <digitalWrite>
    3a3c:	61 e0       	ldi	r22, 0x01	; 1
    3a3e:	8e 89       	ldd	r24, Y+22	; 0x16
    3a40:	0e 94 54 35 	call	0x6aa8	; 0x6aa8 <digitalWrite>
    3a44:	60 e0       	ldi	r22, 0x00	; 0
    3a46:	8c 89       	ldd	r24, Y+20	; 0x14
    3a48:	0e 94 54 35 	call	0x6aa8	; 0x6aa8 <digitalWrite>
    3a4c:	60 e0       	ldi	r22, 0x00	; 0
    3a4e:	8a 89       	ldd	r24, Y+18	; 0x12
    3a50:	0e 94 54 35 	call	0x6aa8	; 0x6aa8 <digitalWrite>
    3a54:	ce 01       	movw	r24, r28
    3a56:	0e 94 67 15 	call	0x2ace	; 0x2ace <TTapeController::StartCapstan()>
    3a5a:	ce 01       	movw	r24, r28
    3a5c:	0e 94 b3 19 	call	0x3366	; 0x3366 <TTapeController::GetState()>
    3a60:	f5 01       	movw	r30, r10
    3a62:	80 81       	ld	r24, Z
    3a64:	81 11       	cpse	r24, r1
    3a66:	2a c0       	rjmp	.+84     	; 0x3abc <TTapeController::Play()+0x286>
    3a68:	64 e6       	ldi	r22, 0x64	; 100
    3a6a:	70 e0       	ldi	r23, 0x00	; 0
    3a6c:	80 e0       	ldi	r24, 0x00	; 0
    3a6e:	90 e0       	ldi	r25, 0x00	; 0
    3a70:	0e 94 75 34 	call	0x68ea	; 0x68ea <delay>
    3a74:	ce 01       	movw	r24, r28
    3a76:	0e 94 42 18 	call	0x3084	; 0x3084 <TTapeController::PushSlideServo()>
    3a7a:	62 e3       	ldi	r22, 0x32	; 50
    3a7c:	70 e0       	ldi	r23, 0x00	; 0
    3a7e:	80 e0       	ldi	r24, 0x00	; 0
    3a80:	90 e0       	ldi	r25, 0x00	; 0
    3a82:	0e 94 75 34 	call	0x68ea	; 0x68ea <delay>
    3a86:	ce 01       	movw	r24, r28
    3a88:	0e 94 b3 19 	call	0x3366	; 0x3366 <TTapeController::GetState()>
    3a8c:	0b e0       	ldi	r16, 0x0B	; 11
    3a8e:	10 e0       	ldi	r17, 0x00	; 0
    3a90:	f5 01       	movw	r30, r10
    3a92:	80 81       	ld	r24, Z
    3a94:	81 11       	cpse	r24, r1
    3a96:	12 c0       	rjmp	.+36     	; 0x3abc <TTapeController::Play()+0x286>
    3a98:	62 e3       	ldi	r22, 0x32	; 50
    3a9a:	70 e0       	ldi	r23, 0x00	; 0
    3a9c:	80 e0       	ldi	r24, 0x00	; 0
    3a9e:	90 e0       	ldi	r25, 0x00	; 0
    3aa0:	0e 94 75 34 	call	0x68ea	; 0x68ea <delay>
    3aa4:	ce 01       	movw	r24, r28
    3aa6:	0e 94 b3 19 	call	0x3366	; 0x3366 <TTapeController::GetState()>
    3aaa:	01 50       	subi	r16, 0x01	; 1
    3aac:	11 09       	sbc	r17, r1
    3aae:	81 f7       	brne	.-32     	; 0x3a90 <TTapeController::Play()+0x25a>
    3ab0:	64 e0       	ldi	r22, 0x04	; 4
    3ab2:	70 e0       	ldi	r23, 0x00	; 0
    3ab4:	88 a1       	ldd	r24, Y+32	; 0x20
    3ab6:	99 a1       	ldd	r25, Y+33	; 0x21
    3ab8:	0e 94 52 0b 	call	0x16a4	; 0x16a4 <TDisplay::ShowError(short)>
    3abc:	fe 01       	movw	r30, r28
    3abe:	ee 54       	subi	r30, 0x4E	; 78
    3ac0:	ff 4f       	sbci	r31, 0xFF	; 255
    3ac2:	80 81       	ld	r24, Z
    3ac4:	91 81       	ldd	r25, Z+1	; 0x01
    3ac6:	60 e0       	ldi	r22, 0x00	; 0
    3ac8:	97 ff       	sbrs	r25, 7
    3aca:	66 c0       	rjmp	.+204    	; 0x3b98 <TTapeController::Play()+0x362>
    3acc:	8c 89       	ldd	r24, Y+20	; 0x14
    3ace:	0e 94 54 35 	call	0x6aa8	; 0x6aa8 <digitalWrite>
    3ad2:	61 e0       	ldi	r22, 0x01	; 1
    3ad4:	8a 89       	ldd	r24, Y+18	; 0x12
    3ad6:	0e 94 54 35 	call	0x6aa8	; 0x6aa8 <digitalWrite>
    3ada:	60 e0       	ldi	r22, 0x00	; 0
    3adc:	ce 01       	movw	r24, r28
    3ade:	0e 94 fd 17 	call	0x2ffa	; 0x2ffa <TTapeController::SetMute(bool)>
    3ae2:	8c a1       	ldd	r24, Y+36	; 0x24
    3ae4:	9d a1       	ldd	r25, Y+37	; 0x25
    3ae6:	0e 94 6d 09 	call	0x12da	; 0x12da <TCounter::Play()>
    3aea:	88 a1       	ldd	r24, Y+32	; 0x20
    3aec:	99 a1       	ldd	r25, Y+33	; 0x21
    3aee:	0e 94 89 0b 	call	0x1712	; 0x1712 <TDisplay::Play()>
    3af2:	fe 01       	movw	r30, r28
    3af4:	e2 54       	subi	r30, 0x42	; 66
    3af6:	ff 4f       	sbci	r31, 0xFF	; 255
    3af8:	11 82       	std	Z+1, r1	; 0x01
    3afa:	10 82       	st	Z, r1
    3afc:	81 e0       	ldi	r24, 0x01	; 1
    3afe:	f6 01       	movw	r30, r12
    3b00:	80 83       	st	Z, r24
    3b02:	f7 01       	movw	r30, r14
    3b04:	10 82       	st	Z, r1
    3b06:	1b 82       	std	Y+3, r1	; 0x03
    3b08:	1d a6       	std	Y+45, r1	; 0x2d
    3b0a:	1c a6       	std	Y+44, r1	; 0x2c
    3b0c:	fe 01       	movw	r30, r28
    3b0e:	ec 57       	subi	r30, 0x7C	; 124
    3b10:	ff 4f       	sbci	r31, 0xFF	; 255
    3b12:	10 82       	st	Z, r1
    3b14:	31 97       	sbiw	r30, 0x01	; 1
    3b16:	80 83       	st	Z, r24
    3b18:	f7 96       	adiw	r30, 0x37	; 55
    3b1a:	80 81       	ld	r24, Z
    3b1c:	91 81       	ldd	r25, Z+1	; 0x01
    3b1e:	89 2b       	or	r24, r25
    3b20:	21 f0       	breq	.+8      	; 0x3b2a <TTapeController::Play()+0x2f4>
    3b22:	31 97       	sbiw	r30, 0x01	; 1
    3b24:	10 82       	st	Z, r1
    3b26:	31 97       	sbiw	r30, 0x01	; 1
    3b28:	10 82       	st	Z, r1
    3b2a:	fe 01       	movw	r30, r28
    3b2c:	e6 55       	subi	r30, 0x56	; 86
    3b2e:	ff 4f       	sbci	r31, 0xFF	; 255
    3b30:	de 01       	movw	r26, r28
    3b32:	a2 55       	subi	r26, 0x52	; 82
    3b34:	bf 4f       	sbci	r27, 0xFF	; 255
    3b36:	8d 91       	ld	r24, X+
    3b38:	9d 91       	ld	r25, X+
    3b3a:	0d 90       	ld	r0, X+
    3b3c:	bc 91       	ld	r27, X
    3b3e:	a0 2d       	mov	r26, r0
    3b40:	8c 50       	subi	r24, 0x0C	; 12
    3b42:	9e 4f       	sbci	r25, 0xFE	; 254
    3b44:	af 4f       	sbci	r26, 0xFF	; 255
    3b46:	bf 4f       	sbci	r27, 0xFF	; 255
    3b48:	80 83       	st	Z, r24
    3b4a:	91 83       	std	Z+1, r25	; 0x01
    3b4c:	a2 83       	std	Z+2, r26	; 0x02
    3b4e:	b3 83       	std	Z+3, r27	; 0x03
    3b50:	68 ec       	ldi	r22, 0xC8	; 200
    3b52:	70 e0       	ldi	r23, 0x00	; 0
    3b54:	80 e0       	ldi	r24, 0x00	; 0
    3b56:	90 e0       	ldi	r25, 0x00	; 0
    3b58:	0e 94 75 34 	call	0x68ea	; 0x68ea <delay>
    3b5c:	60 e0       	ldi	r22, 0x00	; 0
    3b5e:	ce 01       	movw	r24, r28
    3b60:	0e 94 fd 17 	call	0x2ffa	; 0x2ffa <TTapeController::SetMute(bool)>
    3b64:	ce 01       	movw	r24, r28
    3b66:	df 91       	pop	r29
    3b68:	cf 91       	pop	r28
    3b6a:	1f 91       	pop	r17
    3b6c:	0f 91       	pop	r16
    3b6e:	ff 90       	pop	r15
    3b70:	ef 90       	pop	r14
    3b72:	df 90       	pop	r13
    3b74:	cf 90       	pop	r12
    3b76:	bf 90       	pop	r11
    3b78:	af 90       	pop	r10
    3b7a:	0c 94 b3 19 	jmp	0x3366	; 0x3366 <TTapeController::GetState()>
    3b7e:	ce 01       	movw	r24, r28
    3b80:	df 91       	pop	r29
    3b82:	cf 91       	pop	r28
    3b84:	1f 91       	pop	r17
    3b86:	0f 91       	pop	r16
    3b88:	ff 90       	pop	r15
    3b8a:	ef 90       	pop	r14
    3b8c:	df 90       	pop	r13
    3b8e:	cf 90       	pop	r12
    3b90:	bf 90       	pop	r11
    3b92:	af 90       	pop	r10
    3b94:	0c 94 da 1f 	jmp	0x3fb4	; 0x3fb4 <TTapeController::StartProgramm()>
    3b98:	8a 89       	ldd	r24, Y+18	; 0x12
    3b9a:	0e 94 54 35 	call	0x6aa8	; 0x6aa8 <digitalWrite>
    3b9e:	61 e0       	ldi	r22, 0x01	; 1
    3ba0:	8c 89       	ldd	r24, Y+20	; 0x14
    3ba2:	99 cf       	rjmp	.-206    	; 0x3ad6 <TTapeController::Play()+0x2a0>
    3ba4:	df 91       	pop	r29
    3ba6:	cf 91       	pop	r28
    3ba8:	1f 91       	pop	r17
    3baa:	0f 91       	pop	r16
    3bac:	ff 90       	pop	r15
    3bae:	ef 90       	pop	r14
    3bb0:	df 90       	pop	r13
    3bb2:	cf 90       	pop	r12
    3bb4:	bf 90       	pop	r11
    3bb6:	af 90       	pop	r10
    3bb8:	08 95       	ret

00003bba <TTapeController::StartRecordMode()>:
_ZN15TTapeController15StartRecordModeEv():
    3bba:	0f 93       	push	r16
    3bbc:	1f 93       	push	r17
    3bbe:	cf 93       	push	r28
    3bc0:	df 93       	push	r29
    3bc2:	ec 01       	movw	r28, r24
    3bc4:	65 ee       	ldi	r22, 0xE5	; 229
    3bc6:	74 e0       	ldi	r23, 0x04	; 4
    3bc8:	82 ed       	ldi	r24, 0xD2	; 210
    3bca:	9a e0       	ldi	r25, 0x0A	; 10
    3bcc:	0e 94 e9 37 	call	0x6fd2	; 0x6fd2 <Print::println(char const*)>
    3bd0:	fe 01       	movw	r30, r28
    3bd2:	ea 54       	subi	r30, 0x4A	; 74
    3bd4:	ff 4f       	sbci	r31, 0xFF	; 255
    3bd6:	80 81       	ld	r24, Z
    3bd8:	81 11       	cpse	r24, r1
    3bda:	58 c0       	rjmp	.+176    	; 0x3c8c <TTapeController::StartRecordMode()+0xd2>
    3bdc:	31 97       	sbiw	r30, 0x01	; 1
    3bde:	80 81       	ld	r24, Z
    3be0:	81 11       	cpse	r24, r1
    3be2:	05 c0       	rjmp	.+10     	; 0x3bee <TTapeController::StartRecordMode()+0x34>
    3be4:	39 96       	adiw	r30, 0x09	; 9
    3be6:	80 81       	ld	r24, Z
    3be8:	91 81       	ldd	r25, Z+1	; 0x01
    3bea:	89 2b       	or	r24, r25
    3bec:	19 f0       	breq	.+6      	; 0x3bf4 <TTapeController::StartRecordMode()+0x3a>
    3bee:	ce 01       	movw	r24, r28
    3bf0:	0e 94 4b 1e 	call	0x3c96	; 0x3c96 <TTapeController::Stop()>
    3bf4:	8e 01       	movw	r16, r28
    3bf6:	04 54       	subi	r16, 0x44	; 68
    3bf8:	1f 4f       	sbci	r17, 0xFF	; 255
    3bfa:	f8 01       	movw	r30, r16
    3bfc:	80 81       	ld	r24, Z
    3bfe:	91 81       	ldd	r25, Z+1	; 0x01
    3c00:	89 2b       	or	r24, r25
    3c02:	09 f0       	breq	.+2      	; 0x3c06 <TTapeController::StartRecordMode()+0x4c>
    3c04:	40 c0       	rjmp	.+128    	; 0x3c86 <TTapeController::StartRecordMode()+0xcc>
    3c06:	ce 01       	movw	r24, r28
    3c08:	0e 94 5c 21 	call	0x42b8	; 0x42b8 <TTapeController::CheckIfRecordingIsPossible()>
    3c0c:	88 23       	and	r24, r24
    3c0e:	f1 f1       	breq	.+124    	; 0x3c8c <TTapeController::StartRecordMode()+0xd2>
    3c10:	81 e0       	ldi	r24, 0x01	; 1
    3c12:	90 e0       	ldi	r25, 0x00	; 0
    3c14:	f8 01       	movw	r30, r16
    3c16:	91 83       	std	Z+1, r25	; 0x01
    3c18:	80 83       	st	Z, r24
    3c1a:	ce 01       	movw	r24, r28
    3c1c:	0e 94 73 1a 	call	0x34e6	; 0x34e6 <TTapeController::MoveRecPlaybackLever()>
    3c20:	f8 01       	movw	r30, r16
    3c22:	60 81       	ld	r22, Z
    3c24:	71 81       	ldd	r23, Z+1	; 0x01
    3c26:	88 a1       	ldd	r24, Y+32	; 0x20
    3c28:	99 a1       	ldd	r25, Y+33	; 0x21
    3c2a:	0e 94 fc 0c 	call	0x19f8	; 0x19f8 <TDisplay::RecordMode(int)>
    3c2e:	fe 01       	movw	r30, r28
    3c30:	e6 54       	subi	r30, 0x46	; 70
    3c32:	ff 4f       	sbci	r31, 0xFF	; 255
    3c34:	80 81       	ld	r24, Z
    3c36:	91 81       	ldd	r25, Z+1	; 0x01
    3c38:	8d 7f       	andi	r24, 0xFD	; 253
    3c3a:	89 2b       	or	r24, r25
    3c3c:	51 f0       	breq	.+20     	; 0x3c52 <TTapeController::StartRecordMode()+0x98>
    3c3e:	82 e0       	ldi	r24, 0x02	; 2
    3c40:	90 e0       	ldi	r25, 0x00	; 0
    3c42:	91 83       	std	Z+1, r25	; 0x01
    3c44:	80 83       	st	Z, r24
    3c46:	62 e0       	ldi	r22, 0x02	; 2
    3c48:	70 e0       	ldi	r23, 0x00	; 0
    3c4a:	88 a1       	ldd	r24, Y+32	; 0x20
    3c4c:	99 a1       	ldd	r25, Y+33	; 0x21
    3c4e:	0e 94 72 0d 	call	0x1ae4	; 0x1ae4 <TDisplay::ReverseMode(int)>
    3c52:	f8 01       	movw	r30, r16
    3c54:	80 81       	ld	r24, Z
    3c56:	91 81       	ldd	r25, Z+1	; 0x01
    3c58:	01 97       	sbiw	r24, 0x01	; 1
    3c5a:	c1 f4       	brne	.+48     	; 0x3c8c <TTapeController::StartRecordMode()+0xd2>
    3c5c:	fe 01       	movw	r30, r28
    3c5e:	e4 57       	subi	r30, 0x74	; 116
    3c60:	ff 4f       	sbci	r31, 0xFF	; 255
    3c62:	80 81       	ld	r24, Z
    3c64:	88 23       	and	r24, r24
    3c66:	91 f0       	breq	.+36     	; 0x3c8c <TTapeController::StartRecordMode()+0xd2>
    3c68:	36 97       	sbiw	r30, 0x06	; 6
    3c6a:	81 e0       	ldi	r24, 0x01	; 1
    3c6c:	80 83       	st	Z, r24
    3c6e:	61 e0       	ldi	r22, 0x01	; 1
    3c70:	88 a1       	ldd	r24, Y+32	; 0x20
    3c72:	99 a1       	ldd	r25, Y+33	; 0x21
    3c74:	0e 94 eb 0a 	call	0x15d6	; 0x15d6 <TDisplay::BlinkRecord(bool)>
    3c78:	ce 01       	movw	r24, r28
    3c7a:	df 91       	pop	r29
    3c7c:	cf 91       	pop	r28
    3c7e:	1f 91       	pop	r17
    3c80:	0f 91       	pop	r16
    3c82:	0c 94 1b 1c 	jmp	0x3836	; 0x3836 <TTapeController::Play()>
    3c86:	11 82       	std	Z+1, r1	; 0x01
    3c88:	10 82       	st	Z, r1
    3c8a:	c7 cf       	rjmp	.-114    	; 0x3c1a <TTapeController::StartRecordMode()+0x60>
    3c8c:	df 91       	pop	r29
    3c8e:	cf 91       	pop	r28
    3c90:	1f 91       	pop	r17
    3c92:	0f 91       	pop	r16
    3c94:	08 95       	ret

00003c96 <TTapeController::Stop()>:
_ZN15TTapeController4StopEv():
    3c96:	cf 92       	push	r12
    3c98:	df 92       	push	r13
    3c9a:	ef 92       	push	r14
    3c9c:	ff 92       	push	r15
    3c9e:	0f 93       	push	r16
    3ca0:	1f 93       	push	r17
    3ca2:	cf 93       	push	r28
    3ca4:	df 93       	push	r29
    3ca6:	ec 01       	movw	r28, r24
    3ca8:	6a e3       	ldi	r22, 0x3A	; 58
    3caa:	73 e0       	ldi	r23, 0x03	; 3
    3cac:	82 ed       	ldi	r24, 0xD2	; 210
    3cae:	9a e0       	ldi	r25, 0x0A	; 10
    3cb0:	0e 94 e9 37 	call	0x6fd2	; 0x6fd2 <Print::println(char const*)>
    3cb4:	8c a1       	ldd	r24, Y+36	; 0x24
    3cb6:	9d a1       	ldd	r25, Y+37	; 0x25
    3cb8:	0e 94 14 0a 	call	0x1428	; 0x1428 <TCounter::Stop()>
    3cbc:	6e 01       	movw	r12, r28
    3cbe:	25 eb       	ldi	r18, 0xB5	; 181
    3cc0:	c2 0e       	add	r12, r18
    3cc2:	d1 1c       	adc	r13, r1
    3cc4:	f6 01       	movw	r30, r12
    3cc6:	80 81       	ld	r24, Z
    3cc8:	81 11       	cpse	r24, r1
    3cca:	1a c0       	rjmp	.+52     	; 0x3d00 <TTapeController::Stop()+0x6a>
    3ccc:	bb 97       	sbiw	r30, 0x2b	; 43
    3cce:	80 81       	ld	r24, Z
    3cd0:	88 23       	and	r24, r24
    3cd2:	59 f0       	breq	.+22     	; 0x3cea <TTapeController::Stop()+0x54>
    3cd4:	ce 01       	movw	r24, r28
    3cd6:	df 91       	pop	r29
    3cd8:	cf 91       	pop	r28
    3cda:	1f 91       	pop	r17
    3cdc:	0f 91       	pop	r16
    3cde:	ff 90       	pop	r15
    3ce0:	ef 90       	pop	r14
    3ce2:	df 90       	pop	r13
    3ce4:	cf 90       	pop	r12
    3ce6:	0c 94 dd 1d 	jmp	0x3bba	; 0x3bba <TTapeController::StartRecordMode()>
    3cea:	fe 01       	movw	r30, r28
    3cec:	e2 54       	subi	r30, 0x42	; 66
    3cee:	ff 4f       	sbci	r31, 0xFF	; 255
    3cf0:	80 81       	ld	r24, Z
    3cf2:	91 81       	ldd	r25, Z+1	; 0x01
    3cf4:	89 2b       	or	r24, r25
    3cf6:	21 f4       	brne	.+8      	; 0x3d00 <TTapeController::Stop()+0x6a>
    3cf8:	8b 81       	ldd	r24, Y+3	; 0x03
    3cfa:	88 23       	and	r24, r24
    3cfc:	09 f4       	brne	.+2      	; 0x3d00 <TTapeController::Stop()+0x6a>
    3cfe:	75 c0       	rjmp	.+234    	; 0x3dea <TTapeController::Stop()+0x154>
    3d00:	ce 01       	movw	r24, r28
    3d02:	0e 94 b3 19 	call	0x3366	; 0x3366 <TTapeController::GetState()>
    3d06:	61 e0       	ldi	r22, 0x01	; 1
    3d08:	ce 01       	movw	r24, r28
    3d0a:	0e 94 fd 17 	call	0x2ffa	; 0x2ffa <TTapeController::SetMute(bool)>
    3d0e:	61 e0       	ldi	r22, 0x01	; 1
    3d10:	88 8d       	ldd	r24, Y+24	; 0x18
    3d12:	0e 94 54 35 	call	0x6aa8	; 0x6aa8 <digitalWrite>
    3d16:	61 e0       	ldi	r22, 0x01	; 1
    3d18:	8e 89       	ldd	r24, Y+22	; 0x16
    3d1a:	0e 94 54 35 	call	0x6aa8	; 0x6aa8 <digitalWrite>
    3d1e:	60 e0       	ldi	r22, 0x00	; 0
    3d20:	8a 89       	ldd	r24, Y+18	; 0x12
    3d22:	0e 94 54 35 	call	0x6aa8	; 0x6aa8 <digitalWrite>
    3d26:	60 e0       	ldi	r22, 0x00	; 0
    3d28:	8c 89       	ldd	r24, Y+20	; 0x14
    3d2a:	0e 94 54 35 	call	0x6aa8	; 0x6aa8 <digitalWrite>
    3d2e:	8e 01       	movw	r16, r28
    3d30:	0a 54       	subi	r16, 0x4A	; 74
    3d32:	1f 4f       	sbci	r17, 0xFF	; 255
    3d34:	f8 01       	movw	r30, r16
    3d36:	80 81       	ld	r24, Z
    3d38:	88 23       	and	r24, r24
    3d3a:	19 f0       	breq	.+6      	; 0x3d42 <TTapeController::Stop()+0xac>
    3d3c:	ce 01       	movw	r24, r28
    3d3e:	0e 94 67 15 	call	0x2ace	; 0x2ace <TTapeController::StartCapstan()>
    3d42:	fe 01       	movw	r30, r28
    3d44:	e7 57       	subi	r30, 0x77	; 119
    3d46:	ff 4f       	sbci	r31, 0xFF	; 255
    3d48:	80 81       	ld	r24, Z
    3d4a:	88 23       	and	r24, r24
    3d4c:	19 f0       	breq	.+6      	; 0x3d54 <TTapeController::Stop()+0xbe>
    3d4e:	ce 01       	movw	r24, r28
    3d50:	0e 94 42 18 	call	0x3084	; 0x3084 <TTapeController::PushSlideServo()>
    3d54:	8c 81       	ldd	r24, Y+4	; 0x04
    3d56:	9d 81       	ldd	r25, Y+5	; 0x05
    3d58:	9e 01       	movw	r18, r28
    3d5a:	22 54       	subi	r18, 0x42	; 66
    3d5c:	3f 4f       	sbci	r19, 0xFF	; 255
    3d5e:	79 01       	movw	r14, r18
    3d60:	18 16       	cp	r1, r24
    3d62:	19 06       	cpc	r1, r25
    3d64:	8c f4       	brge	.+34     	; 0x3d88 <TTapeController::Stop()+0xf2>
    3d66:	f9 01       	movw	r30, r18
    3d68:	20 81       	ld	r18, Z
    3d6a:	31 81       	ldd	r19, Z+1	; 0x01
    3d6c:	23 2b       	or	r18, r19
    3d6e:	61 f0       	breq	.+24     	; 0x3d88 <TTapeController::Stop()+0xf2>
    3d70:	2a e0       	ldi	r18, 0x0A	; 10
    3d72:	28 9f       	mul	r18, r24
    3d74:	b0 01       	movw	r22, r0
    3d76:	29 9f       	mul	r18, r25
    3d78:	70 0d       	add	r23, r0
    3d7a:	11 24       	eor	r1, r1
    3d7c:	07 2e       	mov	r0, r23
    3d7e:	00 0c       	add	r0, r0
    3d80:	88 0b       	sbc	r24, r24
    3d82:	99 0b       	sbc	r25, r25
    3d84:	0e 94 75 34 	call	0x68ea	; 0x68ea <delay>
    3d88:	ce 01       	movw	r24, r28
    3d8a:	0e 94 7d 15 	call	0x2afa	; 0x2afa <TTapeController::StopCapstan()>
    3d8e:	88 a1       	ldd	r24, Y+32	; 0x20
    3d90:	99 a1       	ldd	r25, Y+33	; 0x21
    3d92:	0e 94 c6 0b 	call	0x178c	; 0x178c <TDisplay::Stop()>
    3d96:	f6 01       	movw	r30, r12
    3d98:	10 82       	st	Z, r1
    3d9a:	f7 01       	movw	r30, r14
    3d9c:	11 82       	std	Z+1, r1	; 0x01
    3d9e:	10 82       	st	Z, r1
    3da0:	1b 82       	std	Y+3, r1	; 0x03
    3da2:	fe 01       	movw	r30, r28
    3da4:	ea 57       	subi	r30, 0x7A	; 122
    3da6:	ff 4f       	sbci	r31, 0xFF	; 255
    3da8:	10 82       	st	Z, r1
    3daa:	1d a6       	std	Y+45, r1	; 0x2d
    3dac:	1c a6       	std	Y+44, r1	; 0x2c
    3dae:	f8 01       	movw	r30, r16
    3db0:	10 82       	st	Z, r1
    3db2:	fe 01       	movw	r30, r28
    3db4:	ee 57       	subi	r30, 0x7E	; 126
    3db6:	ff 4f       	sbci	r31, 0xFF	; 255
    3db8:	10 82       	st	Z, r1
    3dba:	b8 96       	adiw	r30, 0x28	; 40
    3dbc:	10 82       	st	Z, r1
    3dbe:	11 82       	std	Z+1, r1	; 0x01
    3dc0:	12 82       	std	Z+2, r1	; 0x02
    3dc2:	13 82       	std	Z+3, r1	; 0x03
    3dc4:	b7 97       	sbiw	r30, 0x27	; 39
    3dc6:	10 82       	st	Z, r1
    3dc8:	66 e9       	ldi	r22, 0x96	; 150
    3dca:	70 e0       	ldi	r23, 0x00	; 0
    3dcc:	80 e0       	ldi	r24, 0x00	; 0
    3dce:	90 e0       	ldi	r25, 0x00	; 0
    3dd0:	0e 94 75 34 	call	0x68ea	; 0x68ea <delay>
    3dd4:	ce 01       	movw	r24, r28
    3dd6:	df 91       	pop	r29
    3dd8:	cf 91       	pop	r28
    3dda:	1f 91       	pop	r17
    3ddc:	0f 91       	pop	r16
    3dde:	ff 90       	pop	r15
    3de0:	ef 90       	pop	r14
    3de2:	df 90       	pop	r13
    3de4:	cf 90       	pop	r12
    3de6:	0c 94 b3 19 	jmp	0x3366	; 0x3366 <TTapeController::GetState()>
    3dea:	df 91       	pop	r29
    3dec:	cf 91       	pop	r28
    3dee:	1f 91       	pop	r17
    3df0:	0f 91       	pop	r16
    3df2:	ff 90       	pop	r15
    3df4:	ef 90       	pop	r14
    3df6:	df 90       	pop	r13
    3df8:	cf 90       	pop	r12
    3dfa:	08 95       	ret

00003dfc <TTapeController::Reset()>:
_ZN15TTapeController5ResetEv():
    3dfc:	fc 01       	movw	r30, r24
    3dfe:	eb 54       	subi	r30, 0x4B	; 75
    3e00:	ff 4f       	sbci	r31, 0xFF	; 255
    3e02:	20 81       	ld	r18, Z
    3e04:	21 11       	cpse	r18, r1
    3e06:	05 c0       	rjmp	.+10     	; 0x3e12 <TTapeController::Reset()+0x16>
    3e08:	39 96       	adiw	r30, 0x09	; 9
    3e0a:	20 81       	ld	r18, Z
    3e0c:	31 81       	ldd	r19, Z+1	; 0x01
    3e0e:	23 2b       	or	r18, r19
    3e10:	11 f0       	breq	.+4      	; 0x3e16 <TTapeController::Reset()+0x1a>
    3e12:	0c 94 4b 1e 	jmp	0x3c96	; 0x3c96 <TTapeController::Stop()>
    3e16:	08 95       	ret

00003e18 <TTapeController::WindLeft()>:
_ZN15TTapeController8WindLeftEv():
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:364
/************************************************************************
 * 
 * 
 * *********************************************************************/
void TTapeController::WindLeft() 
{
    3e18:	ef 92       	push	r14
    3e1a:	ff 92       	push	r15
    3e1c:	0f 93       	push	r16
    3e1e:	1f 93       	push	r17
    3e20:	cf 93       	push	r28
    3e22:	df 93       	push	r29
    3e24:	ec 01       	movw	r28, r24
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:366
    #ifdef DEBUG
        Serial.println(":WindLeft()");
    3e26:	68 ef       	ldi	r22, 0xF8	; 248
    3e28:	74 e0       	ldi	r23, 0x04	; 4
    3e2a:	82 ed       	ldi	r24, 0xD2	; 210
    3e2c:	9a e0       	ldi	r25, 0x0A	; 10
    3e2e:	0e 94 e9 37 	call	0x6fd2	; 0x6fd2 <Print::println(char const*)>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:368
    #endif
    if (paused) return;
    3e32:	fe 01       	movw	r30, r28
    3e34:	ea 54       	subi	r30, 0x4A	; 74
    3e36:	ff 4f       	sbci	r31, 0xFF	; 255
    3e38:	80 81       	ld	r24, Z
    3e3a:	81 11       	cpse	r24, r1
    3e3c:	47 c0       	rjmp	.+142    	; 0x3ecc <TTapeController::WindLeft()+0xb4>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:369
    if (AutoRestart) return;
    3e3e:	8a 81       	ldd	r24, Y+2	; 0x02
    3e40:	81 11       	cpse	r24, r1
    3e42:	44 c0       	rjmp	.+136    	; 0x3ecc <TTapeController::WindLeft()+0xb4>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:371

    if (FastWinding != fwNone) 
    3e44:	8e 01       	movw	r16, r28
    3e46:	02 54       	subi	r16, 0x42	; 66
    3e48:	1f 4f       	sbci	r17, 0xFF	; 255
    3e4a:	f8 01       	movw	r30, r16
    3e4c:	80 81       	ld	r24, Z
    3e4e:	91 81       	ldd	r25, Z+1	; 0x01
    3e50:	9e 01       	movw	r18, r28
    3e52:	2e 54       	subi	r18, 0x4E	; 78
    3e54:	3f 4f       	sbci	r19, 0xFF	; 255
    3e56:	79 01       	movw	r14, r18
    3e58:	89 2b       	or	r24, r25
    3e5a:	71 f5       	brne	.+92     	; 0x3eb8 <TTapeController::WindLeft()+0xa0>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:376
    {
        if (digitalRead(SET_WIND_LEFT) == LOW && direction < 0) return;
        
    }
    AutoRestart = playing;
    3e5c:	fe 01       	movw	r30, r28
    3e5e:	eb 54       	subi	r30, 0x4B	; 75
    3e60:	ff 4f       	sbci	r31, 0xFF	; 255
    3e62:	80 81       	ld	r24, Z
    3e64:	8a 83       	std	Y+2, r24	; 0x02
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:378

    Stop();
    3e66:	ce 01       	movw	r24, r28
    3e68:	0e 94 4b 1e 	call	0x3c96	; 0x3c96 <TTapeController::Stop()>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:379
    delay(WAIT_BEFORE_FAST_WIND);
    3e6c:	6c 85       	ldd	r22, Y+12	; 0x0c
    3e6e:	7d 85       	ldd	r23, Y+13	; 0x0d
    3e70:	07 2e       	mov	r0, r23
    3e72:	00 0c       	add	r0, r0
    3e74:	88 0b       	sbc	r24, r24
    3e76:	99 0b       	sbc	r25, r25
    3e78:	0e 94 75 34 	call	0x68ea	; 0x68ea <delay>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:380
    GetState();
    3e7c:	ce 01       	movw	r24, r28
    3e7e:	0e 94 b3 19 	call	0x3366	; 0x3366 <TTapeController::GetState()>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:382

    IgnoreStateTapeReader = ms + 4000;
    3e82:	fe 01       	movw	r30, r28
    3e84:	e6 55       	subi	r30, 0x56	; 86
    3e86:	ff 4f       	sbci	r31, 0xFF	; 255
    3e88:	de 01       	movw	r26, r28
    3e8a:	a2 55       	subi	r26, 0x52	; 82
    3e8c:	bf 4f       	sbci	r27, 0xFF	; 255
    3e8e:	8d 91       	ld	r24, X+
    3e90:	9d 91       	ld	r25, X+
    3e92:	0d 90       	ld	r0, X+
    3e94:	bc 91       	ld	r27, X
    3e96:	a0 2d       	mov	r26, r0
    3e98:	80 56       	subi	r24, 0x60	; 96
    3e9a:	90 4f       	sbci	r25, 0xF0	; 240
    3e9c:	af 4f       	sbci	r26, 0xFF	; 255
    3e9e:	bf 4f       	sbci	r27, 0xFF	; 255
    3ea0:	80 83       	st	Z, r24
    3ea2:	91 83       	std	Z+1, r25	; 0x01
    3ea4:	a2 83       	std	Z+2, r26	; 0x02
    3ea6:	b3 83       	std	Z+3, r27	; 0x03
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:383
    if (AutoRestart && !SearchTrack) digitalWrite(SET_MUTE,LOW);
    3ea8:	8a 81       	ldd	r24, Y+2	; 0x02
    3eaa:	81 11       	cpse	r24, r1
    3eac:	16 c0       	rjmp	.+44     	; 0x3eda <TTapeController::WindLeft()+0xc2>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:384
    else SetMute(true);
    3eae:	61 e0       	ldi	r22, 0x01	; 1
    3eb0:	ce 01       	movw	r24, r28
    3eb2:	0e 94 fd 17 	call	0x2ffa	; 0x2ffa <TTapeController::SetMute(bool)>
    3eb6:	18 c0       	rjmp	.+48     	; 0x3ee8 <TTapeController::WindLeft()+0xd0>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:373
    if (paused) return;
    if (AutoRestart) return;

    if (FastWinding != fwNone) 
    {
        if (digitalRead(SET_WIND_LEFT) == LOW && direction < 0) return;
    3eb8:	8a 89       	ldd	r24, Y+18	; 0x12
    3eba:	0e 94 82 35 	call	0x6b04	; 0x6b04 <digitalRead>
    3ebe:	89 2b       	or	r24, r25
    3ec0:	69 f6       	brne	.-102    	; 0x3e5c <TTapeController::WindLeft()+0x44>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:373 (discriminator 1)
    3ec2:	f7 01       	movw	r30, r14
    3ec4:	80 81       	ld	r24, Z
    3ec6:	91 81       	ldd	r25, Z+1	; 0x01
    3ec8:	97 ff       	sbrs	r25, 7
    3eca:	c8 cf       	rjmp	.-112    	; 0x3e5c <TTapeController::WindLeft()+0x44>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:422
    }  

    SearchTrack = false;
    DesiredCapstanState = true;
    
}
    3ecc:	df 91       	pop	r29
    3ece:	cf 91       	pop	r28
    3ed0:	1f 91       	pop	r17
    3ed2:	0f 91       	pop	r16
    3ed4:	ff 90       	pop	r15
    3ed6:	ef 90       	pop	r14
    3ed8:	08 95       	ret
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:383
    Stop();
    delay(WAIT_BEFORE_FAST_WIND);
    GetState();

    IgnoreStateTapeReader = ms + 4000;
    if (AutoRestart && !SearchTrack) digitalWrite(SET_MUTE,LOW);
    3eda:	8b 81       	ldd	r24, Y+3	; 0x03
    3edc:	81 11       	cpse	r24, r1
    3ede:	e7 cf       	rjmp	.-50     	; 0x3eae <TTapeController::WindLeft()+0x96>
    3ee0:	60 e0       	ldi	r22, 0x00	; 0
    3ee2:	8a 8d       	ldd	r24, Y+26	; 0x1a
    3ee4:	0e 94 54 35 	call	0x6aa8	; 0x6aa8 <digitalWrite>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:388
    else SetMute(true);

 //   if (!AutoRestart) SetMute(true);
 // else digitalWrite(SET_MUTE,LOW);
    StartCapstan(); 
    3ee8:	ce 01       	movw	r24, r28
    3eea:	0e 94 67 15 	call	0x2ace	; 0x2ace <TTapeController::StartCapstan()>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:389
    digitalWrite(SET_FAST_WIND_RELAY, LOW);
    3eee:	60 e0       	ldi	r22, 0x00	; 0
    3ef0:	88 8d       	ldd	r24, Y+24	; 0x18
    3ef2:	0e 94 54 35 	call	0x6aa8	; 0x6aa8 <digitalWrite>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:390
    digitalWrite(SET_FAST_WIND, HIGH);
    3ef6:	61 e0       	ldi	r22, 0x01	; 1
    3ef8:	8e 89       	ldd	r24, Y+22	; 0x16
    3efa:	0e 94 54 35 	call	0x6aa8	; 0x6aa8 <digitalWrite>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:391
    delay(100); 
    3efe:	64 e6       	ldi	r22, 0x64	; 100
    3f00:	70 e0       	ldi	r23, 0x00	; 0
    3f02:	80 e0       	ldi	r24, 0x00	; 0
    3f04:	90 e0       	ldi	r25, 0x00	; 0
    3f06:	0e 94 75 34 	call	0x68ea	; 0x68ea <delay>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:392
    counter->WakeUp();
    3f0a:	8c a1       	ldd	r24, Y+36	; 0x24
    3f0c:	9d a1       	ldd	r25, Y+37	; 0x25
    3f0e:	0e 94 ad 0a 	call	0x155a	; 0x155a <TCounter::WakeUp()>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:393
    if (direction < 0) {
    3f12:	f7 01       	movw	r30, r14
    3f14:	80 81       	ld	r24, Z
    3f16:	91 81       	ldd	r25, Z+1	; 0x01
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:394
        digitalWrite(SET_WIND_LEFT, LOW);  
    3f18:	60 e0       	ldi	r22, 0x00	; 0
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:393
    StartCapstan(); 
    digitalWrite(SET_FAST_WIND_RELAY, LOW);
    digitalWrite(SET_FAST_WIND, HIGH);
    delay(100); 
    counter->WakeUp();
    if (direction < 0) {
    3f1a:	97 ff       	sbrs	r25, 7
    3f1c:	40 c0       	rjmp	.+128    	; 0x3f9e <TTapeController::WindLeft()+0x186>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:394
        digitalWrite(SET_WIND_LEFT, LOW);  
    3f1e:	8a 89       	ldd	r24, Y+18	; 0x12
    3f20:	0e 94 54 35 	call	0x6aa8	; 0x6aa8 <digitalWrite>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:395
        digitalWrite(SET_WIND_RIGHT, HIGH);  
    3f24:	61 e0       	ldi	r22, 0x01	; 1
    3f26:	8c 89       	ldd	r24, Y+20	; 0x14
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:399
    }
    else {
        digitalWrite(SET_WIND_RIGHT, LOW);  
        digitalWrite(SET_WIND_LEFT, HIGH);  
    3f28:	0e 94 54 35 	call	0x6aa8	; 0x6aa8 <digitalWrite>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:401
    }
    delay(50);
    3f2c:	62 e3       	ldi	r22, 0x32	; 50
    3f2e:	70 e0       	ldi	r23, 0x00	; 0
    3f30:	80 e0       	ldi	r24, 0x00	; 0
    3f32:	90 e0       	ldi	r25, 0x00	; 0
    3f34:	0e 94 75 34 	call	0x68ea	; 0x68ea <delay>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:402
    PushSlideServo();
    3f38:	ce 01       	movw	r24, r28
    3f3a:	0e 94 42 18 	call	0x3084	; 0x3084 <TTapeController::PushSlideServo()>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:403
    delay(100);
    3f3e:	64 e6       	ldi	r22, 0x64	; 100
    3f40:	70 e0       	ldi	r23, 0x00	; 0
    3f42:	80 e0       	ldi	r24, 0x00	; 0
    3f44:	90 e0       	ldi	r25, 0x00	; 0
    3f46:	0e 94 75 34 	call	0x68ea	; 0x68ea <delay>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:404
    digitalWrite(SET_FAST_WIND, LOW);  
    3f4a:	60 e0       	ldi	r22, 0x00	; 0
    3f4c:	8e 89       	ldd	r24, Y+22	; 0x16
    3f4e:	0e 94 54 35 	call	0x6aa8	; 0x6aa8 <digitalWrite>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:405
    counter->FastWind(-1);
    3f52:	6f ef       	ldi	r22, 0xFF	; 255
    3f54:	7f ef       	ldi	r23, 0xFF	; 255
    3f56:	8c a1       	ldd	r24, Y+36	; 0x24
    3f58:	9d a1       	ldd	r25, Y+37	; 0x25
    3f5a:	0e 94 2a 0a 	call	0x1454	; 0x1454 <TCounter::FastWind(int)>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:406
    FastWinding = fwRewind;
    3f5e:	82 e0       	ldi	r24, 0x02	; 2
    3f60:	90 e0       	ldi	r25, 0x00	; 0
    3f62:	f8 01       	movw	r30, r16
    3f64:	91 83       	std	Z+1, r25	; 0x01
    3f66:	80 83       	st	Z, r24
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:407
    if (AutoRestart) {
    3f68:	8a 81       	ldd	r24, Y+2	; 0x02
    3f6a:	88 23       	and	r24, r24
    3f6c:	21 f0       	breq	.+8      	; 0x3f76 <TTapeController::WindLeft()+0x15e>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:408
        lcd->Play();
    3f6e:	88 a1       	ldd	r24, Y+32	; 0x20
    3f70:	99 a1       	ldd	r25, Y+33	; 0x21
    3f72:	0e 94 89 0b 	call	0x1712	; 0x1712 <TDisplay::Play()>
    3f76:	88 a1       	ldd	r24, Y+32	; 0x20
    3f78:	99 a1       	ldd	r25, Y+33	; 0x21
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:410
    }   
    if (direction < 0) {
    3f7a:	f7 01       	movw	r30, r14
    3f7c:	20 81       	ld	r18, Z
    3f7e:	31 81       	ldd	r19, Z+1	; 0x01
    3f80:	37 ff       	sbrs	r19, 7
    3f82:	13 c0       	rjmp	.+38     	; 0x3faa <TTapeController::WindLeft()+0x192>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:411
        lcd->WindLeft();
    3f84:	0e 94 40 0c 	call	0x1880	; 0x1880 <TDisplay::WindLeft()>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:412
        FastWinding = fwForward; 
    3f88:	81 e0       	ldi	r24, 0x01	; 1
    3f8a:	90 e0       	ldi	r25, 0x00	; 0
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:416
    }
    else {
        lcd->WindRight();
        FastWinding = fwRewind; 
    3f8c:	f8 01       	movw	r30, r16
    3f8e:	91 83       	std	Z+1, r25	; 0x01
    3f90:	80 83       	st	Z, r24
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:419
    }  

    SearchTrack = false;
    3f92:	1b 82       	std	Y+3, r1	; 0x03
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:420
    DesiredCapstanState = true;
    3f94:	cd 57       	subi	r28, 0x7D	; 125
    3f96:	df 4f       	sbci	r29, 0xFF	; 255
    3f98:	81 e0       	ldi	r24, 0x01	; 1
    3f9a:	88 83       	st	Y, r24
    3f9c:	97 cf       	rjmp	.-210    	; 0x3ecc <TTapeController::WindLeft()+0xb4>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:398
    if (direction < 0) {
        digitalWrite(SET_WIND_LEFT, LOW);  
        digitalWrite(SET_WIND_RIGHT, HIGH);  
    }
    else {
        digitalWrite(SET_WIND_RIGHT, LOW);  
    3f9e:	8c 89       	ldd	r24, Y+20	; 0x14
    3fa0:	0e 94 54 35 	call	0x6aa8	; 0x6aa8 <digitalWrite>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:399
        digitalWrite(SET_WIND_LEFT, HIGH);  
    3fa4:	61 e0       	ldi	r22, 0x01	; 1
    3fa6:	8a 89       	ldd	r24, Y+18	; 0x12
    3fa8:	bf cf       	rjmp	.-130    	; 0x3f28 <TTapeController::WindLeft()+0x110>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:415
    if (direction < 0) {
        lcd->WindLeft();
        FastWinding = fwForward; 
    }
    else {
        lcd->WindRight();
    3faa:	0e 94 6f 0c 	call	0x18de	; 0x18de <TDisplay::WindRight()>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:416
        FastWinding = fwRewind; 
    3fae:	82 e0       	ldi	r24, 0x02	; 2
    3fb0:	90 e0       	ldi	r25, 0x00	; 0
    3fb2:	ec cf       	rjmp	.-40     	; 0x3f8c <TTapeController::WindLeft()+0x174>

00003fb4 <TTapeController::StartProgramm()>:
_ZN15TTapeController13StartProgrammEv():
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:546
/************************************************************************
 * StartProgramm
 * Starts the playback of a programm
 * *********************************************************************/
void TTapeController::StartProgramm()
{
    3fb4:	0f 93       	push	r16
    3fb6:	1f 93       	push	r17
    3fb8:	cf 93       	push	r28
    3fba:	df 93       	push	r29
    3fbc:	ec 01       	movw	r28, r24
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:548
    #ifdef DEBUG
        Serial.println(":StartProgramm()");
    3fbe:	64 e0       	ldi	r22, 0x04	; 4
    3fc0:	75 e0       	ldi	r23, 0x05	; 5
    3fc2:	82 ed       	ldi	r24, 0xD2	; 210
    3fc4:	9a e0       	ldi	r25, 0x0A	; 10
    3fc6:	0e 94 e9 37 	call	0x6fd2	; 0x6fd2 <Print::println(char const*)>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:550
    #endif
    Programming = false;
    3fca:	19 82       	std	Y+1, r1	; 0x01
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:551
    ReverseMode = rmBothSides;
    3fcc:	8e 01       	movw	r16, r28
    3fce:	06 54       	subi	r16, 0x46	; 70
    3fd0:	1f 4f       	sbci	r17, 0xFF	; 255
    3fd2:	82 e0       	ldi	r24, 0x02	; 2
    3fd4:	90 e0       	ldi	r25, 0x00	; 0
    3fd6:	f8 01       	movw	r30, r16
    3fd8:	91 83       	std	Z+1, r25	; 0x01
    3fda:	80 83       	st	Z, r24
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:552
    RepeatSecondSide = false;
    3fdc:	31 97       	sbiw	r30, 0x01	; 1
    3fde:	10 82       	st	Z, r1
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:553
    PlayProgramm = true;
    3fe0:	81 e0       	ldi	r24, 0x01	; 1
    3fe2:	88 83       	st	Y, r24
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:554
    ProgrammPosition = 0;
    3fe4:	1b a6       	std	Y+43, r1	; 0x2b
    3fe6:	1a a6       	std	Y+42, r1	; 0x2a
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:555
    TrackNumber = 0;
    3fe8:	19 a6       	std	Y+41, r1	; 0x29
    3fea:	18 a6       	std	Y+40, r1	; 0x28
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:556
    PrepareForProgramm = true;
    3fec:	b7 97       	sbiw	r30, 0x27	; 39
    3fee:	80 83       	st	Z, r24
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:559

    // rewind the tape
    if (direction < 0 ) {WindLeft(); }
    3ff0:	b0 96       	adiw	r30, 0x20	; 32
    3ff2:	80 81       	ld	r24, Z
    3ff4:	91 81       	ldd	r25, Z+1	; 0x01
    3ff6:	97 ff       	sbrs	r25, 7
    3ff8:	14 c0       	rjmp	.+40     	; 0x4022 <TTapeController::StartProgramm()+0x6e>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:559 (discriminator 1)
    3ffa:	ce 01       	movw	r24, r28
    3ffc:	0e 94 0c 1f 	call	0x3e18	; 0x3e18 <TTapeController::WindLeft()>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:562
    else {WindRight();}

    lcd->ReverseMode((int)ReverseMode);
    4000:	f8 01       	movw	r30, r16
    4002:	60 81       	ld	r22, Z
    4004:	71 81       	ldd	r23, Z+1	; 0x01
    4006:	88 a1       	ldd	r24, Y+32	; 0x20
    4008:	99 a1       	ldd	r25, Y+33	; 0x21
    400a:	0e 94 72 0d 	call	0x1ae4	; 0x1ae4 <TDisplay::ReverseMode(int)>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:563
    lcd->ShowDigit(-1);
    400e:	6f ef       	ldi	r22, 0xFF	; 255
    4010:	7f ef       	ldi	r23, 0xFF	; 255
    4012:	88 a1       	ldd	r24, Y+32	; 0x20
    4014:	99 a1       	ldd	r25, Y+33	; 0x21
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:564
}
    4016:	df 91       	pop	r29
    4018:	cf 91       	pop	r28
    401a:	1f 91       	pop	r17
    401c:	0f 91       	pop	r16
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:563
    // rewind the tape
    if (direction < 0 ) {WindLeft(); }
    else {WindRight();}

    lcd->ReverseMode((int)ReverseMode);
    lcd->ShowDigit(-1);
    401e:	0c 94 0d 0b 	jmp	0x161a	; 0x161a <TDisplay::ShowDigit(int)>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:560
    TrackNumber = 0;
    PrepareForProgramm = true;

    // rewind the tape
    if (direction < 0 ) {WindLeft(); }
    else {WindRight();}
    4022:	ce 01       	movw	r24, r28
    4024:	0e 94 e2 1a 	call	0x35c4	; 0x35c4 <TTapeController::WindRight()>
    4028:	eb cf       	rjmp	.-42     	; 0x4000 <TTapeController::StartProgramm()+0x4c>

0000402a <TTapeController::NextTrack()>:
_ZN15TTapeController9NextTrackEv():
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:785
/************************************************************************
 * NextTrack
 * Music search in current direction
 * *********************************************************************/
void TTapeController::NextTrack() 
{
    402a:	ff 92       	push	r15
    402c:	0f 93       	push	r16
    402e:	1f 93       	push	r17
    4030:	cf 93       	push	r28
    4032:	df 93       	push	r29
    4034:	ec 01       	movw	r28, r24
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:787
    #ifdef DEBUG
        Serial.println(":NextTrack()");
    4036:	65 e1       	ldi	r22, 0x15	; 21
    4038:	75 e0       	ldi	r23, 0x05	; 5
    403a:	82 ed       	ldi	r24, 0xD2	; 210
    403c:	9a e0       	ldi	r25, 0x0A	; 10
    403e:	0e 94 e9 37 	call	0x6fd2	; 0x6fd2 <Print::println(char const*)>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:789
    #endif
    if ((FastWinding != fwNone && !SearchTrack) || paused) {return;}
    4042:	8e 01       	movw	r16, r28
    4044:	02 54       	subi	r16, 0x42	; 66
    4046:	1f 4f       	sbci	r17, 0xFF	; 255
    4048:	f8 01       	movw	r30, r16
    404a:	80 81       	ld	r24, Z
    404c:	91 81       	ldd	r25, Z+1	; 0x01
    404e:	89 2b       	or	r24, r25
    4050:	21 f0       	breq	.+8      	; 0x405a <TTapeController::NextTrack()+0x30>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:789 (discriminator 1)
    4052:	8b 81       	ldd	r24, Y+3	; 0x03
    4054:	88 23       	and	r24, r24
    4056:	09 f4       	brne	.+2      	; 0x405a <TTapeController::NextTrack()+0x30>
    4058:	7a c0       	rjmp	.+244    	; 0x414e <__stack+0x4f>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:789 (discriminator 3)
    405a:	fe 01       	movw	r30, r28
    405c:	ea 54       	subi	r30, 0x4A	; 74
    405e:	ff 4f       	sbci	r31, 0xFF	; 255
    4060:	80 81       	ld	r24, Z
    4062:	81 11       	cpse	r24, r1
    4064:	74 c0       	rjmp	.+232    	; 0x414e <__stack+0x4f>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:790
    if (!SearchTrack && !playing) {
    4066:	8b 81       	ldd	r24, Y+3	; 0x03
    4068:	81 11       	cpse	r24, r1
    406a:	0e c0       	rjmp	.+28     	; 0x4088 <TTapeController::NextTrack()+0x5e>
    406c:	31 97       	sbiw	r30, 0x01	; 1
    406e:	80 81       	ld	r24, Z
    4070:	81 11       	cpse	r24, r1
    4072:	23 c0       	rjmp	.+70     	; 0x40ba <TTapeController::NextTrack()+0x90>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:791
        GetTrackForProgramm(1);
    4074:	61 e0       	ldi	r22, 0x01	; 1
    4076:	70 e0       	ldi	r23, 0x00	; 0
    4078:	ce 01       	movw	r24, r28
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:830
    } 
    lcd->Play();
    lcd->BlinkPlay(true);
    lcd->ShowDigit9(SearchTrackNumber);
    lcd->WindRight();
}
    407a:	df 91       	pop	r29
    407c:	cf 91       	pop	r28
    407e:	1f 91       	pop	r17
    4080:	0f 91       	pop	r16
    4082:	ff 90       	pop	r15
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:791
    #ifdef DEBUG
        Serial.println(":NextTrack()");
    #endif
    if ((FastWinding != fwNone && !SearchTrack) || paused) {return;}
    if (!SearchTrack && !playing) {
        GetTrackForProgramm(1);
    4084:	0c 94 73 17 	jmp	0x2ee6	; 0x2ee6 <TTapeController::GetTrackForProgramm(int)>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:797
        return;
    }

    if (SearchTrack) {
        bool changeDir = false;
        if (direction > 0 ) {
    4088:	fe 01       	movw	r30, r28
    408a:	ee 54       	subi	r30, 0x4E	; 78
    408c:	ff 4f       	sbci	r31, 0xFF	; 255
    408e:	80 81       	ld	r24, Z
    4090:	91 81       	ldd	r25, Z+1	; 0x01
    4092:	18 16       	cp	r1, r24
    4094:	19 06       	cpc	r1, r25
    4096:	0c f0       	brlt	.+2      	; 0x409a <TTapeController::NextTrack()+0x70>
    4098:	4a c0       	rjmp	.+148    	; 0x412e <__stack+0x2f>
_ZN15TTapeController20AddSearchTrackNumberEi():
    409a:	ce 01       	movw	r24, r28
    409c:	0e 94 19 15 	call	0x2a32	; 0x2a32 <TTapeController::AddSearchTrackNumber(int) [clone .part.0]>
_ZN15TTapeController9NextTrackEv():
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:801
            changeDir = AddSearchTrackNumber(-1);
        }
        else {
            changeDir = AddSearchTrackNumber(1);
    40a0:	f8 2e       	mov	r15, r24
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:803
        } 
        lcd->ShowDigit9(SearchTrackNumber);
    40a2:	6c a5       	ldd	r22, Y+44	; 0x2c
    40a4:	7d a5       	ldd	r23, Y+45	; 0x2d
    40a6:	88 a1       	ldd	r24, Y+32	; 0x20
    40a8:	99 a1       	ldd	r25, Y+33	; 0x21
    40aa:	0e 94 f9 0a 	call	0x15f2	; 0x15f2 <TDisplay::ShowDigit9(int)>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:804
        if (changeDir) {
    40ae:	ff 20       	and	r15, r15
    40b0:	09 f4       	brne	.+2      	; 0x40b4 <TTapeController::NextTrack()+0x8a>
    40b2:	4d c0       	rjmp	.+154    	; 0x414e <__stack+0x4f>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:805
            FastWinding = fwNone;
    40b4:	f8 01       	movw	r30, r16
    40b6:	11 82       	std	Z+1, r1	; 0x01
    40b8:	10 82       	st	Z, r1
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:813
            return;
        }
        
    }
    
    SearchTrack = true;
    40ba:	81 e0       	ldi	r24, 0x01	; 1
    40bc:	8b 83       	std	Y+3, r24	; 0x03
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:814
    if (direction > 0 ) { WindLeft(); }
    40be:	8e 01       	movw	r16, r28
    40c0:	0e 54       	subi	r16, 0x4E	; 78
    40c2:	1f 4f       	sbci	r17, 0xFF	; 255
    40c4:	f8 01       	movw	r30, r16
    40c6:	80 81       	ld	r24, Z
    40c8:	91 81       	ldd	r25, Z+1	; 0x01
    40ca:	18 16       	cp	r1, r24
    40cc:	19 06       	cpc	r1, r25
    40ce:	ac f5       	brge	.+106    	; 0x413a <__stack+0x3b>
    40d0:	ce 01       	movw	r24, r28
    40d2:	0e 94 0c 1f 	call	0x3e18	; 0x3e18 <TTapeController::WindLeft()>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:816
    else { WindRight(); }
    digitalWrite(SET_MUTE,HIGH);
    40d6:	61 e0       	ldi	r22, 0x01	; 1
    40d8:	8a 8d       	ldd	r24, Y+26	; 0x1a
    40da:	0e 94 54 35 	call	0x6aa8	; 0x6aa8 <digitalWrite>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:817
    AutoRestart = false;
    40de:	1a 82       	std	Y+2, r1	; 0x02
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:818
    TrackFound = false;
    40e0:	fe 01       	movw	r30, r28
    40e2:	ec 57       	subi	r30, 0x7C	; 124
    40e4:	ff 4f       	sbci	r31, 0xFF	; 255
    40e6:	10 82       	st	Z, r1
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:819
    SearchTrack = true; // reseted by windleft/right
    40e8:	81 e0       	ldi	r24, 0x01	; 1
    40ea:	8b 83       	std	Y+3, r24	; 0x03
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:820
    if (direction > 0 ) {
    40ec:	f8 01       	movw	r30, r16
    40ee:	80 81       	ld	r24, Z
    40f0:	91 81       	ldd	r25, Z+1	; 0x01
    40f2:	18 16       	cp	r1, r24
    40f4:	19 06       	cpc	r1, r25
    40f6:	2c f5       	brge	.+74     	; 0x4142 <__stack+0x43>
_ZN15TTapeController20AddSearchTrackNumberEi():
    40f8:	ce 01       	movw	r24, r28
    40fa:	0e 94 19 15 	call	0x2a32	; 0x2a32 <TTapeController::AddSearchTrackNumber(int) [clone .part.0]>
_ZN15TTapeController9NextTrackEv():
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:826
        AddSearchTrackNumber(-1);
    }
    else {
        AddSearchTrackNumber(1);
    } 
    lcd->Play();
    40fe:	88 a1       	ldd	r24, Y+32	; 0x20
    4100:	99 a1       	ldd	r25, Y+33	; 0x21
    4102:	0e 94 89 0b 	call	0x1712	; 0x1712 <TDisplay::Play()>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:827
    lcd->BlinkPlay(true);
    4106:	61 e0       	ldi	r22, 0x01	; 1
    4108:	88 a1       	ldd	r24, Y+32	; 0x20
    410a:	99 a1       	ldd	r25, Y+33	; 0x21
    410c:	0e 94 ee 0a 	call	0x15dc	; 0x15dc <TDisplay::BlinkPlay(bool)>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:828
    lcd->ShowDigit9(SearchTrackNumber);
    4110:	6c a5       	ldd	r22, Y+44	; 0x2c
    4112:	7d a5       	ldd	r23, Y+45	; 0x2d
    4114:	88 a1       	ldd	r24, Y+32	; 0x20
    4116:	99 a1       	ldd	r25, Y+33	; 0x21
    4118:	0e 94 f9 0a 	call	0x15f2	; 0x15f2 <TDisplay::ShowDigit9(int)>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:829
    lcd->WindRight();
    411c:	88 a1       	ldd	r24, Y+32	; 0x20
    411e:	99 a1       	ldd	r25, Y+33	; 0x21
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:830
}
    4120:	df 91       	pop	r29
    4122:	cf 91       	pop	r28
    4124:	1f 91       	pop	r17
    4126:	0f 91       	pop	r16
    4128:	ff 90       	pop	r15
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:829
        AddSearchTrackNumber(1);
    } 
    lcd->Play();
    lcd->BlinkPlay(true);
    lcd->ShowDigit9(SearchTrackNumber);
    lcd->WindRight();
    412a:	0c 94 6f 0c 	jmp	0x18de	; 0x18de <TDisplay::WindRight()>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:801
        bool changeDir = false;
        if (direction > 0 ) {
            changeDir = AddSearchTrackNumber(-1);
        }
        else {
            changeDir = AddSearchTrackNumber(1);
    412e:	61 e0       	ldi	r22, 0x01	; 1
    4130:	70 e0       	ldi	r23, 0x00	; 0
    4132:	ce 01       	movw	r24, r28
    4134:	0e 94 57 17 	call	0x2eae	; 0x2eae <TTapeController::AddSearchTrackNumber(int)>
    4138:	b3 cf       	rjmp	.-154    	; 0x40a0 <TTapeController::NextTrack()+0x76>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:815
        
    }
    
    SearchTrack = true;
    if (direction > 0 ) { WindLeft(); }
    else { WindRight(); }
    413a:	ce 01       	movw	r24, r28
    413c:	0e 94 e2 1a 	call	0x35c4	; 0x35c4 <TTapeController::WindRight()>
    4140:	ca cf       	rjmp	.-108    	; 0x40d6 <TTapeController::NextTrack()+0xac>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:824
    SearchTrack = true; // reseted by windleft/right
    if (direction > 0 ) {
        AddSearchTrackNumber(-1);
    }
    else {
        AddSearchTrackNumber(1);
    4142:	61 e0       	ldi	r22, 0x01	; 1
    4144:	70 e0       	ldi	r23, 0x00	; 0
    4146:	ce 01       	movw	r24, r28
    4148:	0e 94 57 17 	call	0x2eae	; 0x2eae <TTapeController::AddSearchTrackNumber(int)>
    414c:	d8 cf       	rjmp	.-80     	; 0x40fe <TTapeController::NextTrack()+0xd4>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:830
    } 
    lcd->Play();
    lcd->BlinkPlay(true);
    lcd->ShowDigit9(SearchTrackNumber);
    lcd->WindRight();
}
    414e:	df 91       	pop	r29
    4150:	cf 91       	pop	r28
    4152:	1f 91       	pop	r17
    4154:	0f 91       	pop	r16
    4156:	ff 90       	pop	r15
    4158:	08 95       	ret

0000415a <TTapeController::PreviousTrack()>:
_ZN15TTapeController13PreviousTrackEv():
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:839
/************************************************************************
 * PreviousTrack
 * Music search in previous direction
 * *********************************************************************/
void TTapeController::PreviousTrack() 
{
    415a:	ff 92       	push	r15
    415c:	0f 93       	push	r16
    415e:	1f 93       	push	r17
    4160:	cf 93       	push	r28
    4162:	df 93       	push	r29
    4164:	ec 01       	movw	r28, r24
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:841
    #ifdef DEBUG
        Serial.println(":PreviousTrack()");
    4166:	62 e2       	ldi	r22, 0x22	; 34
    4168:	75 e0       	ldi	r23, 0x05	; 5
    416a:	82 ed       	ldi	r24, 0xD2	; 210
    416c:	9a e0       	ldi	r25, 0x0A	; 10
    416e:	0e 94 e9 37 	call	0x6fd2	; 0x6fd2 <Print::println(char const*)>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:843
    #endif
    if ((FastWinding != fwNone && !SearchTrack) || paused) {return;}
    4172:	8e 01       	movw	r16, r28
    4174:	02 54       	subi	r16, 0x42	; 66
    4176:	1f 4f       	sbci	r17, 0xFF	; 255
    4178:	f8 01       	movw	r30, r16
    417a:	80 81       	ld	r24, Z
    417c:	91 81       	ldd	r25, Z+1	; 0x01
    417e:	89 2b       	or	r24, r25
    4180:	21 f0       	breq	.+8      	; 0x418a <TTapeController::PreviousTrack()+0x30>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:843 (discriminator 1)
    4182:	8b 81       	ldd	r24, Y+3	; 0x03
    4184:	88 23       	and	r24, r24
    4186:	09 f4       	brne	.+2      	; 0x418a <TTapeController::PreviousTrack()+0x30>
    4188:	76 c0       	rjmp	.+236    	; 0x4276 <TTapeController::PreviousTrack()+0x11c>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:843 (discriminator 3)
    418a:	fe 01       	movw	r30, r28
    418c:	ea 54       	subi	r30, 0x4A	; 74
    418e:	ff 4f       	sbci	r31, 0xFF	; 255
    4190:	80 81       	ld	r24, Z
    4192:	81 11       	cpse	r24, r1
    4194:	70 c0       	rjmp	.+224    	; 0x4276 <TTapeController::PreviousTrack()+0x11c>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:844
    if (!SearchTrack && !playing) {
    4196:	8b 81       	ldd	r24, Y+3	; 0x03
    4198:	81 11       	cpse	r24, r1
    419a:	0e c0       	rjmp	.+28     	; 0x41b8 <TTapeController::PreviousTrack()+0x5e>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:844 (discriminator 1)
    419c:	31 97       	sbiw	r30, 0x01	; 1
    419e:	80 81       	ld	r24, Z
    41a0:	81 11       	cpse	r24, r1
    41a2:	21 c0       	rjmp	.+66     	; 0x41e6 <TTapeController::PreviousTrack()+0x8c>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:845
        GetTrackForProgramm(-1);
    41a4:	6f ef       	ldi	r22, 0xFF	; 255
    41a6:	7f ef       	ldi	r23, 0xFF	; 255
    41a8:	ce 01       	movw	r24, r28
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:885
    } 
    lcd->Play();
    lcd->BlinkPlay(true);
    lcd->ShowDigit9(SearchTrackNumber);
    lcd->WindLeft();
}
    41aa:	df 91       	pop	r29
    41ac:	cf 91       	pop	r28
    41ae:	1f 91       	pop	r17
    41b0:	0f 91       	pop	r16
    41b2:	ff 90       	pop	r15
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:845
    #ifdef DEBUG
        Serial.println(":PreviousTrack()");
    #endif
    if ((FastWinding != fwNone && !SearchTrack) || paused) {return;}
    if (!SearchTrack && !playing) {
        GetTrackForProgramm(-1);
    41b4:	0c 94 73 17 	jmp	0x2ee6	; 0x2ee6 <TTapeController::GetTrackForProgramm(int)>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:851
        return;
    }
   
    if (SearchTrack) {
        bool changeDir = false;
        if (direction < 0 ) {
    41b8:	fe 01       	movw	r30, r28
    41ba:	ee 54       	subi	r30, 0x4E	; 78
    41bc:	ff 4f       	sbci	r31, 0xFF	; 255
    41be:	80 81       	ld	r24, Z
    41c0:	91 81       	ldd	r25, Z+1	; 0x01
    41c2:	97 ff       	sbrs	r25, 7
    41c4:	48 c0       	rjmp	.+144    	; 0x4256 <TTapeController::PreviousTrack()+0xfc>
_ZN15TTapeController20AddSearchTrackNumberEi():
    41c6:	ce 01       	movw	r24, r28
    41c8:	0e 94 19 15 	call	0x2a32	; 0x2a32 <TTapeController::AddSearchTrackNumber(int) [clone .part.0]>
_ZN15TTapeController13PreviousTrackEv():
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:855
            changeDir = AddSearchTrackNumber(-1);
        }
        else {
            changeDir = AddSearchTrackNumber(1);
    41cc:	f8 2e       	mov	r15, r24
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:857
        } 
        lcd->ShowDigit9(SearchTrackNumber);
    41ce:	6c a5       	ldd	r22, Y+44	; 0x2c
    41d0:	7d a5       	ldd	r23, Y+45	; 0x2d
    41d2:	88 a1       	ldd	r24, Y+32	; 0x20
    41d4:	99 a1       	ldd	r25, Y+33	; 0x21
    41d6:	0e 94 f9 0a 	call	0x15f2	; 0x15f2 <TDisplay::ShowDigit9(int)>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:858
        if (changeDir) {
    41da:	ff 20       	and	r15, r15
    41dc:	09 f4       	brne	.+2      	; 0x41e0 <TTapeController::PreviousTrack()+0x86>
    41de:	4b c0       	rjmp	.+150    	; 0x4276 <TTapeController::PreviousTrack()+0x11c>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:859
            FastWinding = fwNone;
    41e0:	f8 01       	movw	r30, r16
    41e2:	11 82       	std	Z+1, r1	; 0x01
    41e4:	10 82       	st	Z, r1
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:868
        }
        
        
    }
    
    SearchTrack = true;
    41e6:	81 e0       	ldi	r24, 0x01	; 1
    41e8:	8b 83       	std	Y+3, r24	; 0x03
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:869
    if (direction < 0 ) { WindLeft(); }
    41ea:	8e 01       	movw	r16, r28
    41ec:	0e 54       	subi	r16, 0x4E	; 78
    41ee:	1f 4f       	sbci	r17, 0xFF	; 255
    41f0:	f8 01       	movw	r30, r16
    41f2:	80 81       	ld	r24, Z
    41f4:	91 81       	ldd	r25, Z+1	; 0x01
    41f6:	97 ff       	sbrs	r25, 7
    41f8:	34 c0       	rjmp	.+104    	; 0x4262 <TTapeController::PreviousTrack()+0x108>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:869 (discriminator 1)
    41fa:	ce 01       	movw	r24, r28
    41fc:	0e 94 0c 1f 	call	0x3e18	; 0x3e18 <TTapeController::WindLeft()>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:871
    else { WindRight(); }
    digitalWrite(SET_MUTE,HIGH);
    4200:	61 e0       	ldi	r22, 0x01	; 1
    4202:	8a 8d       	ldd	r24, Y+26	; 0x1a
    4204:	0e 94 54 35 	call	0x6aa8	; 0x6aa8 <digitalWrite>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:872
    AutoRestart = false;
    4208:	1a 82       	std	Y+2, r1	; 0x02
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:873
    TrackFound = false;
    420a:	fe 01       	movw	r30, r28
    420c:	ec 57       	subi	r30, 0x7C	; 124
    420e:	ff 4f       	sbci	r31, 0xFF	; 255
    4210:	10 82       	st	Z, r1
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:874
    SearchTrack = true; // reseted by windleft/right
    4212:	81 e0       	ldi	r24, 0x01	; 1
    4214:	8b 83       	std	Y+3, r24	; 0x03
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:875
    if (direction < 0 ) {
    4216:	f8 01       	movw	r30, r16
    4218:	80 81       	ld	r24, Z
    421a:	91 81       	ldd	r25, Z+1	; 0x01
    421c:	97 ff       	sbrs	r25, 7
    421e:	25 c0       	rjmp	.+74     	; 0x426a <TTapeController::PreviousTrack()+0x110>
_ZN15TTapeController20AddSearchTrackNumberEi():
    4220:	ce 01       	movw	r24, r28
    4222:	0e 94 19 15 	call	0x2a32	; 0x2a32 <TTapeController::AddSearchTrackNumber(int) [clone .part.0]>
_ZN15TTapeController13PreviousTrackEv():
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:881
        AddSearchTrackNumber(-1);
    }
    else {
        AddSearchTrackNumber(1);
    } 
    lcd->Play();
    4226:	88 a1       	ldd	r24, Y+32	; 0x20
    4228:	99 a1       	ldd	r25, Y+33	; 0x21
    422a:	0e 94 89 0b 	call	0x1712	; 0x1712 <TDisplay::Play()>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:882
    lcd->BlinkPlay(true);
    422e:	61 e0       	ldi	r22, 0x01	; 1
    4230:	88 a1       	ldd	r24, Y+32	; 0x20
    4232:	99 a1       	ldd	r25, Y+33	; 0x21
    4234:	0e 94 ee 0a 	call	0x15dc	; 0x15dc <TDisplay::BlinkPlay(bool)>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:883
    lcd->ShowDigit9(SearchTrackNumber);
    4238:	6c a5       	ldd	r22, Y+44	; 0x2c
    423a:	7d a5       	ldd	r23, Y+45	; 0x2d
    423c:	88 a1       	ldd	r24, Y+32	; 0x20
    423e:	99 a1       	ldd	r25, Y+33	; 0x21
    4240:	0e 94 f9 0a 	call	0x15f2	; 0x15f2 <TDisplay::ShowDigit9(int)>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:884
    lcd->WindLeft();
    4244:	88 a1       	ldd	r24, Y+32	; 0x20
    4246:	99 a1       	ldd	r25, Y+33	; 0x21
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:885
}
    4248:	df 91       	pop	r29
    424a:	cf 91       	pop	r28
    424c:	1f 91       	pop	r17
    424e:	0f 91       	pop	r16
    4250:	ff 90       	pop	r15
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:884
        AddSearchTrackNumber(1);
    } 
    lcd->Play();
    lcd->BlinkPlay(true);
    lcd->ShowDigit9(SearchTrackNumber);
    lcd->WindLeft();
    4252:	0c 94 40 0c 	jmp	0x1880	; 0x1880 <TDisplay::WindLeft()>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:855
        bool changeDir = false;
        if (direction < 0 ) {
            changeDir = AddSearchTrackNumber(-1);
        }
        else {
            changeDir = AddSearchTrackNumber(1);
    4256:	61 e0       	ldi	r22, 0x01	; 1
    4258:	70 e0       	ldi	r23, 0x00	; 0
    425a:	ce 01       	movw	r24, r28
    425c:	0e 94 57 17 	call	0x2eae	; 0x2eae <TTapeController::AddSearchTrackNumber(int)>
    4260:	b5 cf       	rjmp	.-150    	; 0x41cc <TTapeController::PreviousTrack()+0x72>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:870
        
    }
    
    SearchTrack = true;
    if (direction < 0 ) { WindLeft(); }
    else { WindRight(); }
    4262:	ce 01       	movw	r24, r28
    4264:	0e 94 e2 1a 	call	0x35c4	; 0x35c4 <TTapeController::WindRight()>
    4268:	cb cf       	rjmp	.-106    	; 0x4200 <TTapeController::PreviousTrack()+0xa6>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:879
    SearchTrack = true; // reseted by windleft/right
    if (direction < 0 ) {
        AddSearchTrackNumber(-1);
    }
    else {
        AddSearchTrackNumber(1);
    426a:	61 e0       	ldi	r22, 0x01	; 1
    426c:	70 e0       	ldi	r23, 0x00	; 0
    426e:	ce 01       	movw	r24, r28
    4270:	0e 94 57 17 	call	0x2eae	; 0x2eae <TTapeController::AddSearchTrackNumber(int)>
    4274:	d8 cf       	rjmp	.-80     	; 0x4226 <TTapeController::PreviousTrack()+0xcc>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:885
    } 
    lcd->Play();
    lcd->BlinkPlay(true);
    lcd->ShowDigit9(SearchTrackNumber);
    lcd->WindLeft();
}
    4276:	df 91       	pop	r29
    4278:	cf 91       	pop	r28
    427a:	1f 91       	pop	r17
    427c:	0f 91       	pop	r16
    427e:	ff 90       	pop	r15
    4280:	08 95       	ret

00004282 <TTapeController::EndProgramm()>:
_ZN15TTapeController11EndProgrammEv():
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:527
/************************************************************************
 * EndProgramm
 * Ends the playback of a programm
 * *********************************************************************/
void TTapeController::EndProgramm()
{
    4282:	cf 93       	push	r28
    4284:	df 93       	push	r29
    4286:	ec 01       	movw	r28, r24
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:529
    #ifdef DEBUG
        Serial.println(":EndProgramm()");
    4288:	63 e3       	ldi	r22, 0x33	; 51
    428a:	75 e0       	ldi	r23, 0x05	; 5
    428c:	82 ed       	ldi	r24, 0xD2	; 210
    428e:	9a e0       	ldi	r25, 0x0A	; 10
    4290:	0e 94 e9 37 	call	0x6fd2	; 0x6fd2 <Print::println(char const*)>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:531
    #endif
    TrackNumber = 1;
    4294:	81 e0       	ldi	r24, 0x01	; 1
    4296:	90 e0       	ldi	r25, 0x00	; 0
    4298:	99 a7       	std	Y+41, r25	; 0x29
    429a:	88 a7       	std	Y+40, r24	; 0x28
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:532
    PlayProgramm = false;
    429c:	18 82       	st	Y, r1
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:533
    ProgrammPosition = -1;
    429e:	8f ef       	ldi	r24, 0xFF	; 255
    42a0:	9f ef       	ldi	r25, 0xFF	; 255
    42a2:	9b a7       	std	Y+43, r25	; 0x2b
    42a4:	8a a7       	std	Y+42, r24	; 0x2a
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:534
    SearchTrack = false;
    42a6:	1b 82       	std	Y+3, r1	; 0x03
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:535
    ClearProgramm();
    42a8:	ce 01       	movw	r24, r28
    42aa:	0e 94 d5 15 	call	0x2baa	; 0x2baa <TTapeController::ClearProgramm()>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:536
    Stop();
    42ae:	ce 01       	movw	r24, r28
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:537
}
    42b0:	df 91       	pop	r29
    42b2:	cf 91       	pop	r28
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:536
    TrackNumber = 1;
    PlayProgramm = false;
    ProgrammPosition = -1;
    SearchTrack = false;
    ClearProgramm();
    Stop();
    42b4:	0c 94 4b 1e 	jmp	0x3c96	; 0x3c96 <TTapeController::Stop()>

000042b8 <TTapeController::CheckIfRecordingIsPossible()>:
_ZN15TTapeController26CheckIfRecordingIsPossibleEv():
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1136
/************************************************************************
 * CheckIfRecordingIsPossible
 * 
 * *********************************************************************/
bool TTapeController::CheckIfRecordingIsPossible()
{
    42b8:	cf 93       	push	r28
    42ba:	df 93       	push	r29
    42bc:	ec 01       	movw	r28, r24
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1137
    if ((direction > 0 && !RecordEnabledForSideA) || (direction < 0 && !RecordEnabledForSideB)) {
    42be:	fc 01       	movw	r30, r24
    42c0:	ee 54       	subi	r30, 0x4E	; 78
    42c2:	ff 4f       	sbci	r31, 0xFF	; 255
    42c4:	80 81       	ld	r24, Z
    42c6:	91 81       	ldd	r25, Z+1	; 0x01
    42c8:	b2 97       	sbiw	r30, 0x22	; 34
    42ca:	18 16       	cp	r1, r24
    42cc:	19 06       	cpc	r1, r25
    42ce:	2c f0       	brlt	.+10     	; 0x42da <TTapeController::CheckIfRecordingIsPossible()+0x22>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1137 (discriminator 3)
    42d0:	89 2b       	or	r24, r25
    42d2:	c9 f0       	breq	.+50     	; 0x4306 <TTapeController::CheckIfRecordingIsPossible()+0x4e>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1137 (discriminator 4)
    42d4:	fe 01       	movw	r30, r28
    42d6:	ef 56       	subi	r30, 0x6F	; 111
    42d8:	ff 4f       	sbci	r31, 0xFF	; 255
    42da:	80 81       	ld	r24, Z
    42dc:	81 11       	cpse	r24, r1
    42de:	13 c0       	rjmp	.+38     	; 0x4306 <TTapeController::CheckIfRecordingIsPossible()+0x4e>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1139
        #ifdef DEBUG
            Serial.println("+Record not allowed");
    42e0:	62 e4       	ldi	r22, 0x42	; 66
    42e2:	75 e0       	ldi	r23, 0x05	; 5
    42e4:	82 ed       	ldi	r24, 0xD2	; 210
    42e6:	9a e0       	ldi	r25, 0x0A	; 10
    42e8:	0e 94 e9 37 	call	0x6fd2	; 0x6fd2 <Print::println(char const*)>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1141
        #endif
        lcd->ShowError(0);
    42ec:	70 e0       	ldi	r23, 0x00	; 0
    42ee:	60 e0       	ldi	r22, 0x00	; 0
    42f0:	88 a1       	ldd	r24, Y+32	; 0x20
    42f2:	99 a1       	ldd	r25, Y+33	; 0x21
    42f4:	0e 94 52 0b 	call	0x16a4	; 0x16a4 <TDisplay::ShowError(short)>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1142
        Stop();
    42f8:	ce 01       	movw	r24, r28
    42fa:	0e 94 4b 1e 	call	0x3c96	; 0x3c96 <TTapeController::Stop()>
    42fe:	80 e0       	ldi	r24, 0x00	; 0
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1149
    }
    #ifdef DEBUG
        Serial.println("+Let's start a record");
    #endif
    return true;
}
    4300:	df 91       	pop	r29
    4302:	cf 91       	pop	r28
    4304:	08 95       	ret
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1146
        lcd->ShowError(0);
        Stop();
        return false;
    }
    #ifdef DEBUG
        Serial.println("+Let's start a record");
    4306:	66 e5       	ldi	r22, 0x56	; 86
    4308:	75 e0       	ldi	r23, 0x05	; 5
    430a:	82 ed       	ldi	r24, 0xD2	; 210
    430c:	9a e0       	ldi	r25, 0x0A	; 10
    430e:	0e 94 e9 37 	call	0x6fd2	; 0x6fd2 <Print::println(char const*)>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1148
    #endif
    return true;
    4312:	81 e0       	ldi	r24, 0x01	; 1
    4314:	f5 cf       	rjmp	.-22     	; 0x4300 <TTapeController::CheckIfRecordingIsPossible()+0x48>

00004316 <TTapeController::ProgrammKeyPressed()>:
_ZN15TTapeController18ProgrammKeyPressedEv():
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:664
/************************************************************************
 * ProgrammKeyPressed
 * 
 * *********************************************************************/
void TTapeController::ProgrammKeyPressed()
{
    4316:	0f 93       	push	r16
    4318:	1f 93       	push	r17
    431a:	cf 93       	push	r28
    431c:	df 93       	push	r29
    431e:	ec 01       	movw	r28, r24
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:665
    if (lcd->WaitingForInput()) {
    4320:	88 a1       	ldd	r24, Y+32	; 0x20
    4322:	99 a1       	ldd	r25, Y+33	; 0x21
    4324:	0e 94 4f 0b 	call	0x169e	; 0x169e <TDisplay::WaitingForInput()>
    4328:	88 23       	and	r24, r24
    432a:	e1 f1       	breq	.+120    	; 0x43a4 <TTapeController::ProgrammKeyPressed()+0x8e>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:668


        switch(TrackNumber)
    432c:	68 a5       	ldd	r22, Y+40	; 0x28
    432e:	79 a5       	ldd	r23, Y+41	; 0x29
    4330:	6d 3f       	cpi	r22, 0xFD	; 253
    4332:	8f ef       	ldi	r24, 0xFF	; 255
    4334:	78 07       	cpc	r23, r24
    4336:	54 f0       	brlt	.+20     	; 0x434c <TTapeController::ProgrammKeyPressed()+0x36>
    4338:	6f 3f       	cpi	r22, 0xFF	; 255
    433a:	8f ef       	ldi	r24, 0xFF	; 255
    433c:	78 07       	cpc	r23, r24
    433e:	d9 f0       	breq	.+54     	; 0x4376 <TTapeController::ProgrammKeyPressed()+0x60>
    4340:	d4 f0       	brlt	.+52     	; 0x4376 <TTapeController::ProgrammKeyPressed()+0x60>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:671
        {
            case 0:
                MoveToPosition(false, 0);
    4342:	50 e0       	ldi	r21, 0x00	; 0
    4344:	40 e0       	ldi	r20, 0x00	; 0
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:668
void TTapeController::ProgrammKeyPressed()
{
    if (lcd->WaitingForInput()) {


        switch(TrackNumber)
    4346:	61 15       	cp	r22, r1
    4348:	71 05       	cpc	r23, r1
    434a:	e9 f0       	breq	.+58     	; 0x4386 <TTapeController::ProgrammKeyPressed()+0x70>
    434c:	fb 01       	movw	r30, r22
    434e:	ee 0f       	add	r30, r30
    4350:	ff 1f       	adc	r31, r31
    4352:	ec 0f       	add	r30, r28
    4354:	fd 1f       	adc	r31, r29
    4356:	88 a1       	ldd	r24, Y+32	; 0x20
    4358:	99 a1       	ldd	r25, Y+33	; 0x21
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:682
                return;
        }



        if (Programm[TrackNumber]) {
    435a:	26 a5       	ldd	r18, Z+46	; 0x2e
    435c:	37 a5       	ldd	r19, Z+47	; 0x2f
    435e:	23 2b       	or	r18, r19
    4360:	d1 f0       	breq	.+52     	; 0x4396 <TTapeController::ProgrammKeyPressed()+0x80>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:683
            Programm[TrackNumber] = false;
    4362:	17 a6       	std	Z+47, r1	; 0x2f
    4364:	16 a6       	std	Z+46, r1	; 0x2e
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:684
            lcd->Programm(TrackNumber,2);
    4366:	42 e0       	ldi	r20, 0x02	; 2
    4368:	50 e0       	ldi	r21, 0x00	; 0
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:703
        #endif    
        lcd->ShowError(0);
    }

    
}
    436a:	df 91       	pop	r29
    436c:	cf 91       	pop	r28
    436e:	1f 91       	pop	r17
    4370:	0f 91       	pop	r16
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:688
            Programm[TrackNumber] = false;
            lcd->Programm(TrackNumber,2);
        }
        else {
            Programm[TrackNumber] = true;
            lcd->Programm(TrackNumber,1);
    4372:	0c 94 18 0b 	jmp	0x1630	; 0x1630 <TDisplay::Programm(int, int)>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:676
                MoveToPosition(false, 0);
                return;
            case -1:
            case -2:
            case -3:
                MoveToPosition(false, counter->GetMemoryPosition(TrackNumber * -1));
    4376:	71 95       	neg	r23
    4378:	61 95       	neg	r22
    437a:	71 09       	sbc	r23, r1
    437c:	8c a1       	ldd	r24, Y+36	; 0x24
    437e:	9d a1       	ldd	r25, Y+37	; 0x25
    4380:	0e 94 61 0a 	call	0x14c2	; 0x14c2 <TCounter::GetMemoryPosition(int)>
    4384:	ac 01       	movw	r20, r24
    4386:	60 e0       	ldi	r22, 0x00	; 0
    4388:	ce 01       	movw	r24, r28
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:703
        #endif    
        lcd->ShowError(0);
    }

    
}
    438a:	df 91       	pop	r29
    438c:	cf 91       	pop	r28
    438e:	1f 91       	pop	r17
    4390:	0f 91       	pop	r16
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:676
                MoveToPosition(false, 0);
                return;
            case -1:
            case -2:
            case -3:
                MoveToPosition(false, counter->GetMemoryPosition(TrackNumber * -1));
    4392:	0c 94 a9 1b 	jmp	0x3752	; 0x3752 <TTapeController::MoveToPosition(bool, int)>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:687
        if (Programm[TrackNumber]) {
            Programm[TrackNumber] = false;
            lcd->Programm(TrackNumber,2);
        }
        else {
            Programm[TrackNumber] = true;
    4396:	21 e0       	ldi	r18, 0x01	; 1
    4398:	30 e0       	ldi	r19, 0x00	; 0
    439a:	37 a7       	std	Z+47, r19	; 0x2f
    439c:	26 a7       	std	Z+46, r18	; 0x2e
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:688
            lcd->Programm(TrackNumber,1);
    439e:	41 e0       	ldi	r20, 0x01	; 1
    43a0:	50 e0       	ldi	r21, 0x00	; 0
    43a2:	e3 cf       	rjmp	.-58     	; 0x436a <TTapeController::ProgrammKeyPressed()+0x54>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:692
        }
        return;
    }
    if (HasProgramm()) {
    43a4:	ce 01       	movw	r24, r28
    43a6:	0e 94 10 17 	call	0x2e20	; 0x2e20 <TTapeController::HasProgramm()>
    43aa:	88 23       	and	r24, r24
    43ac:	69 f0       	breq	.+26     	; 0x43c8 <TTapeController::ProgrammKeyPressed()+0xb2>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:693
        lcd->ShowDigit(GetNextProgrammedTrack());
    43ae:	08 a1       	ldd	r16, Y+32	; 0x20
    43b0:	19 a1       	ldd	r17, Y+33	; 0x21
    43b2:	ce 01       	movw	r24, r28
    43b4:	0e 94 2a 17 	call	0x2e54	; 0x2e54 <TTapeController::GetNextProgrammedTrack()>
    43b8:	bc 01       	movw	r22, r24
    43ba:	c8 01       	movw	r24, r16
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:703
        #endif    
        lcd->ShowError(0);
    }

    
}
    43bc:	df 91       	pop	r29
    43be:	cf 91       	pop	r28
    43c0:	1f 91       	pop	r17
    43c2:	0f 91       	pop	r16
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:693
            lcd->Programm(TrackNumber,1);
        }
        return;
    }
    if (HasProgramm()) {
        lcd->ShowDigit(GetNextProgrammedTrack());
    43c4:	0c 94 0d 0b 	jmp	0x161a	; 0x161a <TDisplay::ShowDigit(int)>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:697
    }
    else {
        #ifdef DEBUG
            Serial.println("+ProgrammKeyPressed error");
    43c8:	6c e6       	ldi	r22, 0x6C	; 108
    43ca:	75 e0       	ldi	r23, 0x05	; 5
    43cc:	82 ed       	ldi	r24, 0xD2	; 210
    43ce:	9a e0       	ldi	r25, 0x0A	; 10
    43d0:	0e 94 e9 37 	call	0x6fd2	; 0x6fd2 <Print::println(char const*)>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:699
        #endif    
        lcd->ShowError(0);
    43d4:	70 e0       	ldi	r23, 0x00	; 0
    43d6:	60 e0       	ldi	r22, 0x00	; 0
    43d8:	88 a1       	ldd	r24, Y+32	; 0x20
    43da:	99 a1       	ldd	r25, Y+33	; 0x21
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:703
    }

    
}
    43dc:	df 91       	pop	r29
    43de:	cf 91       	pop	r28
    43e0:	1f 91       	pop	r17
    43e2:	0f 91       	pop	r16
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:699
    }
    else {
        #ifdef DEBUG
            Serial.println("+ProgrammKeyPressed error");
        #endif    
        lcd->ShowError(0);
    43e4:	0c 94 52 0b 	jmp	0x16a4	; 0x16a4 <TDisplay::ShowError(short)>

000043e8 <TTapeController::ToggleDirection()>:
_ZN15TTapeController15ToggleDirectionEv():
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:917
/************************************************************************
 * ToggleDirection
 * Switch direction, turn head in play or stop mode
 * *********************************************************************/
void TTapeController::ToggleDirection() 
{
    43e8:	cf 92       	push	r12
    43ea:	df 92       	push	r13
    43ec:	ef 92       	push	r14
    43ee:	ff 92       	push	r15
    43f0:	0f 93       	push	r16
    43f2:	1f 93       	push	r17
    43f4:	cf 93       	push	r28
    43f6:	df 93       	push	r29
    43f8:	ec 01       	movw	r28, r24
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:919
    #ifdef DEBUG
        Serial.println(":ToggleDirection()");
    43fa:	66 e8       	ldi	r22, 0x86	; 134
    43fc:	75 e0       	ldi	r23, 0x05	; 5
    43fe:	82 ed       	ldi	r24, 0xD2	; 210
    4400:	9a e0       	ldi	r25, 0x0A	; 10
    4402:	0e 94 e9 37 	call	0x6fd2	; 0x6fd2 <Print::println(char const*)>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:921
    #endif
    if (paused) {return;}
    4406:	fe 01       	movw	r30, r28
    4408:	ea 54       	subi	r30, 0x4A	; 74
    440a:	ff 4f       	sbci	r31, 0xFF	; 255
    440c:	80 81       	ld	r24, Z
    440e:	81 11       	cpse	r24, r1
    4410:	8a c0       	rjmp	.+276    	; 0x4526 <TTapeController::ToggleDirection()+0x13e>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:922
    if (FastWinding != fwNone) {return; }
    4412:	38 96       	adiw	r30, 0x08	; 8
    4414:	80 81       	ld	r24, Z
    4416:	91 81       	ldd	r25, Z+1	; 0x01
    4418:	89 2b       	or	r24, r25
    441a:	09 f0       	breq	.+2      	; 0x441e <TTapeController::ToggleDirection()+0x36>
    441c:	84 c0       	rjmp	.+264    	; 0x4526 <TTapeController::ToggleDirection()+0x13e>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:923
    bool isPlaying = playing;
    441e:	39 97       	sbiw	r30, 0x09	; 9
    4420:	e0 80       	ld	r14, Z
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:925

    if (isPlaying) Stop();
    4422:	ee 20       	and	r14, r14
    4424:	19 f0       	breq	.+6      	; 0x442c <TTapeController::ToggleDirection()+0x44>
    4426:	ce 01       	movw	r24, r28
    4428:	0e 94 4b 1e 	call	0x3c96	; 0x3c96 <TTapeController::Stop()>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:928
  
    
    bool WaitForState = !StateHeadServo;
    442c:	6e 01       	movw	r12, r28
    442e:	8b e8       	ldi	r24, 0x8B	; 139
    4430:	c8 0e       	add	r12, r24
    4432:	d1 1c       	adc	r13, r1
    4434:	f6 01       	movw	r30, r12
    4436:	f0 80       	ld	r15, Z
    4438:	81 e0       	ldi	r24, 0x01	; 1
    443a:	f8 26       	eor	r15, r24
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:929
    StartCapstan(); 
    443c:	ce 01       	movw	r24, r28
    443e:	0e 94 67 15 	call	0x2ace	; 0x2ace <TTapeController::StartCapstan()>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:931
    
    delay(WAIT_BEFORE_FAST_WIND);
    4442:	6c 85       	ldd	r22, Y+12	; 0x0c
    4444:	7d 85       	ldd	r23, Y+13	; 0x0d
    4446:	07 2e       	mov	r0, r23
    4448:	00 0c       	add	r0, r0
    444a:	88 0b       	sbc	r24, r24
    444c:	99 0b       	sbc	r25, r25
    444e:	0e 94 75 34 	call	0x68ea	; 0x68ea <delay>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:932
    digitalWrite(SET_WIND_LEFT, HIGH);  
    4452:	61 e0       	ldi	r22, 0x01	; 1
    4454:	8a 89       	ldd	r24, Y+18	; 0x12
    4456:	0e 94 54 35 	call	0x6aa8	; 0x6aa8 <digitalWrite>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:933
    digitalWrite(SET_WIND_RIGHT, LOW);  
    445a:	60 e0       	ldi	r22, 0x00	; 0
    445c:	8c 89       	ldd	r24, Y+20	; 0x14
    445e:	0e 94 54 35 	call	0x6aa8	; 0x6aa8 <digitalWrite>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:935

    digitalWrite(SET_FAST_WIND, LOW); 
    4462:	60 e0       	ldi	r22, 0x00	; 0
    4464:	8e 89       	ldd	r24, Y+22	; 0x16
    4466:	0e 94 54 35 	call	0x6aa8	; 0x6aa8 <digitalWrite>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:937
    
    int tries = 0;
    446a:	10 e0       	ldi	r17, 0x00	; 0
    446c:	00 e0       	ldi	r16, 0x00	; 0
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:940


    while (StateHeadServo != WaitForState && tries < 1000) {
    446e:	f6 01       	movw	r30, r12
    4470:	80 81       	ld	r24, Z
    4472:	f8 16       	cp	r15, r24
    4474:	51 f0       	breq	.+20     	; 0x448a <TTapeController::ToggleDirection()+0xa2>
    4476:	08 3e       	cpi	r16, 0xE8	; 232
    4478:	f3 e0       	ldi	r31, 0x03	; 3
    447a:	1f 07       	cpc	r17, r31
    447c:	31 f0       	breq	.+12     	; 0x448a <TTapeController::ToggleDirection()+0xa2>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:941
        GetState();
    447e:	ce 01       	movw	r24, r28
    4480:	0e 94 b3 19 	call	0x3366	; 0x3366 <TTapeController::GetState()>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:942
        tries++;
    4484:	0f 5f       	subi	r16, 0xFF	; 255
    4486:	1f 4f       	sbci	r17, 0xFF	; 255
    4488:	f2 cf       	rjmp	.-28     	; 0x446e <TTapeController::ToggleDirection()+0x86>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:944
    }
    digitalWrite(SET_FAST_WIND, HIGH); 
    448a:	61 e0       	ldi	r22, 0x01	; 1
    448c:	8e 89       	ldd	r24, Y+22	; 0x16
    448e:	0e 94 54 35 	call	0x6aa8	; 0x6aa8 <digitalWrite>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:945
    digitalWrite(SET_WIND_LEFT, LOW);  
    4492:	60 e0       	ldi	r22, 0x00	; 0
    4494:	8a 89       	ldd	r24, Y+18	; 0x12
    4496:	0e 94 54 35 	call	0x6aa8	; 0x6aa8 <digitalWrite>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:946
    digitalWrite(SET_WIND_RIGHT, LOW);  
    449a:	60 e0       	ldi	r22, 0x00	; 0
    449c:	8c 89       	ldd	r24, Y+20	; 0x14
    449e:	0e 94 54 35 	call	0x6aa8	; 0x6aa8 <digitalWrite>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:948
    
    if (tries >= 1000) {
    44a2:	08 3e       	cpi	r16, 0xE8	; 232
    44a4:	13 40       	sbci	r17, 0x03	; 3
    44a6:	61 f4       	brne	.+24     	; 0x44c0 <TTapeController::ToggleDirection()+0xd8>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:950
        #ifdef DEBUG
            Serial.println("+ToggleDirection error");
    44a8:	69 e9       	ldi	r22, 0x99	; 153
    44aa:	75 e0       	ldi	r23, 0x05	; 5
    44ac:	82 ed       	ldi	r24, 0xD2	; 210
    44ae:	9a e0       	ldi	r25, 0x0A	; 10
    44b0:	0e 94 e9 37 	call	0x6fd2	; 0x6fd2 <Print::println(char const*)>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:952
        #endif       
        lcd->ShowError(2);
    44b4:	62 e0       	ldi	r22, 0x02	; 2
    44b6:	70 e0       	ldi	r23, 0x00	; 0
    44b8:	88 a1       	ldd	r24, Y+32	; 0x20
    44ba:	99 a1       	ldd	r25, Y+33	; 0x21
    44bc:	0e 94 52 0b 	call	0x16a4	; 0x16a4 <TDisplay::ShowError(short)>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:955
    }
    // some mechanism failed from time to time without giving it a little rest
    delay(WAIT_BEFORE_FAST_WIND); // 50
    44c0:	6c 85       	ldd	r22, Y+12	; 0x0c
    44c2:	7d 85       	ldd	r23, Y+13	; 0x0d
    44c4:	07 2e       	mov	r0, r23
    44c6:	00 0c       	add	r0, r0
    44c8:	88 0b       	sbc	r24, r24
    44ca:	99 0b       	sbc	r25, r25
    44cc:	0e 94 75 34 	call	0x68ea	; 0x68ea <delay>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:956
    direction *= -1;
    44d0:	fe 01       	movw	r30, r28
    44d2:	ee 54       	subi	r30, 0x4E	; 78
    44d4:	ff 4f       	sbci	r31, 0xFF	; 255
    44d6:	80 81       	ld	r24, Z
    44d8:	91 81       	ldd	r25, Z+1	; 0x01
    44da:	91 95       	neg	r25
    44dc:	81 95       	neg	r24
    44de:	91 09       	sbc	r25, r1
    44e0:	91 83       	std	Z+1, r25	; 0x01
    44e2:	80 83       	st	Z, r24
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:957
    if (isPlaying) Play();
    44e4:	ee 20       	and	r14, r14
    44e6:	59 f0       	breq	.+22     	; 0x44fe <TTapeController::ToggleDirection()+0x116>
    44e8:	ce 01       	movw	r24, r28
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:964
    {
        delay(200);
        StopCapstan();  
        GetState();
    }
}
    44ea:	df 91       	pop	r29
    44ec:	cf 91       	pop	r28
    44ee:	1f 91       	pop	r17
    44f0:	0f 91       	pop	r16
    44f2:	ff 90       	pop	r15
    44f4:	ef 90       	pop	r14
    44f6:	df 90       	pop	r13
    44f8:	cf 90       	pop	r12
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:957
        lcd->ShowError(2);
    }
    // some mechanism failed from time to time without giving it a little rest
    delay(WAIT_BEFORE_FAST_WIND); // 50
    direction *= -1;
    if (isPlaying) Play();
    44fa:	0c 94 1b 1c 	jmp	0x3836	; 0x3836 <TTapeController::Play()>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:960
    else
    {
        delay(200);
    44fe:	68 ec       	ldi	r22, 0xC8	; 200
    4500:	70 e0       	ldi	r23, 0x00	; 0
    4502:	80 e0       	ldi	r24, 0x00	; 0
    4504:	90 e0       	ldi	r25, 0x00	; 0
    4506:	0e 94 75 34 	call	0x68ea	; 0x68ea <delay>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:961
        StopCapstan();  
    450a:	ce 01       	movw	r24, r28
    450c:	0e 94 7d 15 	call	0x2afa	; 0x2afa <TTapeController::StopCapstan()>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:962
        GetState();
    4510:	ce 01       	movw	r24, r28
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:964
    }
}
    4512:	df 91       	pop	r29
    4514:	cf 91       	pop	r28
    4516:	1f 91       	pop	r17
    4518:	0f 91       	pop	r16
    451a:	ff 90       	pop	r15
    451c:	ef 90       	pop	r14
    451e:	df 90       	pop	r13
    4520:	cf 90       	pop	r12
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:962
    if (isPlaying) Play();
    else
    {
        delay(200);
        StopCapstan();  
        GetState();
    4522:	0c 94 b3 19 	jmp	0x3366	; 0x3366 <TTapeController::GetState()>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:964
    }
}
    4526:	df 91       	pop	r29
    4528:	cf 91       	pop	r28
    452a:	1f 91       	pop	r17
    452c:	0f 91       	pop	r16
    452e:	ff 90       	pop	r15
    4530:	ef 90       	pop	r14
    4532:	df 90       	pop	r13
    4534:	cf 90       	pop	r12
    4536:	08 95       	ret

00004538 <TTapeController::Update()>:
_ZN15TTapeController6UpdateEv():
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1228
/************************************************************************
 * Update
 * Refresh the current states and check if any action is needed
 * *********************************************************************/
void TTapeController::Update() 
{
    4538:	af 92       	push	r10
    453a:	bf 92       	push	r11
    453c:	cf 92       	push	r12
    453e:	df 92       	push	r13
    4540:	ef 92       	push	r14
    4542:	ff 92       	push	r15
    4544:	0f 93       	push	r16
    4546:	1f 93       	push	r17
    4548:	cf 93       	push	r28
    454a:	df 93       	push	r29
    454c:	ec 01       	movw	r28, r24
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1229
    ms = millis();
    454e:	0e 94 44 34 	call	0x6888	; 0x6888 <millis>
    4552:	8e 01       	movw	r16, r28
    4554:	02 55       	subi	r16, 0x52	; 82
    4556:	1f 4f       	sbci	r17, 0xFF	; 255
    4558:	f8 01       	movw	r30, r16
    455a:	60 83       	st	Z, r22
    455c:	71 83       	std	Z+1, r23	; 0x01
    455e:	82 83       	std	Z+2, r24	; 0x02
    4560:	93 83       	std	Z+3, r25	; 0x03
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1230
    GetState();
    4562:	ce 01       	movw	r24, r28
    4564:	0e 94 b3 19 	call	0x3366	; 0x3366 <TTapeController::GetState()>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1234



    if (PauseTimer > 0 && PauseTimer < ms) {
    4568:	7e 01       	movw	r14, r28
    456a:	fe e9       	ldi	r31, 0x9E	; 158
    456c:	ef 0e       	add	r14, r31
    456e:	f1 1c       	adc	r15, r1
    4570:	f7 01       	movw	r30, r14
    4572:	80 81       	ld	r24, Z
    4574:	91 81       	ldd	r25, Z+1	; 0x01
    4576:	a2 81       	ldd	r26, Z+2	; 0x02
    4578:	b3 81       	ldd	r27, Z+3	; 0x03
    457a:	18 16       	cp	r1, r24
    457c:	19 06       	cpc	r1, r25
    457e:	1a 06       	cpc	r1, r26
    4580:	1b 06       	cpc	r1, r27
    4582:	94 f4       	brge	.+36     	; 0x45a8 <TTapeController::Update()+0x70>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1234 (discriminator 1)
    4584:	f8 01       	movw	r30, r16
    4586:	40 81       	ld	r20, Z
    4588:	51 81       	ldd	r21, Z+1	; 0x01
    458a:	62 81       	ldd	r22, Z+2	; 0x02
    458c:	73 81       	ldd	r23, Z+3	; 0x03
    458e:	84 17       	cp	r24, r20
    4590:	95 07       	cpc	r25, r21
    4592:	a6 07       	cpc	r26, r22
    4594:	b7 07       	cpc	r27, r23
    4596:	44 f4       	brge	.+16     	; 0x45a8 <TTapeController::Update()+0x70>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1235
        Pause();
    4598:	ce 01       	movw	r24, r28
    459a:	0e 94 28 1a 	call	0x3450	; 0x3450 <TTapeController::Pause()>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1236
        PauseTimer = 0;
    459e:	f7 01       	movw	r30, r14
    45a0:	10 82       	st	Z, r1
    45a2:	11 82       	std	Z+1, r1	; 0x01
    45a4:	12 82       	std	Z+2, r1	; 0x02
    45a6:	13 82       	std	Z+3, r1	; 0x03
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1239
    }

    if (SwitchOffCapstan > 0 && SwitchOffCapstan < ms) {
    45a8:	9e 01       	movw	r18, r28
    45aa:	2e 55       	subi	r18, 0x5E	; 94
    45ac:	3f 4f       	sbci	r19, 0xFF	; 255
    45ae:	f9 01       	movw	r30, r18
    45b0:	80 81       	ld	r24, Z
    45b2:	91 81       	ldd	r25, Z+1	; 0x01
    45b4:	a2 81       	ldd	r26, Z+2	; 0x02
    45b6:	b3 81       	ldd	r27, Z+3	; 0x03
    45b8:	18 16       	cp	r1, r24
    45ba:	19 06       	cpc	r1, r25
    45bc:	1a 06       	cpc	r1, r26
    45be:	1b 06       	cpc	r1, r27
    45c0:	6c f5       	brge	.+90     	; 0x461c <TTapeController::Update()+0xe4>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1239 (discriminator 1)
    45c2:	f8 01       	movw	r30, r16
    45c4:	40 81       	ld	r20, Z
    45c6:	51 81       	ldd	r21, Z+1	; 0x01
    45c8:	62 81       	ldd	r22, Z+2	; 0x02
    45ca:	73 81       	ldd	r23, Z+3	; 0x03
    45cc:	84 17       	cp	r24, r20
    45ce:	95 07       	cpc	r25, r21
    45d0:	a6 07       	cpc	r26, r22
    45d2:	b7 07       	cpc	r27, r23
    45d4:	1c f5       	brge	.+70     	; 0x461c <TTapeController::Update()+0xe4>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1240
        SwitchOffCapstan = 0;
    45d6:	f9 01       	movw	r30, r18
    45d8:	10 82       	st	Z, r1
    45da:	11 82       	std	Z+1, r1	; 0x01
    45dc:	12 82       	std	Z+2, r1	; 0x02
    45de:	13 82       	std	Z+3, r1	; 0x03
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1241
        digitalWrite(SET_CAPSTAN_MOTOR, LOW); 
    45e0:	60 e0       	ldi	r22, 0x00	; 0
    45e2:	8e 85       	ldd	r24, Y+14	; 0x0e
    45e4:	0e 94 54 35 	call	0x6aa8	; 0x6aa8 <digitalWrite>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1243
        #ifdef DEBUG
            Serial.println("> Capstan Motor OFF");
    45e8:	60 eb       	ldi	r22, 0xB0	; 176
    45ea:	75 e0       	ldi	r23, 0x05	; 5
    45ec:	82 ed       	ldi	r24, 0xD2	; 210
    45ee:	9a e0       	ldi	r25, 0x0A	; 10
    45f0:	0e 94 e9 37 	call	0x6fd2	; 0x6fd2 <Print::println(char const*)>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1246
        #endif

        if (DesiredCapstanState != StateSlideServoUp) {
    45f4:	fe 01       	movw	r30, r28
    45f6:	ed 57       	subi	r30, 0x7D	; 125
    45f8:	ff 4f       	sbci	r31, 0xFF	; 255
    45fa:	90 81       	ld	r25, Z
    45fc:	36 96       	adiw	r30, 0x06	; 6
    45fe:	80 81       	ld	r24, Z
    4600:	98 17       	cp	r25, r24
    4602:	61 f0       	breq	.+24     	; 0x461c <TTapeController::Update()+0xe4>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1249

            #ifdef DEBUG
                Serial.println("+DesiredCapstanState != StateSlideServoUp");
    4604:	64 ec       	ldi	r22, 0xC4	; 196
    4606:	75 e0       	ldi	r23, 0x05	; 5
    4608:	82 ed       	ldi	r24, 0xD2	; 210
    460a:	9a e0       	ldi	r25, 0x0A	; 10
    460c:	0e 94 e9 37 	call	0x6fd2	; 0x6fd2 <Print::println(char const*)>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1251
            #endif
            lcd->ShowError(4);
    4610:	64 e0       	ldi	r22, 0x04	; 4
    4612:	70 e0       	ldi	r23, 0x00	; 0
    4614:	88 a1       	ldd	r24, Y+32	; 0x20
    4616:	99 a1       	ldd	r25, Y+33	; 0x21
    4618:	0e 94 52 0b 	call	0x16a4	; 0x16a4 <TDisplay::ShowError(short)>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1256
        }

    }

    if (GotoPosition >= 0)
    461c:	7e 01       	movw	r14, r28
    461e:	f3 e9       	ldi	r31, 0x93	; 147
    4620:	ef 0e       	add	r14, r31
    4622:	f1 1c       	adc	r15, r1
    4624:	f7 01       	movw	r30, r14
    4626:	80 81       	ld	r24, Z
    4628:	91 81       	ldd	r25, Z+1	; 0x01
    462a:	a2 81       	ldd	r26, Z+2	; 0x02
    462c:	b3 81       	ldd	r27, Z+3	; 0x03
    462e:	b7 fd       	sbrc	r27, 7
    4630:	25 c0       	rjmp	.+74     	; 0x467c <TTapeController::Update()+0x144>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1259
    {

        int c = counter->GetCurrentPosition();
    4632:	8c a1       	ldd	r24, Y+36	; 0x24
    4634:	9d a1       	ldd	r25, Y+37	; 0x25
    4636:	0e 94 5d 0a 	call	0x14ba	; 0x14ba <TCounter::GetCurrentPosition()>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1261

        bool found = counter->IsAtPosition(GotoPosition);
    463a:	f7 01       	movw	r30, r14
    463c:	60 81       	ld	r22, Z
    463e:	71 81       	ldd	r23, Z+1	; 0x01
    4640:	8c a1       	ldd	r24, Y+36	; 0x24
    4642:	9d a1       	ldd	r25, Y+37	; 0x25
    4644:	0e 94 74 0a 	call	0x14e8	; 0x14e8 <TCounter::IsAtPosition(int)>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1263

        if (found)
    4648:	88 23       	and	r24, r24
    464a:	c1 f0       	breq	.+48     	; 0x467c <TTapeController::Update()+0x144>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1265
            {
                GotoPosition = -1;  
    464c:	8f ef       	ldi	r24, 0xFF	; 255
    464e:	9f ef       	ldi	r25, 0xFF	; 255
    4650:	dc 01       	movw	r26, r24
    4652:	f7 01       	movw	r30, r14
    4654:	80 83       	st	Z, r24
    4656:	91 83       	std	Z+1, r25	; 0x01
    4658:	a2 83       	std	Z+2, r26	; 0x02
    465a:	b3 83       	std	Z+3, r27	; 0x03
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1266
                lcd->ShowDigit(0);
    465c:	70 e0       	ldi	r23, 0x00	; 0
    465e:	60 e0       	ldi	r22, 0x00	; 0
    4660:	88 a1       	ldd	r24, Y+32	; 0x20
    4662:	99 a1       	ldd	r25, Y+33	; 0x21
    4664:	0e 94 0d 0b 	call	0x161a	; 0x161a <TDisplay::ShowDigit(int)>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1267
                if (GotoPositionAutoPlay) Play();
    4668:	fe 01       	movw	r30, r28
    466a:	e7 56       	subi	r30, 0x67	; 103
    466c:	ff 4f       	sbci	r31, 0xFF	; 255
    466e:	80 81       	ld	r24, Z
    4670:	88 23       	and	r24, r24
    4672:	09 f4       	brne	.+2      	; 0x4676 <TTapeController::Update()+0x13e>
    4674:	77 c0       	rjmp	.+238    	; 0x4764 <TTapeController::Update()+0x22c>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1267 (discriminator 1)
    4676:	ce 01       	movw	r24, r28
    4678:	0e 94 1b 1c 	call	0x3836	; 0x3836 <TTapeController::Play()>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1272
                else Stop();
            }
    }

    if (SwitchOnMusic > 0 && SwitchOnMusic < ms) {
    467c:	9e 01       	movw	r18, r28
    467e:	2a 55       	subi	r18, 0x5A	; 90
    4680:	3f 4f       	sbci	r19, 0xFF	; 255
    4682:	f9 01       	movw	r30, r18
    4684:	80 81       	ld	r24, Z
    4686:	91 81       	ldd	r25, Z+1	; 0x01
    4688:	a2 81       	ldd	r26, Z+2	; 0x02
    468a:	b3 81       	ldd	r27, Z+3	; 0x03
    468c:	18 16       	cp	r1, r24
    468e:	19 06       	cpc	r1, r25
    4690:	1a 06       	cpc	r1, r26
    4692:	1b 06       	cpc	r1, r27
    4694:	cc f4       	brge	.+50     	; 0x46c8 <TTapeController::Update()+0x190>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1272 (discriminator 1)
    4696:	f8 01       	movw	r30, r16
    4698:	40 81       	ld	r20, Z
    469a:	51 81       	ldd	r21, Z+1	; 0x01
    469c:	62 81       	ldd	r22, Z+2	; 0x02
    469e:	73 81       	ldd	r23, Z+3	; 0x03
    46a0:	84 17       	cp	r24, r20
    46a2:	95 07       	cpc	r25, r21
    46a4:	a6 07       	cpc	r26, r22
    46a6:	b7 07       	cpc	r27, r23
    46a8:	7c f4       	brge	.+30     	; 0x46c8 <TTapeController::Update()+0x190>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1273
        SwitchOnMusic = 0;
    46aa:	f9 01       	movw	r30, r18
    46ac:	10 82       	st	Z, r1
    46ae:	11 82       	std	Z+1, r1	; 0x01
    46b0:	12 82       	std	Z+2, r1	; 0x02
    46b2:	13 82       	std	Z+3, r1	; 0x03
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1274
        digitalWrite(SET_MUTE,LOW);
    46b4:	60 e0       	ldi	r22, 0x00	; 0
    46b6:	8a 8d       	ldd	r24, Y+26	; 0x1a
    46b8:	0e 94 54 35 	call	0x6aa8	; 0x6aa8 <digitalWrite>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1276
        #ifdef DEBUG
            Serial.println("> Mute OFF");
    46bc:	6e ee       	ldi	r22, 0xEE	; 238
    46be:	75 e0       	ldi	r23, 0x05	; 5
    46c0:	82 ed       	ldi	r24, 0xD2	; 210
    46c2:	9a e0       	ldi	r25, 0x0A	; 10
    46c4:	0e 94 e9 37 	call	0x6fd2	; 0x6fd2 <Print::println(char const*)>
    46c8:	88 a1       	ldd	r24, Y+32	; 0x20
    46ca:	99 a1       	ldd	r25, Y+33	; 0x21
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1281
        #endif
    }

    // set the current direction based on the head switch
    if (StateHeadServo != 0) {
    46cc:	fe 01       	movw	r30, r28
    46ce:	e5 57       	subi	r30, 0x75	; 117
    46d0:	ff 4f       	sbci	r31, 0xFF	; 255
    46d2:	20 81       	ld	r18, Z
    46d4:	ae 01       	movw	r20, r28
    46d6:	4e 54       	subi	r20, 0x4E	; 78
    46d8:	5f 4f       	sbci	r21, 0xFF	; 255
    46da:	7a 01       	movw	r14, r20
    46dc:	22 23       	and	r18, r18
    46de:	09 f4       	brne	.+2      	; 0x46e2 <TTapeController::Update()+0x1aa>
    46e0:	45 c0       	rjmp	.+138    	; 0x476c <TTapeController::Update()+0x234>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1282
        direction = -1;
    46e2:	2f ef       	ldi	r18, 0xFF	; 255
    46e4:	3f ef       	ldi	r19, 0xFF	; 255
    46e6:	fa 01       	movw	r30, r20
    46e8:	31 83       	std	Z+1, r19	; 0x01
    46ea:	20 83       	st	Z, r18
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1283
        lcd->DirectionLeft();
    46ec:	0e 94 9e 0c 	call	0x193c	; 0x193c <TDisplay::DirectionLeft()>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1289
        counter->SetDirection(direction);
    }
    else {
        direction = 1;
        lcd->DirectionRight();
        counter->SetDirection(direction);
    46f0:	f7 01       	movw	r30, r14
    46f2:	60 81       	ld	r22, Z
    46f4:	71 81       	ldd	r23, Z+1	; 0x01
    46f6:	8c a1       	ldd	r24, Y+36	; 0x24
    46f8:	9d a1       	ldd	r25, Y+37	; 0x25
    46fa:	0e 94 a2 0a 	call	0x1544	; 0x1544 <TCounter::SetDirection(int)>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1304
        digitalWrite(PIN_BUILD_IN_LED, LOW);
    }
*/

    // Search for track and continue to play when found
    if (!PlayProgramm && SearchTrack) {
    46fe:	88 81       	ld	r24, Y
    4700:	81 11       	cpse	r24, r1
    4702:	3c c0       	rjmp	.+120    	; 0x477c <TTapeController::Update()+0x244>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1304 (discriminator 1)
    4704:	8b 81       	ldd	r24, Y+3	; 0x03
    4706:	88 23       	and	r24, r24
    4708:	09 f4       	brne	.+2      	; 0x470c <TTapeController::Update()+0x1d4>
    470a:	e3 c0       	rjmp	.+454    	; 0x48d2 <TTapeController::Update()+0x39a>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1306

        if (TrackFound) {
    470c:	fe 01       	movw	r30, r28
    470e:	ec 57       	subi	r30, 0x7C	; 124
    4710:	ff 4f       	sbci	r31, 0xFF	; 255
    4712:	80 81       	ld	r24, Z
    4714:	88 23       	and	r24, r24
    4716:	09 f4       	brne	.+2      	; 0x471a <TTapeController::Update()+0x1e2>
    4718:	dc c0       	rjmp	.+440    	; 0x48d2 <TTapeController::Update()+0x39a>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1307
            TrackFound = false;
    471a:	10 82       	st	Z, r1
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1308
            SearchTrackNumber += (SearchTrackNumber > 0) ? -1 : 1;
    471c:	6c a5       	ldd	r22, Y+44	; 0x2c
    471e:	7d a5       	ldd	r23, Y+45	; 0x2d
    4720:	8f ef       	ldi	r24, 0xFF	; 255
    4722:	9f ef       	ldi	r25, 0xFF	; 255
    4724:	16 16       	cp	r1, r22
    4726:	17 06       	cpc	r1, r23
    4728:	14 f0       	brlt	.+4      	; 0x472e <TTapeController::Update()+0x1f6>
    472a:	81 e0       	ldi	r24, 0x01	; 1
    472c:	90 e0       	ldi	r25, 0x00	; 0
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1308 (discriminator 4)
    472e:	68 0f       	add	r22, r24
    4730:	79 1f       	adc	r23, r25
    4732:	7d a7       	std	Y+45, r23	; 0x2d
    4734:	6c a7       	std	Y+44, r22	; 0x2c
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1309 (discriminator 4)
            lcd->ShowDigit9(SearchTrackNumber);         
    4736:	88 a1       	ldd	r24, Y+32	; 0x20
    4738:	99 a1       	ldd	r25, Y+33	; 0x21
    473a:	0e 94 f9 0a 	call	0x15f2	; 0x15f2 <TDisplay::ShowDigit9(int)>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1310 (discriminator 4)
            if (SearchTrackNumber == 0) {
    473e:	8c a5       	ldd	r24, Y+44	; 0x2c
    4740:	9d a5       	ldd	r25, Y+45	; 0x2d
    4742:	89 2b       	or	r24, r25
    4744:	09 f0       	breq	.+2      	; 0x4748 <TTapeController::Update()+0x210>
    4746:	99 c2       	rjmp	.+1330   	; 0x4c7a <TTapeController::Update()+0x742>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1311
                SearchTrack = false;  
    4748:	1b 82       	std	Y+3, r1	; 0x03
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1312
                Play();
    474a:	ce 01       	movw	r24, r28
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1551
        return;
    }



}
    474c:	df 91       	pop	r29
    474e:	cf 91       	pop	r28
    4750:	1f 91       	pop	r17
    4752:	0f 91       	pop	r16
    4754:	ff 90       	pop	r15
    4756:	ef 90       	pop	r14
    4758:	df 90       	pop	r13
    475a:	cf 90       	pop	r12
    475c:	bf 90       	pop	r11
    475e:	af 90       	pop	r10
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1312
            TrackFound = false;
            SearchTrackNumber += (SearchTrackNumber > 0) ? -1 : 1;
            lcd->ShowDigit9(SearchTrackNumber);         
            if (SearchTrackNumber == 0) {
                SearchTrack = false;  
                Play();
    4760:	0c 94 1b 1c 	jmp	0x3836	; 0x3836 <TTapeController::Play()>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1268
        if (found)
            {
                GotoPosition = -1;  
                lcd->ShowDigit(0);
                if (GotoPositionAutoPlay) Play();
                else Stop();
    4764:	ce 01       	movw	r24, r28
    4766:	0e 94 4b 1e 	call	0x3c96	; 0x3c96 <TTapeController::Stop()>
    476a:	88 cf       	rjmp	.-240    	; 0x467c <TTapeController::Update()+0x144>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1287
        direction = -1;
        lcd->DirectionLeft();
        counter->SetDirection(direction);
    }
    else {
        direction = 1;
    476c:	21 e0       	ldi	r18, 0x01	; 1
    476e:	30 e0       	ldi	r19, 0x00	; 0
    4770:	fa 01       	movw	r30, r20
    4772:	31 83       	std	Z+1, r19	; 0x01
    4774:	20 83       	st	Z, r18
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1288
        lcd->DirectionRight();
    4776:	0e 94 cd 0c 	call	0x199a	; 0x199a <TDisplay::DirectionRight()>
    477a:	ba cf       	rjmp	.-140    	; 0x46f0 <TTapeController::Update()+0x1b8>
    477c:	fe 01       	movw	r30, r28
    477e:	e4 57       	subi	r30, 0x74	; 116
    4780:	ff 4f       	sbci	r31, 0xFF	; 255
    4782:	80 81       	ld	r24, Z
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1325


    // Playback of programmed tracks
    if (PlayProgramm) {

        if (!PrepareForProgramm && StateTapeReader && !StartedWithEmptyTape) {
    4784:	8e 01       	movw	r16, r28
    4786:	0e 56       	subi	r16, 0x6E	; 110
    4788:	1f 4f       	sbci	r17, 0xFF	; 255
    478a:	f8 01       	movw	r30, r16
    478c:	90 81       	ld	r25, Z
    478e:	91 11       	cpse	r25, r1
    4790:	2d c0       	rjmp	.+90     	; 0x47ec <TTapeController::Update()+0x2b4>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1325 (discriminator 1)
    4792:	88 23       	and	r24, r24
    4794:	09 f4       	brne	.+2      	; 0x4798 <TTapeController::Update()+0x260>
    4796:	57 c0       	rjmp	.+174    	; 0x4846 <TTapeController::Update()+0x30e>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1325 (discriminator 2)
    4798:	3d 97       	sbiw	r30, 0x0d	; 13
    479a:	80 81       	ld	r24, Z
    479c:	81 11       	cpse	r24, r1
    479e:	53 c0       	rjmp	.+166    	; 0x4846 <TTapeController::Update()+0x30e>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1326
            ToggleDirection();  
    47a0:	ce 01       	movw	r24, r28
    47a2:	0e 94 f4 21 	call	0x43e8	; 0x43e8 <TTapeController::ToggleDirection()>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1327
            ProgrammPosition++;
    47a6:	ea a5       	ldd	r30, Y+42	; 0x2a
    47a8:	fb a5       	ldd	r31, Y+43	; 0x2b
    47aa:	9f 01       	movw	r18, r30
    47ac:	2f 5f       	subi	r18, 0xFF	; 255
    47ae:	3f 4f       	sbci	r19, 0xFF	; 255
    47b0:	3b a7       	std	Y+43, r19	; 0x2b
    47b2:	2a a7       	std	Y+42, r18	; 0x2a
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1328
            if (!Programm[ProgrammPosition]) NextTrack();
    47b4:	78 96       	adiw	r30, 0x18	; 24
    47b6:	ee 0f       	add	r30, r30
    47b8:	ff 1f       	adc	r31, r31
    47ba:	ec 0f       	add	r30, r28
    47bc:	fd 1f       	adc	r31, r29
    47be:	80 81       	ld	r24, Z
    47c0:	91 81       	ldd	r25, Z+1	; 0x01
    47c2:	89 2b       	or	r24, r25
    47c4:	19 f4       	brne	.+6      	; 0x47cc <TTapeController::Update()+0x294>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1328 (discriminator 1)
    47c6:	ce 01       	movw	r24, r28
    47c8:	0e 94 15 20 	call	0x402a	; 0x402a <TTapeController::NextTrack()>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1329
            lcd->ShowDigit(ProgrammPosition);
    47cc:	6a a5       	ldd	r22, Y+42	; 0x2a
    47ce:	7b a5       	ldd	r23, Y+43	; 0x2b
    47d0:	88 a1       	ldd	r24, Y+32	; 0x20
    47d2:	99 a1       	ldd	r25, Y+33	; 0x21
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1551 (discriminator 1)
        return;
    }



}
    47d4:	df 91       	pop	r29
    47d6:	cf 91       	pop	r28
    47d8:	1f 91       	pop	r17
    47da:	0f 91       	pop	r16
    47dc:	ff 90       	pop	r15
    47de:	ef 90       	pop	r14
    47e0:	df 90       	pop	r13
    47e2:	cf 90       	pop	r12
    47e4:	bf 90       	pop	r11
    47e6:	af 90       	pop	r10
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1367 (discriminator 1)
                Play(); 
            }

            
        }
        if (PrepareForProgramm) lcd->ShowDigit(-1);
    47e8:	0c 94 0d 0b 	jmp	0x161a	; 0x161a <TDisplay::ShowDigit(int)>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1333 (discriminator 1)
            if (!Programm[ProgrammPosition]) NextTrack();
            lcd->ShowDigit(ProgrammPosition);
            return;
        }
        
        if (PrepareForProgramm && (StateTapeReader || StateReelMotor)) {
    47ec:	81 11       	cpse	r24, r1
    47ee:	06 c0       	rjmp	.+12     	; 0x47fc <TTapeController::Update()+0x2c4>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1333 (discriminator 2)
    47f0:	fe 01       	movw	r30, r28
    47f2:	e9 54       	subi	r30, 0x49	; 73
    47f4:	ff 4f       	sbci	r31, 0xFF	; 255
    47f6:	80 81       	ld	r24, Z
    47f8:	88 23       	and	r24, r24
    47fa:	29 f1       	breq	.+74     	; 0x4846 <TTapeController::Update()+0x30e>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1334
            Stop();
    47fc:	ce 01       	movw	r24, r28
    47fe:	0e 94 4b 1e 	call	0x3c96	; 0x3c96 <TTapeController::Stop()>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1335
            PrepareForProgramm = false;               
    4802:	f8 01       	movw	r30, r16
    4804:	10 82       	st	Z, r1
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1336
            Play();   
    4806:	ce 01       	movw	r24, r28
    4808:	0e 94 1b 1c 	call	0x3836	; 0x3836 <TTapeController::Play()>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1337
            StartedWithEmptyTape = true;
    480c:	81 e0       	ldi	r24, 0x01	; 1
    480e:	fe 01       	movw	r30, r28
    4810:	eb 57       	subi	r30, 0x7B	; 123
    4812:	ff 4f       	sbci	r31, 0xFF	; 255
    4814:	80 83       	st	Z, r24
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1338
            ProgrammPosition = 1;    
    4816:	81 e0       	ldi	r24, 0x01	; 1
    4818:	90 e0       	ldi	r25, 0x00	; 0
    481a:	9b a7       	std	Y+43, r25	; 0x2b
    481c:	8a a7       	std	Y+42, r24	; 0x2a
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1339
            lcd->ShowDigit(ProgrammPosition);
    481e:	61 e0       	ldi	r22, 0x01	; 1
    4820:	70 e0       	ldi	r23, 0x00	; 0
    4822:	88 a1       	ldd	r24, Y+32	; 0x20
    4824:	99 a1       	ldd	r25, Y+33	; 0x21
    4826:	0e 94 0d 0b 	call	0x161a	; 0x161a <TDisplay::ShowDigit(int)>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1340
            if (!Programm[ProgrammPosition]) NextTrack();
    482a:	ea a5       	ldd	r30, Y+42	; 0x2a
    482c:	fb a5       	ldd	r31, Y+43	; 0x2b
    482e:	77 96       	adiw	r30, 0x17	; 23
    4830:	ee 0f       	add	r30, r30
    4832:	ff 1f       	adc	r31, r31
    4834:	ec 0f       	add	r30, r28
    4836:	fd 1f       	adc	r31, r29
    4838:	80 81       	ld	r24, Z
    483a:	91 81       	ldd	r25, Z+1	; 0x01
    483c:	89 2b       	or	r24, r25
    483e:	19 f4       	brne	.+6      	; 0x4846 <TTapeController::Update()+0x30e>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1340 (discriminator 1)
    4840:	ce 01       	movw	r24, r28
    4842:	0e 94 15 20 	call	0x402a	; 0x402a <TTapeController::NextTrack()>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1344
        }

        // new track found
        if (TrackFound) {
    4846:	fe 01       	movw	r30, r28
    4848:	ec 57       	subi	r30, 0x7C	; 124
    484a:	ff 4f       	sbci	r31, 0xFF	; 255
    484c:	80 81       	ld	r24, Z
    484e:	88 23       	and	r24, r24
    4850:	a1 f1       	breq	.+104    	; 0x48ba <TTapeController::Update()+0x382>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1346
            
            TrackFound = false;
    4852:	10 82       	st	Z, r1
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1347
            ProgrammPosition++;
    4854:	ea a5       	ldd	r30, Y+42	; 0x2a
    4856:	fb a5       	ldd	r31, Y+43	; 0x2b
    4858:	7f 01       	movw	r14, r30
    485a:	4f ef       	ldi	r20, 0xFF	; 255
    485c:	e4 1a       	sub	r14, r20
    485e:	f4 0a       	sbc	r15, r20
    4860:	fb a6       	std	Y+43, r15	; 0x2b
    4862:	ea a6       	std	Y+42, r14	; 0x2a
    4864:	2b 81       	ldd	r18, Y+3	; 0x03
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1350

            
            if (!Programm[ProgrammPosition] && !SearchTrack) {
    4866:	78 96       	adiw	r30, 0x18	; 24
    4868:	ee 0f       	add	r30, r30
    486a:	ff 1f       	adc	r31, r31
    486c:	ec 0f       	add	r30, r28
    486e:	fd 1f       	adc	r31, r29
    4870:	80 81       	ld	r24, Z
    4872:	91 81       	ldd	r25, Z+1	; 0x01
    4874:	89 2b       	or	r24, r25
    4876:	d9 f4       	brne	.+54     	; 0x48ae <TTapeController::Update()+0x376>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1350 (discriminator 1)
    4878:	21 11       	cpse	r18, r1
    487a:	1f c0       	rjmp	.+62     	; 0x48ba <TTapeController::Update()+0x382>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1352

                if (!AnyProgrammedTracksAfter(ProgrammPosition) || ProgrammPosition == MAX_PROGRAMM_LENGTH) EndProgramm();
    487c:	b7 01       	movw	r22, r14
    487e:	ce 01       	movw	r24, r28
    4880:	0e 94 b9 15 	call	0x2b72	; 0x2b72 <TTapeController::AnyProgrammedTracksAfter(int)>
    4884:	88 23       	and	r24, r24
    4886:	31 f0       	breq	.+12     	; 0x4894 <TTapeController::Update()+0x35c>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1352 (discriminator 2)
    4888:	8e 81       	ldd	r24, Y+6	; 0x06
    488a:	9f 81       	ldd	r25, Y+7	; 0x07
    488c:	e8 16       	cp	r14, r24
    488e:	f9 06       	cpc	r15, r25
    4890:	09 f0       	breq	.+2      	; 0x4894 <TTapeController::Update()+0x35c>
    4892:	99 cf       	rjmp	.-206    	; 0x47c6 <TTapeController::Update()+0x28e>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1352 (discriminator 7)
    4894:	ce 01       	movw	r24, r28
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1551 (discriminator 7)
        return;
    }



}
    4896:	df 91       	pop	r29
    4898:	cf 91       	pop	r28
    489a:	1f 91       	pop	r17
    489c:	0f 91       	pop	r16
    489e:	ff 90       	pop	r15
    48a0:	ef 90       	pop	r14
    48a2:	df 90       	pop	r13
    48a4:	cf 90       	pop	r12
    48a6:	bf 90       	pop	r11
    48a8:	af 90       	pop	r10
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1352 (discriminator 7)
            ProgrammPosition++;

            
            if (!Programm[ProgrammPosition] && !SearchTrack) {

                if (!AnyProgrammedTracksAfter(ProgrammPosition) || ProgrammPosition == MAX_PROGRAMM_LENGTH) EndProgramm();
    48aa:	0c 94 41 21 	jmp	0x4282	; 0x4282 <TTapeController::EndProgramm()>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1360 (discriminator 1)
                    lcd->ShowDigit(ProgrammPosition);
                }
                return;
            }

            if (Programm[ProgrammPosition] && SearchTrack) {
    48ae:	22 23       	and	r18, r18
    48b0:	21 f0       	breq	.+8      	; 0x48ba <TTapeController::Update()+0x382>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1361
                SearchTrack = false;
    48b2:	1b 82       	std	Y+3, r1	; 0x03
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1362
                Play(); 
    48b4:	ce 01       	movw	r24, r28
    48b6:	0e 94 1b 1c 	call	0x3836	; 0x3836 <TTapeController::Play()>
    48ba:	88 a1       	ldd	r24, Y+32	; 0x20
    48bc:	99 a1       	ldd	r25, Y+33	; 0x21
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1367
            }

            
        }
        if (PrepareForProgramm) lcd->ShowDigit(-1);
    48be:	f8 01       	movw	r30, r16
    48c0:	20 81       	ld	r18, Z
    48c2:	22 23       	and	r18, r18
    48c4:	19 f0       	breq	.+6      	; 0x48cc <TTapeController::Update()+0x394>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1367 (discriminator 1)
    48c6:	6f ef       	ldi	r22, 0xFF	; 255
    48c8:	7f ef       	ldi	r23, 0xFF	; 255
    48ca:	84 cf       	rjmp	.-248    	; 0x47d4 <TTapeController::Update()+0x29c>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1368
        else lcd->ShowDigit(ProgrammPosition);
    48cc:	6a a5       	ldd	r22, Y+42	; 0x2a
    48ce:	7b a5       	ldd	r23, Y+43	; 0x2b
    48d0:	81 cf       	rjmp	.-254    	; 0x47d4 <TTapeController::Update()+0x29c>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1373
        return;
    }

    // when fast winding, check if tape is at the end 
    if (FastWinding != fwNone) {
    48d2:	6e 01       	movw	r12, r28
    48d4:	fe eb       	ldi	r31, 0xBE	; 190
    48d6:	cf 0e       	add	r12, r31
    48d8:	d1 1c       	adc	r13, r1
    48da:	f6 01       	movw	r30, r12
    48dc:	80 81       	ld	r24, Z
    48de:	91 81       	ldd	r25, Z+1	; 0x01
    48e0:	00 97       	sbiw	r24, 0x00	; 0
    48e2:	61 f0       	breq	.+24     	; 0x48fc <TTapeController::Update()+0x3c4>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1375
   
        if (StateTapeReader || StateReelMotor) {
    48e4:	f2 97       	sbiw	r30, 0x32	; 50
    48e6:	20 81       	ld	r18, Z
    48e8:	ae 01       	movw	r20, r28
    48ea:	49 54       	subi	r20, 0x49	; 73
    48ec:	5f 4f       	sbci	r21, 0xFF	; 255
    48ee:	5a 01       	movw	r10, r20
    48f0:	21 11       	cpse	r18, r1
    48f2:	89 c1       	rjmp	.+786    	; 0x4c06 <TTapeController::Update()+0x6ce>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1375 (discriminator 1)
    48f4:	fa 01       	movw	r30, r20
    48f6:	10 81       	ld	r17, Z
    48f8:	11 11       	cpse	r17, r1
    48fa:	82 c1       	rjmp	.+772    	; 0x4c00 <TTapeController::Update()+0x6c8>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1405
  
    }



    if (Recording && RecordDiskEnd && (RecordMode == recAuto || RecordMode == recSync)) {
    48fc:	6e 01       	movw	r12, r28
    48fe:	f2 e8       	ldi	r31, 0x82	; 130
    4900:	cf 0e       	add	r12, r31
    4902:	d1 1c       	adc	r13, r1
    4904:	f6 01       	movw	r30, r12
    4906:	80 81       	ld	r24, Z
    4908:	88 23       	and	r24, r24
    490a:	e1 f1       	breq	.+120    	; 0x4984 <TTapeController::Update()+0x44c>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1405 (discriminator 1)
    490c:	3d 96       	adiw	r30, 0x0d	; 13
    490e:	20 81       	ld	r18, Z
    4910:	22 23       	and	r18, r18
    4912:	c9 f0       	breq	.+50     	; 0x4946 <TTapeController::Update()+0x40e>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1405 (discriminator 2)
    4914:	bd 96       	adiw	r30, 0x2d	; 45
    4916:	80 81       	ld	r24, Z
    4918:	91 81       	ldd	r25, Z+1	; 0x01
    491a:	02 97       	sbiw	r24, 0x02	; 2
    491c:	02 97       	sbiw	r24, 0x02	; 2
    491e:	98 f4       	brcc	.+38     	; 0x4946 <TTapeController::Update()+0x40e>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1407
        #ifdef DEBUG
            Serial.println("> Disc end, stop recording");
    4920:	68 e6       	ldi	r22, 0x68	; 104
    4922:	76 e0       	ldi	r23, 0x06	; 6
    4924:	82 ed       	ldi	r24, 0xD2	; 210
    4926:	9a e0       	ldi	r25, 0x0A	; 10
    4928:	0e 94 e9 37 	call	0x6fd2	; 0x6fd2 <Print::println(char const*)>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1481


            switch(ReverseMode)
            {
                case rmNone:
                    Stop();
    492c:	ce 01       	movw	r24, r28
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1551
        return;
    }



}
    492e:	df 91       	pop	r29
    4930:	cf 91       	pop	r28
    4932:	1f 91       	pop	r17
    4934:	0f 91       	pop	r16
    4936:	ff 90       	pop	r15
    4938:	ef 90       	pop	r14
    493a:	df 90       	pop	r13
    493c:	cf 90       	pop	r12
    493e:	bf 90       	pop	r11
    4940:	af 90       	pop	r10
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1481


            switch(ReverseMode)
            {
                case rmNone:
                    Stop();
    4942:	0c 94 4b 1e 	jmp	0x3c96	; 0x3c96 <TTapeController::Stop()>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1414 (discriminator 1)
        Stop();
        return;
    }

    // Synchronised record from CD
    if (Recording && !paused && RecordMode != recOn) {
    4946:	fe 01       	movw	r30, r28
    4948:	ea 54       	subi	r30, 0x4A	; 74
    494a:	ff 4f       	sbci	r31, 0xFF	; 255
    494c:	80 81       	ld	r24, Z
    494e:	81 11       	cpse	r24, r1
    4950:	19 c0       	rjmp	.+50     	; 0x4984 <TTapeController::Update()+0x44c>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1414 (discriminator 2)
    4952:	36 96       	adiw	r30, 0x06	; 6
    4954:	80 81       	ld	r24, Z
    4956:	91 81       	ldd	r25, Z+1	; 0x01
    4958:	01 97       	sbiw	r24, 0x01	; 1
    495a:	a1 f0       	breq	.+40     	; 0x4984 <TTapeController::Update()+0x44c>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1416

        if (RecordDiskEnd) {
    495c:	22 23       	and	r18, r18
    495e:	69 f0       	breq	.+26     	; 0x497a <TTapeController::Update()+0x442>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1417
            Pause();
    4960:	ce 01       	movw	r24, r28
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1551
        return;
    }



}
    4962:	df 91       	pop	r29
    4964:	cf 91       	pop	r28
    4966:	1f 91       	pop	r17
    4968:	0f 91       	pop	r16
    496a:	ff 90       	pop	r15
    496c:	ef 90       	pop	r14
    496e:	df 90       	pop	r13
    4970:	cf 90       	pop	r12
    4972:	bf 90       	pop	r11
    4974:	af 90       	pop	r10
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1417

    // Synchronised record from CD
    if (Recording && !paused && RecordMode != recOn) {

        if (RecordDiskEnd) {
            Pause();
    4976:	0c 94 28 1a 	jmp	0x3450	; 0x3450 <TTapeController::Pause()>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1424
        }
   /*     if (digitalRead(CD_INPUT_PAUSE) == LOW) {
            Pause();
            return;
        }*/
        if (digitalRead(CD_INPUT_STOP) == LOW) {
    497a:	8e 8d       	ldd	r24, Y+30	; 0x1e
    497c:	0e 94 82 35 	call	0x6b04	; 0x6b04 <digitalRead>
    4980:	89 2b       	or	r24, r25
    4982:	71 f3       	breq	.-36     	; 0x4960 <TTapeController::Update()+0x428>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1433
    }



    // when playing check for tape and if any reverse modes are active
    if (playing) {
    4984:	fe 01       	movw	r30, r28
    4986:	eb 54       	subi	r30, 0x4B	; 75
    4988:	ff 4f       	sbci	r31, 0xFF	; 255
    498a:	80 81       	ld	r24, Z
    498c:	88 23       	and	r24, r24
    498e:	09 f4       	brne	.+2      	; 0x4992 <TTapeController::Update()+0x45a>
    4990:	98 c0       	rjmp	.+304    	; 0x4ac2 <TTapeController::Update()+0x58a>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1435
        
        if (StopWhenTapeStarts && !StateTapeReader) {
    4992:	bf 97       	sbiw	r30, 0x2f	; 47
    4994:	80 81       	ld	r24, Z
    4996:	88 23       	and	r24, r24
    4998:	29 f1       	breq	.+74     	; 0x49e4 <TTapeController::Update()+0x4ac>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1435 (discriminator 1)
    499a:	de 01       	movw	r26, r28
    499c:	a4 57       	subi	r26, 0x74	; 116
    499e:	bf 4f       	sbci	r27, 0xFF	; 255
    49a0:	8c 91       	ld	r24, X
    49a2:	81 11       	cpse	r24, r1
    49a4:	1f c0       	rjmp	.+62     	; 0x49e4 <TTapeController::Update()+0x4ac>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1436
            StopWhenTapeStarts = false;
    49a6:	10 82       	st	Z, r1
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1437
            Stop();
    49a8:	ce 01       	movw	r24, r28
    49aa:	0e 94 4b 1e 	call	0x3c96	; 0x3c96 <TTapeController::Stop()>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1438
            lcd->BlinkRecord(false);
    49ae:	60 e0       	ldi	r22, 0x00	; 0
    49b0:	88 a1       	ldd	r24, Y+32	; 0x20
    49b2:	99 a1       	ldd	r25, Y+33	; 0x21
    49b4:	0e 94 eb 0a 	call	0x15d6	; 0x15d6 <TDisplay::BlinkRecord(bool)>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1439
            lcd->RecordMode(recOn);
    49b8:	61 e0       	ldi	r22, 0x01	; 1
    49ba:	70 e0       	ldi	r23, 0x00	; 0
    49bc:	88 a1       	ldd	r24, Y+32	; 0x20
    49be:	99 a1       	ldd	r25, Y+33	; 0x21
    49c0:	0e 94 fc 0c 	call	0x19f8	; 0x19f8 <TDisplay::RecordMode(int)>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1441
            #ifdef DEBUG
                Serial.println("Tape ready for record"); 
    49c4:	63 e8       	ldi	r22, 0x83	; 131
    49c6:	76 e0       	ldi	r23, 0x06	; 6
    49c8:	82 ed       	ldi	r24, 0xD2	; 210
    49ca:	9a e0       	ldi	r25, 0x0A	; 10
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1551
        return;
    }



}
    49cc:	df 91       	pop	r29
    49ce:	cf 91       	pop	r28
    49d0:	1f 91       	pop	r17
    49d2:	0f 91       	pop	r16
    49d4:	ff 90       	pop	r15
    49d6:	ef 90       	pop	r14
    49d8:	df 90       	pop	r13
    49da:	cf 90       	pop	r12
    49dc:	bf 90       	pop	r11
    49de:	af 90       	pop	r10
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1441
            StopWhenTapeStarts = false;
            Stop();
            lcd->BlinkRecord(false);
            lcd->RecordMode(recOn);
            #ifdef DEBUG
                Serial.println("Tape ready for record"); 
    49e0:	0c 94 e9 37 	jmp	0x6fd2	; 0x6fd2 <Print::println(char const*)>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1447
            #endif 
            return;
        }


        if (StartedWithEmptyTape && !StateTapeReader) {
    49e4:	8e 01       	movw	r16, r28
    49e6:	0b 57       	subi	r16, 0x7B	; 123
    49e8:	1f 4f       	sbci	r17, 0xFF	; 255
    49ea:	f8 01       	movw	r30, r16
    49ec:	80 81       	ld	r24, Z
    49ee:	88 23       	and	r24, r24
    49f0:	61 f0       	breq	.+24     	; 0x4a0a <TTapeController::Update()+0x4d2>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1447 (discriminator 1)
    49f2:	37 96       	adiw	r30, 0x07	; 7
    49f4:	80 81       	ld	r24, Z
    49f6:	81 11       	cpse	r24, r1
    49f8:	08 c0       	rjmp	.+16     	; 0x4a0a <TTapeController::Update()+0x4d2>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1448
           StartedWithEmptyTape = false;
    49fa:	f8 01       	movw	r30, r16
    49fc:	10 82       	st	Z, r1
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1450
           #ifdef DEBUG
                Serial.println(">StartedWithEmptyTape = false");  
    49fe:	69 e9       	ldi	r22, 0x99	; 153
    4a00:	76 e0       	ldi	r23, 0x06	; 6
    4a02:	82 ed       	ldi	r24, 0xD2	; 210
    4a04:	9a e0       	ldi	r25, 0x0A	; 10
    4a06:	0e 94 e9 37 	call	0x6fd2	; 0x6fd2 <Print::println(char const*)>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1455
           #endif 
        }

  
        if (StateReelMotor || (StateTapeReader && !StartedWithEmptyTape)) {
    4a0a:	fe 01       	movw	r30, r28
    4a0c:	e9 54       	subi	r30, 0x49	; 73
    4a0e:	ff 4f       	sbci	r31, 0xFF	; 255
    4a10:	80 81       	ld	r24, Z
    4a12:	81 11       	cpse	r24, r1
    4a14:	09 c0       	rjmp	.+18     	; 0x4a28 <TTapeController::Update()+0x4f0>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1455 (discriminator 1)
    4a16:	bb 97       	sbiw	r30, 0x2b	; 43
    4a18:	80 81       	ld	r24, Z
    4a1a:	88 23       	and	r24, r24
    4a1c:	09 f4       	brne	.+2      	; 0x4a20 <TTapeController::Update()+0x4e8>
    4a1e:	51 c0       	rjmp	.+162    	; 0x4ac2 <TTapeController::Update()+0x58a>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1455 (discriminator 2)
    4a20:	f8 01       	movw	r30, r16
    4a22:	80 81       	ld	r24, Z
    4a24:	81 11       	cpse	r24, r1
    4a26:	4d c0       	rjmp	.+154    	; 0x4ac2 <TTapeController::Update()+0x58a>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1456
            if (paused) return;
    4a28:	fe 01       	movw	r30, r28
    4a2a:	ea 54       	subi	r30, 0x4A	; 74
    4a2c:	ff 4f       	sbci	r31, 0xFF	; 255
    4a2e:	80 81       	ld	r24, Z
    4a30:	81 11       	cpse	r24, r1
    4a32:	23 c1       	rjmp	.+582    	; 0x4c7a <TTapeController::Update()+0x742>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1457
            if (Recording) {
    4a34:	f6 01       	movw	r30, r12
    4a36:	80 81       	ld	r24, Z
    4a38:	8e 01       	movw	r16, r28
    4a3a:	06 54       	subi	r16, 0x46	; 70
    4a3c:	1f 4f       	sbci	r17, 0xFF	; 255
    4a3e:	88 23       	and	r24, r24
    4a40:	09 f1       	breq	.+66     	; 0x4a84 <TTapeController::Update()+0x54c>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1459
                #ifdef DEBUG
                    Serial.println(">RecReverseMode indicated");  
    4a42:	67 eb       	ldi	r22, 0xB7	; 183
    4a44:	76 e0       	ldi	r23, 0x06	; 6
    4a46:	82 ed       	ldi	r24, 0xD2	; 210
    4a48:	9a e0       	ldi	r25, 0x0A	; 10
    4a4a:	0e 94 e9 37 	call	0x6fd2	; 0x6fd2 <Print::println(char const*)>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1460
                    Serial.println(ReverseMode);
    4a4e:	f8 01       	movw	r30, r16
    4a50:	60 81       	ld	r22, Z
    4a52:	71 81       	ldd	r23, Z+1	; 0x01
    4a54:	4a e0       	ldi	r20, 0x0A	; 10
    4a56:	50 e0       	ldi	r21, 0x00	; 0
    4a58:	82 ed       	ldi	r24, 0xD2	; 210
    4a5a:	9a e0       	ldi	r25, 0x0A	; 10
    4a5c:	0e 94 9b 38 	call	0x7136	; 0x7136 <Print::println(int, int)>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1462
                #endif                
                if (ReverseMode == rmBothSides) {
    4a60:	f8 01       	movw	r30, r16
    4a62:	80 81       	ld	r24, Z
    4a64:	91 81       	ldd	r25, Z+1	; 0x01
    4a66:	02 97       	sbiw	r24, 0x02	; 2
    4a68:	09 f0       	breq	.+2      	; 0x4a6c <TTapeController::Update()+0x534>
    4a6a:	60 cf       	rjmp	.-320    	; 0x492c <TTapeController::Update()+0x3f4>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1464
                   
                    ToggleDirection();
    4a6c:	ce 01       	movw	r24, r28
    4a6e:	0e 94 f4 21 	call	0x43e8	; 0x43e8 <TTapeController::ToggleDirection()>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1465
                    ReverseMode = rmNone;
    4a72:	f8 01       	movw	r30, r16
    4a74:	11 82       	std	Z+1, r1	; 0x01
    4a76:	10 82       	st	Z, r1
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1466
                    if (CheckIfRecordingIsPossible()) return;
    4a78:	ce 01       	movw	r24, r28
    4a7a:	0e 94 5c 21 	call	0x42b8	; 0x42b8 <TTapeController::CheckIfRecordingIsPossible()>
    4a7e:	81 11       	cpse	r24, r1
    4a80:	fc c0       	rjmp	.+504    	; 0x4c7a <TTapeController::Update()+0x742>
    4a82:	54 cf       	rjmp	.-344    	; 0x492c <TTapeController::Update()+0x3f4>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1473
              
                Stop();
                return;
            }
            #ifdef DEBUG
                Serial.print("End of tape detected. Reverse Mode:");
    4a84:	61 ed       	ldi	r22, 0xD1	; 209
    4a86:	76 e0       	ldi	r23, 0x06	; 6
    4a88:	82 ed       	ldi	r24, 0xD2	; 210
    4a8a:	9a e0       	ldi	r25, 0x0A	; 10
    4a8c:	0e 94 c4 37 	call	0x6f88	; 0x6f88 <Print::print(char const*)>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1474
                Serial.println(ReverseMode);
    4a90:	f8 01       	movw	r30, r16
    4a92:	60 81       	ld	r22, Z
    4a94:	71 81       	ldd	r23, Z+1	; 0x01
    4a96:	4a e0       	ldi	r20, 0x0A	; 10
    4a98:	50 e0       	ldi	r21, 0x00	; 0
    4a9a:	82 ed       	ldi	r24, 0xD2	; 210
    4a9c:	9a e0       	ldi	r25, 0x0A	; 10
    4a9e:	0e 94 9b 38 	call	0x7136	; 0x7136 <Print::println(int, int)>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1478
            #endif


            switch(ReverseMode)
    4aa2:	f8 01       	movw	r30, r16
    4aa4:	80 81       	ld	r24, Z
    4aa6:	91 81       	ldd	r25, Z+1	; 0x01
    4aa8:	81 30       	cpi	r24, 0x01	; 1
    4aaa:	91 05       	cpc	r25, r1
    4aac:	09 f4       	brne	.+2      	; 0x4ab0 <TTapeController::Update()+0x578>
    4aae:	5a c0       	rjmp	.+180    	; 0x4b64 <TTapeController::Update()+0x62c>
    4ab0:	08 f4       	brcc	.+2      	; 0x4ab4 <TTapeController::Update()+0x57c>
    4ab2:	3c cf       	rjmp	.-392    	; 0x492c <TTapeController::Update()+0x3f4>
    4ab4:	82 30       	cpi	r24, 0x02	; 2
    4ab6:	91 05       	cpc	r25, r1
    4ab8:	09 f4       	brne	.+2      	; 0x4abc <TTapeController::Update()+0x584>
    4aba:	6e c0       	rjmp	.+220    	; 0x4b98 <TTapeController::Update()+0x660>
    4abc:	03 97       	sbiw	r24, 0x03	; 3
    4abe:	09 f4       	brne	.+2      	; 0x4ac2 <TTapeController::Update()+0x58a>
    4ac0:	8c c0       	rjmp	.+280    	; 0x4bda <TTapeController::Update()+0x6a2>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1526


    // check the server slide position at the start up
    // needs to be done otherwise the lid cannot be opened
    // if the system hangs. replaces hardware integration around 7517
    if (StartUp) {
    4ac2:	8e 01       	movw	r16, r28
    4ac4:	0c 54       	subi	r16, 0x4C	; 76
    4ac6:	1f 4f       	sbci	r17, 0xFF	; 255
    4ac8:	f8 01       	movw	r30, r16
    4aca:	80 81       	ld	r24, Z
    4acc:	88 23       	and	r24, r24
    4ace:	09 f4       	brne	.+2      	; 0x4ad2 <TTapeController::Update()+0x59a>
    4ad0:	d4 c0       	rjmp	.+424    	; 0x4c7a <TTapeController::Update()+0x742>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1527
        SetMute(true);
    4ad2:	61 e0       	ldi	r22, 0x01	; 1
    4ad4:	ce 01       	movw	r24, r28
    4ad6:	0e 94 fd 17 	call	0x2ffa	; 0x2ffa <TTapeController::SetMute(bool)>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1528
        StartUp = false;
    4ada:	f8 01       	movw	r30, r16
    4adc:	10 82       	st	Z, r1
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1529
        if (StateSlideServoUp) {
    4ade:	0b 52       	subi	r16, 0x2B	; 43
    4ae0:	11 09       	sbc	r17, r1
    4ae2:	f8 01       	movw	r30, r16
    4ae4:	80 81       	ld	r24, Z
    4ae6:	88 23       	and	r24, r24
    4ae8:	21 f1       	breq	.+72     	; 0x4b32 <TTapeController::Update()+0x5fa>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1530
            digitalWrite(SET_CAPSTAN_MOTOR, HIGH);
    4aea:	61 e0       	ldi	r22, 0x01	; 1
    4aec:	8e 85       	ldd	r24, Y+14	; 0x0e
    4aee:	0e 94 54 35 	call	0x6aa8	; 0x6aa8 <digitalWrite>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1531
            PushSlideServo();
    4af2:	ce 01       	movw	r24, r28
    4af4:	0e 94 42 18 	call	0x3084	; 0x3084 <TTapeController::PushSlideServo()>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1532
            delay(500); 
    4af8:	64 ef       	ldi	r22, 0xF4	; 244
    4afa:	71 e0       	ldi	r23, 0x01	; 1
    4afc:	80 e0       	ldi	r24, 0x00	; 0
    4afe:	90 e0       	ldi	r25, 0x00	; 0
    4b00:	0e 94 75 34 	call	0x68ea	; 0x68ea <delay>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1533
            digitalWrite(SET_CAPSTAN_MOTOR, LOW);
    4b04:	60 e0       	ldi	r22, 0x00	; 0
    4b06:	8e 85       	ldd	r24, Y+14	; 0x0e
    4b08:	0e 94 54 35 	call	0x6aa8	; 0x6aa8 <digitalWrite>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1534
            GetState();
    4b0c:	ce 01       	movw	r24, r28
    4b0e:	0e 94 b3 19 	call	0x3366	; 0x3366 <TTapeController::GetState()>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1535
            if (StateSlideServoUp) {
    4b12:	f8 01       	movw	r30, r16
    4b14:	80 81       	ld	r24, Z
    4b16:	88 23       	and	r24, r24
    4b18:	61 f0       	breq	.+24     	; 0x4b32 <TTapeController::Update()+0x5fa>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1537
            #ifdef DEBUG
                Serial.println("+init StateSlideServoUp");
    4b1a:	65 ef       	ldi	r22, 0xF5	; 245
    4b1c:	76 e0       	ldi	r23, 0x06	; 6
    4b1e:	82 ed       	ldi	r24, 0xD2	; 210
    4b20:	9a e0       	ldi	r25, 0x0A	; 10
    4b22:	0e 94 e9 37 	call	0x6fd2	; 0x6fd2 <Print::println(char const*)>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1539
            #endif
            lcd->ShowError(1);
    4b26:	61 e0       	ldi	r22, 0x01	; 1
    4b28:	70 e0       	ldi	r23, 0x00	; 0
    4b2a:	88 a1       	ldd	r24, Y+32	; 0x20
    4b2c:	99 a1       	ldd	r25, Y+33	; 0x21
    4b2e:	0e 94 52 0b 	call	0x16a4	; 0x16a4 <TDisplay::ShowError(short)>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1542
            } 
        }
        ReverseMode = (TReverseMode)counter->RestoreReverseMode();
    4b32:	8c a1       	ldd	r24, Y+36	; 0x24
    4b34:	9d a1       	ldd	r25, Y+37	; 0x25
    4b36:	0e 94 d9 08 	call	0x11b2	; 0x11b2 <TCounter::RestoreReverseMode()>
    4b3a:	8e 01       	movw	r16, r28
    4b3c:	06 54       	subi	r16, 0x46	; 70
    4b3e:	1f 4f       	sbci	r17, 0xFF	; 255
    4b40:	f8 01       	movw	r30, r16
    4b42:	91 83       	std	Z+1, r25	; 0x01
    4b44:	80 83       	st	Z, r24
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1543
        if (StateRecord) MoveRecPlaybackLever();
    4b46:	f0 97       	sbiw	r30, 0x30	; 48
    4b48:	80 81       	ld	r24, Z
    4b4a:	88 23       	and	r24, r24
    4b4c:	19 f0       	breq	.+6      	; 0x4b54 <TTapeController::Update()+0x61c>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1543 (discriminator 1)
    4b4e:	ce 01       	movw	r24, r28
    4b50:	0e 94 73 1a 	call	0x34e6	; 0x34e6 <TTapeController::MoveRecPlaybackLever()>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1544
        lcd->Clear();
    4b54:	88 a1       	ldd	r24, Y+32	; 0x20
    4b56:	99 a1       	ldd	r25, Y+33	; 0x21
    4b58:	0e 94 5a 0b 	call	0x16b4	; 0x16b4 <TDisplay::Clear()>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1545
        lcd->ReverseMode((int)ReverseMode);
    4b5c:	f8 01       	movw	r30, r16
    4b5e:	60 81       	ld	r22, Z
    4b60:	71 81       	ldd	r23, Z+1	; 0x01
    4b62:	2d c0       	rjmp	.+90     	; 0x4bbe <TTapeController::Update()+0x686>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1485
                case rmNone:
                    Stop();
                    return;

                case rmOneSide:
                    Stop();
    4b64:	ce 01       	movw	r24, r28
    4b66:	0e 94 4b 1e 	call	0x3c96	; 0x3c96 <TTapeController::Stop()>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1486
                    delay(500);
    4b6a:	64 ef       	ldi	r22, 0xF4	; 244
    4b6c:	71 e0       	ldi	r23, 0x01	; 1
    4b6e:	80 e0       	ldi	r24, 0x00	; 0
    4b70:	90 e0       	ldi	r25, 0x00	; 0
    4b72:	0e 94 75 34 	call	0x68ea	; 0x68ea <delay>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1487
                    if (direction < 0) {
    4b76:	f7 01       	movw	r30, r14
    4b78:	80 81       	ld	r24, Z
    4b7a:	91 81       	ldd	r25, Z+1	; 0x01
    4b7c:	97 ff       	sbrs	r25, 7
    4b7e:	08 c0       	rjmp	.+16     	; 0x4b90 <TTapeController::Update()+0x658>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1488
                        WindRight();
    4b80:	ce 01       	movw	r24, r28
    4b82:	0e 94 e2 1a 	call	0x35c4	; 0x35c4 <TTapeController::WindRight()>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1494
                    }
                    else {
                        WindLeft();
                    }       
                    
                    RewindOneSide = true;
    4b86:	c8 54       	subi	r28, 0x48	; 72
    4b88:	df 4f       	sbci	r29, 0xFF	; 255
    4b8a:	81 e0       	ldi	r24, 0x01	; 1
    4b8c:	88 83       	st	Y, r24
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1495
                    return;
    4b8e:	75 c0       	rjmp	.+234    	; 0x4c7a <TTapeController::Update()+0x742>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1491
                    delay(500);
                    if (direction < 0) {
                        WindRight();
                    }
                    else {
                        WindLeft();
    4b90:	ce 01       	movw	r24, r28
    4b92:	0e 94 0c 1f 	call	0x3e18	; 0x3e18 <TTapeController::WindLeft()>
    4b96:	f7 cf       	rjmp	.-18     	; 0x4b86 <TTapeController::Update()+0x64e>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1498
                    
                    RewindOneSide = true;
                    return;

                case rmBothSides:
                    if (RepeatSecondSide) {
    4b98:	7e 01       	movw	r14, r28
    4b9a:	f9 eb       	ldi	r31, 0xB9	; 185
    4b9c:	ef 0e       	add	r14, r31
    4b9e:	f1 1c       	adc	r15, r1
    4ba0:	f7 01       	movw	r30, r14
    4ba2:	80 81       	ld	r24, Z
    4ba4:	81 11       	cpse	r24, r1
    4ba6:	c2 ce       	rjmp	.-636    	; 0x492c <TTapeController::Update()+0x3f4>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1502
                        Stop();
                        return;
                    }
                    ToggleDirection();
    4ba8:	ce 01       	movw	r24, r28
    4baa:	0e 94 f4 21 	call	0x43e8	; 0x43e8 <TTapeController::ToggleDirection()>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1503
                    RepeatSecondSide = true;
    4bae:	81 e0       	ldi	r24, 0x01	; 1
    4bb0:	f7 01       	movw	r30, r14
    4bb2:	80 83       	st	Z, r24
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1504
                    ReverseMode = rmNone;
    4bb4:	f8 01       	movw	r30, r16
    4bb6:	11 82       	std	Z+1, r1	; 0x01
    4bb8:	10 82       	st	Z, r1
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1505
                    lcd->ReverseMode(ReverseMode);                 
    4bba:	70 e0       	ldi	r23, 0x00	; 0
    4bbc:	60 e0       	ldi	r22, 0x00	; 0
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1545
            } 
        }
        ReverseMode = (TReverseMode)counter->RestoreReverseMode();
        if (StateRecord) MoveRecPlaybackLever();
        lcd->Clear();
        lcd->ReverseMode((int)ReverseMode);
    4bbe:	88 a1       	ldd	r24, Y+32	; 0x20
    4bc0:	99 a1       	ldd	r25, Y+33	; 0x21
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1551
        return;
    }



}
    4bc2:	df 91       	pop	r29
    4bc4:	cf 91       	pop	r28
    4bc6:	1f 91       	pop	r17
    4bc8:	0f 91       	pop	r16
    4bca:	ff 90       	pop	r15
    4bcc:	ef 90       	pop	r14
    4bce:	df 90       	pop	r13
    4bd0:	cf 90       	pop	r12
    4bd2:	bf 90       	pop	r11
    4bd4:	af 90       	pop	r10
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1545
            } 
        }
        ReverseMode = (TReverseMode)counter->RestoreReverseMode();
        if (StateRecord) MoveRecPlaybackLever();
        lcd->Clear();
        lcd->ReverseMode((int)ReverseMode);
    4bd6:	0c 94 72 0d 	jmp	0x1ae4	; 0x1ae4 <TDisplay::ReverseMode(int)>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1510
                    lcd->ReverseMode(ReverseMode);                 

                    return;

                case rmEndless:
                    ToggleDirection();
    4bda:	ce 01       	movw	r24, r28
    4bdc:	0e 94 f4 21 	call	0x43e8	; 0x43e8 <TTapeController::ToggleDirection()>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1511
                    delay(1000);
    4be0:	68 ee       	ldi	r22, 0xE8	; 232
    4be2:	73 e0       	ldi	r23, 0x03	; 3
    4be4:	80 e0       	ldi	r24, 0x00	; 0
    4be6:	90 e0       	ldi	r25, 0x00	; 0
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1551
        return;
    }



}
    4be8:	df 91       	pop	r29
    4bea:	cf 91       	pop	r28
    4bec:	1f 91       	pop	r17
    4bee:	0f 91       	pop	r16
    4bf0:	ff 90       	pop	r15
    4bf2:	ef 90       	pop	r14
    4bf4:	df 90       	pop	r13
    4bf6:	cf 90       	pop	r12
    4bf8:	bf 90       	pop	r11
    4bfa:	af 90       	pop	r10
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1511

                    return;

                case rmEndless:
                    ToggleDirection();
                    delay(1000);
    4bfc:	0c 94 75 34 	jmp	0x68ea	; 0x68ea <delay>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1381

            // in case of rewind and tape end just put a little bit forward
            // only to avoid that the tape is on the very end and the tape reader
            // cannot shine through because of a splice

            bool NeedToStart = (FastWinding == fwRewind && StateReelMotor && !StateTapeReader) || RewindOneSide;
    4c00:	82 30       	cpi	r24, 0x02	; 2
    4c02:	91 05       	cpc	r25, r1
    4c04:	31 f0       	breq	.+12     	; 0x4c12 <TTapeController::Update()+0x6da>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1381 (discriminator 6)
    4c06:	fe 01       	movw	r30, r28
    4c08:	e8 54       	subi	r30, 0x48	; 72
    4c0a:	ff 4f       	sbci	r31, 0xFF	; 255
    4c0c:	10 81       	ld	r17, Z
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1383 (discriminator 6)
        
            if (FastWinding == fwRewind) counter->Reset();
    4c0e:	02 97       	sbiw	r24, 0x02	; 2
    4c10:	21 f4       	brne	.+8      	; 0x4c1a <TTapeController::Update()+0x6e2>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1383 (discriminator 1)
    4c12:	8c a1       	ldd	r24, Y+36	; 0x24
    4c14:	9d a1       	ldd	r25, Y+37	; 0x25
    4c16:	0e 94 7d 09 	call	0x12fa	; 0x12fa <TCounter::Reset()>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1386
                       
            #ifdef DEBUG
                Serial.println("> Cass reached its end");
    4c1a:	69 ef       	ldi	r22, 0xF9	; 249
    4c1c:	75 e0       	ldi	r23, 0x05	; 5
    4c1e:	82 ed       	ldi	r24, 0xD2	; 210
    4c20:	9a e0       	ldi	r25, 0x0A	; 10
    4c22:	0e 94 e9 37 	call	0x6fd2	; 0x6fd2 <Print::println(char const*)>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1387
                if (StateReelMotor) Serial.println("> detected by StateReelMotor");
    4c26:	f5 01       	movw	r30, r10
    4c28:	80 81       	ld	r24, Z
    4c2a:	60 e1       	ldi	r22, 0x10	; 16
    4c2c:	76 e0       	ldi	r23, 0x06	; 6
    4c2e:	81 11       	cpse	r24, r1
    4c30:	02 c0       	rjmp	.+4      	; 0x4c36 <TTapeController::Update()+0x6fe>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1388
                else Serial.println("> detected by StateTapeReader");
    4c32:	6d e2       	ldi	r22, 0x2D	; 45
    4c34:	76 e0       	ldi	r23, 0x06	; 6
    4c36:	82 ed       	ldi	r24, 0xD2	; 210
    4c38:	9a e0       	ldi	r25, 0x0A	; 10
    4c3a:	0e 94 e9 37 	call	0x6fd2	; 0x6fd2 <Print::println(char const*)>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1389
                if (FastWinding == fwRewind) Serial.println("> from REWIND");
    4c3e:	f6 01       	movw	r30, r12
    4c40:	80 81       	ld	r24, Z
    4c42:	91 81       	ldd	r25, Z+1	; 0x01
    4c44:	6b e4       	ldi	r22, 0x4B	; 75
    4c46:	76 e0       	ldi	r23, 0x06	; 6
    4c48:	02 97       	sbiw	r24, 0x02	; 2
    4c4a:	11 f0       	breq	.+4      	; 0x4c50 <TTapeController::Update()+0x718>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1390
                else Serial.println("> from FORWARD");
    4c4c:	69 e5       	ldi	r22, 0x59	; 89
    4c4e:	76 e0       	ldi	r23, 0x06	; 6
    4c50:	82 ed       	ldi	r24, 0xD2	; 210
    4c52:	9a e0       	ldi	r25, 0x0A	; 10
    4c54:	0e 94 e9 37 	call	0x6fd2	; 0x6fd2 <Print::println(char const*)>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1392
            #endif     
            Stop();                
    4c58:	ce 01       	movw	r24, r28
    4c5a:	0e 94 4b 1e 	call	0x3c96	; 0x3c96 <TTapeController::Stop()>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1393
            if (NeedToStart) {            
    4c5e:	11 23       	and	r17, r17
    4c60:	49 f0       	breq	.+18     	; 0x4c74 <TTapeController::Update()+0x73c>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1394
                Play();
    4c62:	ce 01       	movw	r24, r28
    4c64:	0e 94 1b 1c 	call	0x3836	; 0x3836 <TTapeController::Play()>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1395
                delay(500);                
    4c68:	64 ef       	ldi	r22, 0xF4	; 244
    4c6a:	71 e0       	ldi	r23, 0x01	; 1
    4c6c:	80 e0       	ldi	r24, 0x00	; 0
    4c6e:	90 e0       	ldi	r25, 0x00	; 0
    4c70:	0e 94 75 34 	call	0x68ea	; 0x68ea <delay>
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1397
            } 
            RewindOneSide = false;
    4c74:	c8 54       	subi	r28, 0x48	; 72
    4c76:	df 4f       	sbci	r29, 0xFF	; 255
    4c78:	18 82       	st	Y, r1
/Users/DS 1/Library/Mobile Documents/com~apple~CloudDocs/Projekte/Philips 70CD555/MC146805G2/TTapeController.cpp:1551
        return;
    }



}
    4c7a:	df 91       	pop	r29
    4c7c:	cf 91       	pop	r28
    4c7e:	1f 91       	pop	r17
    4c80:	0f 91       	pop	r16
    4c82:	ff 90       	pop	r15
    4c84:	ef 90       	pop	r14
    4c86:	df 90       	pop	r13
    4c88:	cf 90       	pop	r12
    4c8a:	bf 90       	pop	r11
    4c8c:	af 90       	pop	r10
    4c8e:	08 95       	ret

00004c90 <pcint_null_callback>:
_Z30PinChangeInterruptEventPCINT28v():
/Users/DS 1/Documents/Arduino/libraries/PinChangeInterrupt/src/PinChangeInterrupt.cpp:87

// useless function for weak implemented/not used functions, extern c needed for the alias
extern "C" {
	void pcint_null_callback(void) {
		// useless
	}
    4c90:	08 95       	ret

00004c92 <enablePinChangeInterruptHelper(unsigned char, unsigned char, unsigned char)>:
_Z30enablePinChangeInterruptHelperhhh():
/Users/DS 1/Documents/Arduino/libraries/PinChangeInterrupt/src/PinChangeInterrupt.cpp:101
uint8_t fallingPorts[PCINT_NUM_USED_PORTS] = { 0 };
uint8_t risingPorts[PCINT_NUM_USED_PORTS] = { 0 };

void enablePinChangeInterruptHelper(const uint8_t pcintPort, const uint8_t pcintMask, const uint8_t arrayPos){
	// Update the old state to the actual state
	switch(pcintPort){
    4c92:	81 30       	cpi	r24, 0x01	; 1
    4c94:	f1 f0       	breq	.+60     	; 0x4cd2 <enablePinChangeInterruptHelper(unsigned char, unsigned char, unsigned char)+0x40>
    4c96:	88 f0       	brcs	.+34     	; 0x4cba <enablePinChangeInterruptHelper(unsigned char, unsigned char, unsigned char)+0x28>
    4c98:	82 30       	cpi	r24, 0x02	; 2
    4c9a:	39 f1       	breq	.+78     	; 0x4cea <enablePinChangeInterruptHelper(unsigned char, unsigned char, unsigned char)+0x58>
    4c9c:	83 30       	cpi	r24, 0x03	; 3
    4c9e:	89 f1       	breq	.+98     	; 0x4d02 <enablePinChangeInterruptHelper(unsigned char, unsigned char, unsigned char)+0x70>
/Users/DS 1/Documents/Arduino/libraries/PinChangeInterrupt/src/PinChangeInterrupt.cpp:165
	*(&PCMSK + pcintPort) |= pcintMask;
#endif

	// PCICR: Pin Change Interrupt Control Register - enables interrupt vectors
#ifdef PCICR
	PCICR |= (1  << (pcintPort + PCIE0));
    4ca0:	90 91 68 00 	lds	r25, 0x0068	; 0x800068 <__TEXT_REGION_LENGTH__+0x7e0068>
    4ca4:	21 e0       	ldi	r18, 0x01	; 1
    4ca6:	30 e0       	ldi	r19, 0x00	; 0
    4ca8:	01 c0       	rjmp	.+2      	; 0x4cac <enablePinChangeInterruptHelper(unsigned char, unsigned char, unsigned char)+0x1a>
    4caa:	22 0f       	add	r18, r18
    4cac:	8a 95       	dec	r24
    4cae:	ea f7       	brpl	.-6      	; 0x4caa <enablePinChangeInterruptHelper(unsigned char, unsigned char, unsigned char)+0x18>
    4cb0:	89 2f       	mov	r24, r25
    4cb2:	82 2b       	or	r24, r18
    4cb4:	80 93 68 00 	sts	0x0068, r24	; 0x800068 <__TEXT_REGION_LENGTH__+0x7e0068>
/Users/DS 1/Documents/Arduino/libraries/PinChangeInterrupt/src/PinChangeInterrupt.cpp:175
#elif defined(GIMSK) && defined(PCIE) /* e.g. ATtiny X5 */
	GIMSK |= (1  << (pcintPort + PCIE));
#else
#error MCU has no such a register
#endif
}
    4cb8:	08 95       	ret
/Users/DS 1/Documents/Arduino/libraries/PinChangeInterrupt/src/PinChangeInterrupt.cpp:104
void enablePinChangeInterruptHelper(const uint8_t pcintPort, const uint8_t pcintMask, const uint8_t arrayPos){
	// Update the old state to the actual state
	switch(pcintPort){
#ifdef PCINT_INPUT_PORT0_USED
		case 0:
			oldPorts[arrayPos] = PCINT_INPUT_PORT0;
    4cba:	90 b1       	in	r25, 0x00	; 0
    4cbc:	e4 2f       	mov	r30, r20
    4cbe:	f0 e0       	ldi	r31, 0x00	; 0
    4cc0:	eb 50       	subi	r30, 0x0B	; 11
    4cc2:	f6 4f       	sbci	r31, 0xF6	; 246
    4cc4:	90 83       	st	Z, r25
/Users/DS 1/Documents/Arduino/libraries/PinChangeInterrupt/src/PinChangeInterrupt.cpp:141
#ifdef PCMSK1
	}
	else{
		switch(pcintPort){
			case 0:
				PCMSK0 |= pcintMask;
    4cc6:	90 91 6b 00 	lds	r25, 0x006B	; 0x80006b <__TEXT_REGION_LENGTH__+0x7e006b>
    4cca:	69 2b       	or	r22, r25
    4ccc:	60 93 6b 00 	sts	0x006B, r22	; 0x80006b <__TEXT_REGION_LENGTH__+0x7e006b>
/Users/DS 1/Documents/Arduino/libraries/PinChangeInterrupt/src/PinChangeInterrupt.cpp:142
			break;
    4cd0:	e7 cf       	rjmp	.-50     	; 0x4ca0 <enablePinChangeInterruptHelper(unsigned char, unsigned char, unsigned char)+0xe>
/Users/DS 1/Documents/Arduino/libraries/PinChangeInterrupt/src/PinChangeInterrupt.cpp:109
			oldPorts[arrayPos] = PCINT_INPUT_PORT0;
		break;
#endif
#ifdef PCINT_INPUT_PORT1_USED
		case 1:
			oldPorts[arrayPos] = PCINT_INPUT_PORT1;
    4cd2:	93 b1       	in	r25, 0x03	; 3
    4cd4:	e4 2f       	mov	r30, r20
    4cd6:	f0 e0       	ldi	r31, 0x00	; 0
    4cd8:	eb 50       	subi	r30, 0x0B	; 11
    4cda:	f6 4f       	sbci	r31, 0xF6	; 246
    4cdc:	90 83       	st	Z, r25
/Users/DS 1/Documents/Arduino/libraries/PinChangeInterrupt/src/PinChangeInterrupt.cpp:144
		switch(pcintPort){
			case 0:
				PCMSK0 |= pcintMask;
			break;
			case 1:
				PCMSK1 |= pcintMask;
    4cde:	90 91 6c 00 	lds	r25, 0x006C	; 0x80006c <__TEXT_REGION_LENGTH__+0x7e006c>
    4ce2:	69 2b       	or	r22, r25
    4ce4:	60 93 6c 00 	sts	0x006C, r22	; 0x80006c <__TEXT_REGION_LENGTH__+0x7e006c>
/Users/DS 1/Documents/Arduino/libraries/PinChangeInterrupt/src/PinChangeInterrupt.cpp:145
			break;
    4ce8:	db cf       	rjmp	.-74     	; 0x4ca0 <enablePinChangeInterruptHelper(unsigned char, unsigned char, unsigned char)+0xe>
/Users/DS 1/Documents/Arduino/libraries/PinChangeInterrupt/src/PinChangeInterrupt.cpp:114
			oldPorts[arrayPos] = PCINT_INPUT_PORT1;
		break;
#endif
#ifdef PCINT_INPUT_PORT2_USED
		case 2:
			oldPorts[arrayPos] = PCINT_INPUT_PORT2;
    4cea:	96 b1       	in	r25, 0x06	; 6
    4cec:	e4 2f       	mov	r30, r20
    4cee:	f0 e0       	ldi	r31, 0x00	; 0
    4cf0:	eb 50       	subi	r30, 0x0B	; 11
    4cf2:	f6 4f       	sbci	r31, 0xF6	; 246
    4cf4:	90 83       	st	Z, r25
/Users/DS 1/Documents/Arduino/libraries/PinChangeInterrupt/src/PinChangeInterrupt.cpp:148
			case 1:
				PCMSK1 |= pcintMask;
			break;
#ifdef PCMSK2
			case 2:
				PCMSK2 |= pcintMask;
    4cf6:	90 91 6d 00 	lds	r25, 0x006D	; 0x80006d <__TEXT_REGION_LENGTH__+0x7e006d>
    4cfa:	69 2b       	or	r22, r25
    4cfc:	60 93 6d 00 	sts	0x006D, r22	; 0x80006d <__TEXT_REGION_LENGTH__+0x7e006d>
/Users/DS 1/Documents/Arduino/libraries/PinChangeInterrupt/src/PinChangeInterrupt.cpp:149
			break;
    4d00:	cf cf       	rjmp	.-98     	; 0x4ca0 <enablePinChangeInterruptHelper(unsigned char, unsigned char, unsigned char)+0xe>
/Users/DS 1/Documents/Arduino/libraries/PinChangeInterrupt/src/PinChangeInterrupt.cpp:119
			oldPorts[arrayPos] = PCINT_INPUT_PORT2;
		break;
#endif
#ifdef PCINT_INPUT_PORT3_USED
		case 3:
			oldPorts[arrayPos] = PCINT_INPUT_PORT3;
    4d02:	99 b1       	in	r25, 0x09	; 9
    4d04:	e4 2f       	mov	r30, r20
    4d06:	f0 e0       	ldi	r31, 0x00	; 0
    4d08:	eb 50       	subi	r30, 0x0B	; 11
    4d0a:	f6 4f       	sbci	r31, 0xF6	; 246
    4d0c:	90 83       	st	Z, r25
/Users/DS 1/Documents/Arduino/libraries/PinChangeInterrupt/src/PinChangeInterrupt.cpp:153
				PCMSK2 |= pcintMask;
			break;
#endif
#ifdef PCMSK3
			case 3:
				PCMSK3 |= pcintMask;
    4d0e:	90 91 73 00 	lds	r25, 0x0073	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
    4d12:	69 2b       	or	r22, r25
    4d14:	60 93 73 00 	sts	0x0073, r22	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
/Users/DS 1/Documents/Arduino/libraries/PinChangeInterrupt/src/PinChangeInterrupt.cpp:154
			break;
    4d18:	c3 cf       	rjmp	.-122    	; 0x4ca0 <enablePinChangeInterruptHelper(unsigned char, unsigned char, unsigned char)+0xe>

00004d1a <attachPinChangeInterrupt1()>:
_Z25attachPinChangeInterrupt1v():
/Users/DS 1/Documents/Arduino/libraries/PinChangeInterrupt/src/PinChangeInterrupt1.cpp:38

#if (PCINT_USE_PORT1 == true)

void attachPinChangeInterrupt1(void) {
	// fake function to make the IDE link this file
}
    4d1a:	08 95       	ret

00004d1c <PinChangeInterruptEventPCINT8()>:
_Z29PinChangeInterruptEventPCINT8v():
/Users/DS 1/Documents/Arduino/libraries/PinChangeInterrupt/src/PinChangeInterrupt1.cpp:99
}
*/
#if (PCINT_USE_PCINT8 == true)
volatile callback callbackPCINT8 = pcint_null_callback;
void PinChangeInterruptEventPCINT8(void) {
	callbackPCINT8();
    4d1c:	e0 91 14 01 	lds	r30, 0x0114	; 0x800114 <callbackPCINT8>
    4d20:	f0 91 15 01 	lds	r31, 0x0115	; 0x800115 <callbackPCINT8+0x1>
    4d24:	09 94       	ijmp

00004d26 <PinChangeInterruptEventPCINT9()>:
_Z29PinChangeInterruptEventPCINT9v():
/Users/DS 1/Documents/Arduino/libraries/PinChangeInterrupt/src/PinChangeInterrupt1.cpp:105
}
#endif
#if (PCINT_USE_PCINT9 == true)
volatile callback callbackPCINT9 = pcint_null_callback;
void PinChangeInterruptEventPCINT9(void) {
	callbackPCINT9();
    4d26:	e0 91 12 01 	lds	r30, 0x0112	; 0x800112 <callbackPCINT9>
    4d2a:	f0 91 13 01 	lds	r31, 0x0113	; 0x800113 <callbackPCINT9+0x1>
    4d2e:	09 94       	ijmp

00004d30 <PinChangeInterruptEventPCINT10()>:
_Z30PinChangeInterruptEventPCINT10v():
/Users/DS 1/Documents/Arduino/libraries/PinChangeInterrupt/src/PinChangeInterrupt1.cpp:111
}
#endif
#if (PCINT_USE_PCINT10 == true)
volatile callback callbackPCINT10 = pcint_null_callback;
void PinChangeInterruptEventPCINT10(void) {
	callbackPCINT10();
    4d30:	e0 91 10 01 	lds	r30, 0x0110	; 0x800110 <callbackPCINT10>
    4d34:	f0 91 11 01 	lds	r31, 0x0111	; 0x800111 <callbackPCINT10+0x1>
    4d38:	09 94       	ijmp

00004d3a <PinChangeInterruptEventPCINT11()>:
_Z30PinChangeInterruptEventPCINT11v():
/Users/DS 1/Documents/Arduino/libraries/PinChangeInterrupt/src/PinChangeInterrupt1.cpp:117
}
#endif
#if (PCINT_USE_PCINT11 == true)
volatile callback callbackPCINT11 = pcint_null_callback;
void PinChangeInterruptEventPCINT11(void) {
	callbackPCINT11();
    4d3a:	e0 91 0e 01 	lds	r30, 0x010E	; 0x80010e <callbackPCINT11>
    4d3e:	f0 91 0f 01 	lds	r31, 0x010F	; 0x80010f <callbackPCINT11+0x1>
    4d42:	09 94       	ijmp

00004d44 <PinChangeInterruptEventPCINT12()>:
_Z30PinChangeInterruptEventPCINT12v():
/Users/DS 1/Documents/Arduino/libraries/PinChangeInterrupt/src/PinChangeInterrupt1.cpp:123
}
#endif
#if (PCINT_USE_PCINT12 == true)
volatile callback callbackPCINT12 = pcint_null_callback;
void PinChangeInterruptEventPCINT12(void) {
	callbackPCINT12();
    4d44:	e0 91 0c 01 	lds	r30, 0x010C	; 0x80010c <callbackPCINT12>
    4d48:	f0 91 0d 01 	lds	r31, 0x010D	; 0x80010d <callbackPCINT12+0x1>
    4d4c:	09 94       	ijmp

00004d4e <PinChangeInterruptEventPCINT13()>:
_Z30PinChangeInterruptEventPCINT13v():
/Users/DS 1/Documents/Arduino/libraries/PinChangeInterrupt/src/PinChangeInterrupt1.cpp:129
}
#endif
#if (PCINT_USE_PCINT13 == true)
volatile callback callbackPCINT13 = pcint_null_callback;
void PinChangeInterruptEventPCINT13(void) {
	callbackPCINT13();
    4d4e:	e0 91 0a 01 	lds	r30, 0x010A	; 0x80010a <callbackPCINT13>
    4d52:	f0 91 0b 01 	lds	r31, 0x010B	; 0x80010b <callbackPCINT13+0x1>
    4d56:	09 94       	ijmp

00004d58 <PinChangeInterruptEventPCINT14()>:
_Z30PinChangeInterruptEventPCINT14v():
/Users/DS 1/Documents/Arduino/libraries/PinChangeInterrupt/src/PinChangeInterrupt1.cpp:135
}
#endif
#if (PCINT_USE_PCINT14 == true)
volatile callback callbackPCINT14 = pcint_null_callback;
void PinChangeInterruptEventPCINT14(void) {
	callbackPCINT14();
    4d58:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <callbackPCINT14>
    4d5c:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <callbackPCINT14+0x1>
    4d60:	09 94       	ijmp

00004d62 <PinChangeInterruptEventPCINT15()>:
_Z30PinChangeInterruptEventPCINT15v():
/Users/DS 1/Documents/Arduino/libraries/PinChangeInterrupt/src/PinChangeInterrupt1.cpp:141
}
#endif
#if (PCINT_USE_PCINT15 == true)
volatile callback callbackPCINT15 = pcint_null_callback;
void PinChangeInterruptEventPCINT15(void) {
	callbackPCINT15();
    4d62:	e0 91 06 01 	lds	r30, 0x0106	; 0x800106 <callbackPCINT15>
    4d66:	f0 91 07 01 	lds	r31, 0x0107	; 0x800107 <callbackPCINT15+0x1>
    4d6a:	09 94       	ijmp

00004d6c <__vector_5>:
__vector_5():
/Users/DS 1/Documents/Arduino/libraries/PinChangeInterrupt/src/PinChangeInterrupt1.cpp:40

void attachPinChangeInterrupt1(void) {
	// fake function to make the IDE link this file
}

ISR(PCINT1_vect) {
    4d6c:	1f 92       	push	r1
    4d6e:	0f 92       	push	r0
    4d70:	0f b6       	in	r0, 0x3f	; 63
    4d72:	0f 92       	push	r0
    4d74:	11 24       	eor	r1, r1
    4d76:	0b b6       	in	r0, 0x3b	; 59
    4d78:	0f 92       	push	r0
    4d7a:	2f 93       	push	r18
    4d7c:	3f 93       	push	r19
    4d7e:	4f 93       	push	r20
    4d80:	5f 93       	push	r21
    4d82:	6f 93       	push	r22
    4d84:	7f 93       	push	r23
    4d86:	8f 93       	push	r24
    4d88:	9f 93       	push	r25
    4d8a:	af 93       	push	r26
    4d8c:	bf 93       	push	r27
    4d8e:	cf 93       	push	r28
    4d90:	ef 93       	push	r30
    4d92:	ff 93       	push	r31
/Users/DS 1/Documents/Arduino/libraries/PinChangeInterrupt/src/PinChangeInterrupt1.cpp:42
	// get the new and old pin states for port
	uint8_t newPort = PCINT_INPUT_PORT1;
    4d94:	93 b1       	in	r25, 0x03	; 3
/Users/DS 1/Documents/Arduino/libraries/PinChangeInterrupt/src/PinChangeInterrupt1.cpp:46

	// compare with the old value to detect a rising or falling
	uint8_t arrayPos = getArrayPosPCINT(1);
	uint8_t change = newPort ^ oldPorts[arrayPos];
    4d96:	80 91 f6 09 	lds	r24, 0x09F6	; 0x8009f6 <oldPorts+0x1>
/Users/DS 1/Documents/Arduino/libraries/PinChangeInterrupt/src/PinChangeInterrupt1.cpp:51
	uint8_t rising = change & newPort;
	uint8_t falling = change & oldPorts[arrayPos];

	// check which pins are triggered, compared with the settings
	uint8_t risingTrigger = rising & risingPorts[arrayPos];
    4d9a:	c0 91 ee 09 	lds	r28, 0x09EE	; 0x8009ee <risingPorts+0x1>
    4d9e:	c9 23       	and	r28, r25
    4da0:	28 2f       	mov	r18, r24
    4da2:	20 95       	com	r18
    4da4:	c2 23       	and	r28, r18
/Users/DS 1/Documents/Arduino/libraries/PinChangeInterrupt/src/PinChangeInterrupt1.cpp:52
	uint8_t fallingTrigger = falling & fallingPorts[arrayPos];
    4da6:	20 91 f2 09 	lds	r18, 0x09F2	; 0x8009f2 <fallingPorts+0x1>
    4daa:	82 23       	and	r24, r18
    4dac:	29 2f       	mov	r18, r25
    4dae:	20 95       	com	r18
    4db0:	82 23       	and	r24, r18
/Users/DS 1/Documents/Arduino/libraries/PinChangeInterrupt/src/PinChangeInterrupt1.cpp:53
	uint8_t trigger = risingTrigger | fallingTrigger;
    4db2:	c8 2b       	or	r28, r24
/Users/DS 1/Documents/Arduino/libraries/PinChangeInterrupt/src/PinChangeInterrupt1.cpp:56

	// save the new state for next comparison
	oldPorts[arrayPos] = newPort;
    4db4:	90 93 f6 09 	sts	0x09F6, r25	; 0x8009f6 <oldPorts+0x1>
/Users/DS 1/Documents/Arduino/libraries/PinChangeInterrupt/src/PinChangeInterrupt1.cpp:63
	// Execute all functions that should be triggered
	// This way we can exclude a single function
	// and the calling is also much faster
	// We may also reorder the pins for different priority
#if !defined(PCINT_CALLBACK_PORT1)
	PCINT_CALLBACK(0, 8);
    4db8:	c0 fd       	sbrc	r28, 0
/Users/DS 1/Documents/Arduino/libraries/PinChangeInterrupt/src/PinChangeInterrupt1.cpp:63 (discriminator 1)
    4dba:	0e 94 8e 26 	call	0x4d1c	; 0x4d1c <PinChangeInterruptEventPCINT8()>
/Users/DS 1/Documents/Arduino/libraries/PinChangeInterrupt/src/PinChangeInterrupt1.cpp:64
	PCINT_CALLBACK(1, 9);
    4dbe:	c1 fd       	sbrc	r28, 1
/Users/DS 1/Documents/Arduino/libraries/PinChangeInterrupt/src/PinChangeInterrupt1.cpp:64 (discriminator 1)
    4dc0:	0e 94 93 26 	call	0x4d26	; 0x4d26 <PinChangeInterruptEventPCINT9()>
/Users/DS 1/Documents/Arduino/libraries/PinChangeInterrupt/src/PinChangeInterrupt1.cpp:65
	PCINT_CALLBACK(2, 10);
    4dc4:	c2 fd       	sbrc	r28, 2
/Users/DS 1/Documents/Arduino/libraries/PinChangeInterrupt/src/PinChangeInterrupt1.cpp:65 (discriminator 1)
    4dc6:	0e 94 98 26 	call	0x4d30	; 0x4d30 <PinChangeInterruptEventPCINT10()>
/Users/DS 1/Documents/Arduino/libraries/PinChangeInterrupt/src/PinChangeInterrupt1.cpp:66
	PCINT_CALLBACK(3, 11);
    4dca:	c3 fd       	sbrc	r28, 3
/Users/DS 1/Documents/Arduino/libraries/PinChangeInterrupt/src/PinChangeInterrupt1.cpp:66 (discriminator 1)
    4dcc:	0e 94 9d 26 	call	0x4d3a	; 0x4d3a <PinChangeInterruptEventPCINT11()>
/Users/DS 1/Documents/Arduino/libraries/PinChangeInterrupt/src/PinChangeInterrupt1.cpp:67
	PCINT_CALLBACK(4, 12);
    4dd0:	c4 fd       	sbrc	r28, 4
/Users/DS 1/Documents/Arduino/libraries/PinChangeInterrupt/src/PinChangeInterrupt1.cpp:67 (discriminator 1)
    4dd2:	0e 94 a2 26 	call	0x4d44	; 0x4d44 <PinChangeInterruptEventPCINT12()>
/Users/DS 1/Documents/Arduino/libraries/PinChangeInterrupt/src/PinChangeInterrupt1.cpp:68
	PCINT_CALLBACK(5, 13);
    4dd6:	c5 fd       	sbrc	r28, 5
/Users/DS 1/Documents/Arduino/libraries/PinChangeInterrupt/src/PinChangeInterrupt1.cpp:68 (discriminator 1)
    4dd8:	0e 94 a7 26 	call	0x4d4e	; 0x4d4e <PinChangeInterruptEventPCINT13()>
/Users/DS 1/Documents/Arduino/libraries/PinChangeInterrupt/src/PinChangeInterrupt1.cpp:69
	PCINT_CALLBACK(6, 14);
    4ddc:	c6 fd       	sbrc	r28, 6
/Users/DS 1/Documents/Arduino/libraries/PinChangeInterrupt/src/PinChangeInterrupt1.cpp:69 (discriminator 1)
    4dde:	0e 94 ac 26 	call	0x4d58	; 0x4d58 <PinChangeInterruptEventPCINT14()>
/Users/DS 1/Documents/Arduino/libraries/PinChangeInterrupt/src/PinChangeInterrupt1.cpp:70
	PCINT_CALLBACK(7, 15);
    4de2:	c7 fd       	sbrc	r28, 7
/Users/DS 1/Documents/Arduino/libraries/PinChangeInterrupt/src/PinChangeInterrupt1.cpp:70 (discriminator 1)
    4de4:	0e 94 b1 26 	call	0x4d62	; 0x4d62 <PinChangeInterruptEventPCINT15()>
/Users/DS 1/Documents/Arduino/libraries/PinChangeInterrupt/src/PinChangeInterrupt1.cpp:74
#else
	PCINT_CALLBACK_PORT1
#endif
}
    4de8:	ff 91       	pop	r31
    4dea:	ef 91       	pop	r30
    4dec:	cf 91       	pop	r28
    4dee:	bf 91       	pop	r27
    4df0:	af 91       	pop	r26
    4df2:	9f 91       	pop	r25
    4df4:	8f 91       	pop	r24
    4df6:	7f 91       	pop	r23
    4df8:	6f 91       	pop	r22
    4dfa:	5f 91       	pop	r21
    4dfc:	4f 91       	pop	r20
    4dfe:	3f 91       	pop	r19
    4e00:	2f 91       	pop	r18
    4e02:	0f 90       	pop	r0
    4e04:	0b be       	out	0x3b, r0	; 59
    4e06:	0f 90       	pop	r0
    4e08:	0f be       	out	0x3f, r0	; 63
    4e0a:	0f 90       	pop	r0
    4e0c:	1f 90       	pop	r1
    4e0e:	18 95       	reti

00004e10 <attachPinChangeInterrupt2()>:
_Z25attachPinChangeInterrupt2v():
/Users/DS 1/Documents/Arduino/libraries/PinChangeInterrupt/src/PinChangeInterrupt2.cpp:38

#if (PCINT_USE_PORT2 == true)

void attachPinChangeInterrupt2(void) {
	// fake function to make the IDE link this file
}
    4e10:	08 95       	ret

00004e12 <PinChangeInterruptEventPCINT16()>:
_Z30PinChangeInterruptEventPCINT16v():
/Users/DS 1/Documents/Arduino/libraries/PinChangeInterrupt/src/PinChangeInterrupt2.cpp:99
}
*/
#if (PCINT_USE_PCINT16 == true)
volatile callback callbackPCINT16 = pcint_null_callback;
void PinChangeInterruptEventPCINT16(void) {
	callbackPCINT16();
    4e12:	e0 91 24 01 	lds	r30, 0x0124	; 0x800124 <callbackPCINT16>
    4e16:	f0 91 25 01 	lds	r31, 0x0125	; 0x800125 <callbackPCINT16+0x1>
    4e1a:	09 94       	ijmp

00004e1c <PinChangeInterruptEventPCINT17()>:
_Z30PinChangeInterruptEventPCINT17v():
/Users/DS 1/Documents/Arduino/libraries/PinChangeInterrupt/src/PinChangeInterrupt2.cpp:105
}
#endif
#if (PCINT_USE_PCINT17 == true)
volatile callback callbackPCINT17 = pcint_null_callback;
void PinChangeInterruptEventPCINT17(void) {
	callbackPCINT17();
    4e1c:	e0 91 22 01 	lds	r30, 0x0122	; 0x800122 <callbackPCINT17>
    4e20:	f0 91 23 01 	lds	r31, 0x0123	; 0x800123 <callbackPCINT17+0x1>
    4e24:	09 94       	ijmp

00004e26 <PinChangeInterruptEventPCINT18()>:
_Z30PinChangeInterruptEventPCINT18v():
/Users/DS 1/Documents/Arduino/libraries/PinChangeInterrupt/src/PinChangeInterrupt2.cpp:111
}
#endif
#if (PCINT_USE_PCINT18 == true)
volatile callback callbackPCINT18 = pcint_null_callback;
void PinChangeInterruptEventPCINT18(void) {
	callbackPCINT18();
    4e26:	e0 91 20 01 	lds	r30, 0x0120	; 0x800120 <callbackPCINT18>
    4e2a:	f0 91 21 01 	lds	r31, 0x0121	; 0x800121 <callbackPCINT18+0x1>
    4e2e:	09 94       	ijmp

00004e30 <PinChangeInterruptEventPCINT19()>:
_Z30PinChangeInterruptEventPCINT19v():
/Users/DS 1/Documents/Arduino/libraries/PinChangeInterrupt/src/PinChangeInterrupt2.cpp:117
}
#endif
#if (PCINT_USE_PCINT19 == true)
volatile callback callbackPCINT19 = pcint_null_callback;
void PinChangeInterruptEventPCINT19(void) {
	callbackPCINT19();
    4e30:	e0 91 1e 01 	lds	r30, 0x011E	; 0x80011e <callbackPCINT19>
    4e34:	f0 91 1f 01 	lds	r31, 0x011F	; 0x80011f <callbackPCINT19+0x1>
    4e38:	09 94       	ijmp

00004e3a <PinChangeInterruptEventPCINT20()>:
_Z30PinChangeInterruptEventPCINT20v():
/Users/DS 1/Documents/Arduino/libraries/PinChangeInterrupt/src/PinChangeInterrupt2.cpp:123
}
#endif
#if (PCINT_USE_PCINT20 == true)
volatile callback callbackPCINT20 = pcint_null_callback;
void PinChangeInterruptEventPCINT20(void) {
	callbackPCINT20();
    4e3a:	e0 91 1c 01 	lds	r30, 0x011C	; 0x80011c <callbackPCINT20>
    4e3e:	f0 91 1d 01 	lds	r31, 0x011D	; 0x80011d <callbackPCINT20+0x1>
    4e42:	09 94       	ijmp

00004e44 <PinChangeInterruptEventPCINT21()>:
_Z30PinChangeInterruptEventPCINT21v():
/Users/DS 1/Documents/Arduino/libraries/PinChangeInterrupt/src/PinChangeInterrupt2.cpp:129
}
#endif
#if (PCINT_USE_PCINT21 == true)
volatile callback callbackPCINT21 = pcint_null_callback;
void PinChangeInterruptEventPCINT21(void) {
	callbackPCINT21();
    4e44:	e0 91 1a 01 	lds	r30, 0x011A	; 0x80011a <callbackPCINT21>
    4e48:	f0 91 1b 01 	lds	r31, 0x011B	; 0x80011b <callbackPCINT21+0x1>
    4e4c:	09 94       	ijmp

00004e4e <PinChangeInterruptEventPCINT22()>:
_Z30PinChangeInterruptEventPCINT22v():
/Users/DS 1/Documents/Arduino/libraries/PinChangeInterrupt/src/PinChangeInterrupt2.cpp:135
}
#endif
#if (PCINT_USE_PCINT22 == true)
volatile callback callbackPCINT22 = pcint_null_callback;
void PinChangeInterruptEventPCINT22(void) {
	callbackPCINT22();
    4e4e:	e0 91 18 01 	lds	r30, 0x0118	; 0x800118 <callbackPCINT22>
    4e52:	f0 91 19 01 	lds	r31, 0x0119	; 0x800119 <callbackPCINT22+0x1>
    4e56:	09 94       	ijmp

00004e58 <PinChangeInterruptEventPCINT23()>:
_Z30PinChangeInterruptEventPCINT23v():
/Users/DS 1/Documents/Arduino/libraries/PinChangeInterrupt/src/PinChangeInterrupt2.cpp:141
}
#endif
#if (PCINT_USE_PCINT23 == true)
volatile callback callbackPCINT23 = pcint_null_callback;
void PinChangeInterruptEventPCINT23(void) {
	callbackPCINT23();
    4e58:	e0 91 16 01 	lds	r30, 0x0116	; 0x800116 <callbackPCINT23>
    4e5c:	f0 91 17 01 	lds	r31, 0x0117	; 0x800117 <callbackPCINT23+0x1>
    4e60:	09 94       	ijmp

00004e62 <__vector_6>:
__vector_6():
/Users/DS 1/Documents/Arduino/libraries/PinChangeInterrupt/src/PinChangeInterrupt2.cpp:40

void attachPinChangeInterrupt2(void) {
	// fake function to make the IDE link this file
}

ISR(PCINT2_vect) {
    4e62:	1f 92       	push	r1
    4e64:	0f 92       	push	r0
    4e66:	0f b6       	in	r0, 0x3f	; 63
    4e68:	0f 92       	push	r0
    4e6a:	11 24       	eor	r1, r1
    4e6c:	0b b6       	in	r0, 0x3b	; 59
    4e6e:	0f 92       	push	r0
    4e70:	2f 93       	push	r18
    4e72:	3f 93       	push	r19
    4e74:	4f 93       	push	r20
    4e76:	5f 93       	push	r21
    4e78:	6f 93       	push	r22
    4e7a:	7f 93       	push	r23
    4e7c:	8f 93       	push	r24
    4e7e:	9f 93       	push	r25
    4e80:	af 93       	push	r26
    4e82:	bf 93       	push	r27
    4e84:	cf 93       	push	r28
    4e86:	ef 93       	push	r30
    4e88:	ff 93       	push	r31
/Users/DS 1/Documents/Arduino/libraries/PinChangeInterrupt/src/PinChangeInterrupt2.cpp:42
	// get the new and old pin states for port
	uint8_t newPort = PCINT_INPUT_PORT2;
    4e8a:	96 b1       	in	r25, 0x06	; 6
/Users/DS 1/Documents/Arduino/libraries/PinChangeInterrupt/src/PinChangeInterrupt2.cpp:46

	// compare with the old value to detect a rising or falling
	uint8_t arrayPos = getArrayPosPCINT(2);
	uint8_t change = newPort ^ oldPorts[arrayPos];
    4e8c:	80 91 f7 09 	lds	r24, 0x09F7	; 0x8009f7 <oldPorts+0x2>
/Users/DS 1/Documents/Arduino/libraries/PinChangeInterrupt/src/PinChangeInterrupt2.cpp:51
	uint8_t rising = change & newPort;
	uint8_t falling = change & oldPorts[arrayPos];

	// check which pins are triggered, compared with the settings
	uint8_t risingTrigger = rising & risingPorts[arrayPos];
    4e90:	c0 91 ef 09 	lds	r28, 0x09EF	; 0x8009ef <risingPorts+0x2>
    4e94:	c9 23       	and	r28, r25
    4e96:	28 2f       	mov	r18, r24
    4e98:	20 95       	com	r18
    4e9a:	c2 23       	and	r28, r18
/Users/DS 1/Documents/Arduino/libraries/PinChangeInterrupt/src/PinChangeInterrupt2.cpp:52
	uint8_t fallingTrigger = falling & fallingPorts[arrayPos];
    4e9c:	20 91 f3 09 	lds	r18, 0x09F3	; 0x8009f3 <fallingPorts+0x2>
    4ea0:	82 23       	and	r24, r18
    4ea2:	29 2f       	mov	r18, r25
    4ea4:	20 95       	com	r18
    4ea6:	82 23       	and	r24, r18
/Users/DS 1/Documents/Arduino/libraries/PinChangeInterrupt/src/PinChangeInterrupt2.cpp:53
	uint8_t trigger = risingTrigger | fallingTrigger;
    4ea8:	c8 2b       	or	r28, r24
/Users/DS 1/Documents/Arduino/libraries/PinChangeInterrupt/src/PinChangeInterrupt2.cpp:56

	// save the new state for next comparison
	oldPorts[arrayPos] = newPort;
    4eaa:	90 93 f7 09 	sts	0x09F7, r25	; 0x8009f7 <oldPorts+0x2>
/Users/DS 1/Documents/Arduino/libraries/PinChangeInterrupt/src/PinChangeInterrupt2.cpp:63
	// Execute all functions that should be triggered
	// This way we can exclude a single function
	// and the calling is also much faster
	// We may also reorder the pins for different priority
#if !defined(PCINT_CALLBACK_PORT2)
	PCINT_CALLBACK(0, 16);
    4eae:	c0 fd       	sbrc	r28, 0
/Users/DS 1/Documents/Arduino/libraries/PinChangeInterrupt/src/PinChangeInterrupt2.cpp:63 (discriminator 1)
    4eb0:	0e 94 09 27 	call	0x4e12	; 0x4e12 <PinChangeInterruptEventPCINT16()>
/Users/DS 1/Documents/Arduino/libraries/PinChangeInterrupt/src/PinChangeInterrupt2.cpp:64
	PCINT_CALLBACK(1, 17);
    4eb4:	c1 fd       	sbrc	r28, 1
/Users/DS 1/Documents/Arduino/libraries/PinChangeInterrupt/src/PinChangeInterrupt2.cpp:64 (discriminator 1)
    4eb6:	0e 94 0e 27 	call	0x4e1c	; 0x4e1c <PinChangeInterruptEventPCINT17()>
/Users/DS 1/Documents/Arduino/libraries/PinChangeInterrupt/src/PinChangeInterrupt2.cpp:65
	PCINT_CALLBACK(2, 18);
    4eba:	c2 fd       	sbrc	r28, 2
/Users/DS 1/Documents/Arduino/libraries/PinChangeInterrupt/src/PinChangeInterrupt2.cpp:65 (discriminator 1)
    4ebc:	0e 94 13 27 	call	0x4e26	; 0x4e26 <PinChangeInterruptEventPCINT18()>
/Users/DS 1/Documents/Arduino/libraries/PinChangeInterrupt/src/PinChangeInterrupt2.cpp:66
	PCINT_CALLBACK(3, 19);
    4ec0:	c3 fd       	sbrc	r28, 3
/Users/DS 1/Documents/Arduino/libraries/PinChangeInterrupt/src/PinChangeInterrupt2.cpp:66 (discriminator 1)
    4ec2:	0e 94 18 27 	call	0x4e30	; 0x4e30 <PinChangeInterruptEventPCINT19()>
/Users/DS 1/Documents/Arduino/libraries/PinChangeInterrupt/src/PinChangeInterrupt2.cpp:67
	PCINT_CALLBACK(4, 20);
    4ec6:	c4 fd       	sbrc	r28, 4
/Users/DS 1/Documents/Arduino/libraries/PinChangeInterrupt/src/PinChangeInterrupt2.cpp:67 (discriminator 1)
    4ec8:	0e 94 1d 27 	call	0x4e3a	; 0x4e3a <PinChangeInterruptEventPCINT20()>
/Users/DS 1/Documents/Arduino/libraries/PinChangeInterrupt/src/PinChangeInterrupt2.cpp:68
	PCINT_CALLBACK(5, 21);
    4ecc:	c5 fd       	sbrc	r28, 5
/Users/DS 1/Documents/Arduino/libraries/PinChangeInterrupt/src/PinChangeInterrupt2.cpp:68 (discriminator 1)
    4ece:	0e 94 22 27 	call	0x4e44	; 0x4e44 <PinChangeInterruptEventPCINT21()>
/Users/DS 1/Documents/Arduino/libraries/PinChangeInterrupt/src/PinChangeInterrupt2.cpp:69
	PCINT_CALLBACK(6, 22);
    4ed2:	c6 fd       	sbrc	r28, 6
/Users/DS 1/Documents/Arduino/libraries/PinChangeInterrupt/src/PinChangeInterrupt2.cpp:69 (discriminator 1)
    4ed4:	0e 94 27 27 	call	0x4e4e	; 0x4e4e <PinChangeInterruptEventPCINT22()>
/Users/DS 1/Documents/Arduino/libraries/PinChangeInterrupt/src/PinChangeInterrupt2.cpp:70
	PCINT_CALLBACK(7, 23);
    4ed8:	c7 fd       	sbrc	r28, 7
/Users/DS 1/Documents/Arduino/libraries/PinChangeInterrupt/src/PinChangeInterrupt2.cpp:70 (discriminator 1)
    4eda:	0e 94 2c 27 	call	0x4e58	; 0x4e58 <PinChangeInterruptEventPCINT23()>
/Users/DS 1/Documents/Arduino/libraries/PinChangeInterrupt/src/PinChangeInterrupt2.cpp:74
#else
	PCINT_CALLBACK_PORT2
#endif
}
    4ede:	ff 91       	pop	r31
    4ee0:	ef 91       	pop	r30
    4ee2:	cf 91       	pop	r28
    4ee4:	bf 91       	pop	r27
    4ee6:	af 91       	pop	r26
    4ee8:	9f 91       	pop	r25
    4eea:	8f 91       	pop	r24
    4eec:	7f 91       	pop	r23
    4eee:	6f 91       	pop	r22
    4ef0:	5f 91       	pop	r21
    4ef2:	4f 91       	pop	r20
    4ef4:	3f 91       	pop	r19
    4ef6:	2f 91       	pop	r18
    4ef8:	0f 90       	pop	r0
    4efa:	0b be       	out	0x3b, r0	; 59
    4efc:	0f 90       	pop	r0
    4efe:	0f be       	out	0x3f, r0	; 63
    4f00:	0f 90       	pop	r0
    4f02:	1f 90       	pop	r1
    4f04:	18 95       	reti

00004f06 <Print::availableForWrite()>:
_ZN5Print17availableForWriteEv():
/Users/DS 1/Documents/Arduino/libraries/Adafruit_SSD1306/Adafruit_SSD1306.cpp:520
#endif
    }
  }

  // Reset SSD1306 if requested and reset pin specified in constructor
  if (reset && (rstPin >= 0)) {
    4f06:	90 e0       	ldi	r25, 0x00	; 0
    4f08:	80 e0       	ldi	r24, 0x00	; 0
    4f0a:	08 95       	ret

00004f0c <Print::flush()>:
_ZN5Print5flushEv():
    4f0c:	08 95       	ret

00004f0e <Adafruit_SSD1306::drawPixel(int, int, unsigned int)>:
_ZN16Adafruit_SSD13069drawPixelEiij():
    4f0e:	fc 01       	movw	r30, r24
    4f10:	77 fd       	sbrc	r23, 7
    4f12:	64 c0       	rjmp	.+200    	; 0x4fdc <Adafruit_SSD1306::drawPixel(int, int, unsigned int)+0xce>
    4f14:	80 85       	ldd	r24, Z+8	; 0x08
    4f16:	91 85       	ldd	r25, Z+9	; 0x09
    4f18:	68 17       	cp	r22, r24
    4f1a:	79 07       	cpc	r23, r25
    4f1c:	0c f0       	brlt	.+2      	; 0x4f20 <Adafruit_SSD1306::drawPixel(int, int, unsigned int)+0x12>
    4f1e:	5e c0       	rjmp	.+188    	; 0x4fdc <Adafruit_SSD1306::drawPixel(int, int, unsigned int)+0xce>
    4f20:	57 fd       	sbrc	r21, 7
    4f22:	5c c0       	rjmp	.+184    	; 0x4fdc <Adafruit_SSD1306::drawPixel(int, int, unsigned int)+0xce>
    4f24:	82 85       	ldd	r24, Z+10	; 0x0a
    4f26:	93 85       	ldd	r25, Z+11	; 0x0b
    4f28:	48 17       	cp	r20, r24
    4f2a:	59 07       	cpc	r21, r25
    4f2c:	0c f0       	brlt	.+2      	; 0x4f30 <Adafruit_SSD1306::drawPixel(int, int, unsigned int)+0x22>
    4f2e:	56 c0       	rjmp	.+172    	; 0x4fdc <Adafruit_SSD1306::drawPixel(int, int, unsigned int)+0xce>
    4f30:	86 89       	ldd	r24, Z+22	; 0x16
    4f32:	82 30       	cpi	r24, 0x02	; 2
    4f34:	b1 f0       	breq	.+44     	; 0x4f62 <Adafruit_SSD1306::drawPixel(int, int, unsigned int)+0x54>
    4f36:	83 30       	cpi	r24, 0x03	; 3
    4f38:	29 f1       	breq	.+74     	; 0x4f84 <Adafruit_SSD1306::drawPixel(int, int, unsigned int)+0x76>
    4f3a:	81 30       	cpi	r24, 0x01	; 1
    4f3c:	41 f4       	brne	.+16     	; 0x4f4e <Adafruit_SSD1306::drawPixel(int, int, unsigned int)+0x40>
    4f3e:	84 81       	ldd	r24, Z+4	; 0x04
    4f40:	95 81       	ldd	r25, Z+5	; 0x05
    4f42:	84 1b       	sub	r24, r20
    4f44:	95 0b       	sbc	r25, r21
    4f46:	ab 01       	movw	r20, r22
    4f48:	bc 01       	movw	r22, r24
    4f4a:	61 50       	subi	r22, 0x01	; 1
    4f4c:	71 09       	sbc	r23, r1
    4f4e:	21 30       	cpi	r18, 0x01	; 1
    4f50:	31 05       	cpc	r19, r1
    4f52:	09 f1       	breq	.+66     	; 0x4f96 <Adafruit_SSD1306::drawPixel(int, int, unsigned int)+0x88>
    4f54:	08 f4       	brcc	.+2      	; 0x4f58 <Adafruit_SSD1306::drawPixel(int, int, unsigned int)+0x4a>
    4f56:	43 c0       	rjmp	.+134    	; 0x4fde <Adafruit_SSD1306::drawPixel(int, int, unsigned int)+0xd0>
    4f58:	22 30       	cpi	r18, 0x02	; 2
    4f5a:	31 05       	cpc	r19, r1
    4f5c:	09 f4       	brne	.+2      	; 0x4f60 <Adafruit_SSD1306::drawPixel(int, int, unsigned int)+0x52>
    4f5e:	63 c0       	rjmp	.+198    	; 0x5026 <Adafruit_SSD1306::drawPixel(int, int, unsigned int)+0x118>
    4f60:	08 95       	ret
    4f62:	84 81       	ldd	r24, Z+4	; 0x04
    4f64:	95 81       	ldd	r25, Z+5	; 0x05
    4f66:	dc 01       	movw	r26, r24
    4f68:	a6 1b       	sub	r26, r22
    4f6a:	b7 0b       	sbc	r27, r23
    4f6c:	bd 01       	movw	r22, r26
    4f6e:	61 50       	subi	r22, 0x01	; 1
    4f70:	71 09       	sbc	r23, r1
    4f72:	86 81       	ldd	r24, Z+6	; 0x06
    4f74:	97 81       	ldd	r25, Z+7	; 0x07
    4f76:	dc 01       	movw	r26, r24
    4f78:	a4 1b       	sub	r26, r20
    4f7a:	b5 0b       	sbc	r27, r21
    4f7c:	ad 01       	movw	r20, r26
    4f7e:	41 50       	subi	r20, 0x01	; 1
    4f80:	51 09       	sbc	r21, r1
    4f82:	e5 cf       	rjmp	.-54     	; 0x4f4e <Adafruit_SSD1306::drawPixel(int, int, unsigned int)+0x40>
    4f84:	86 81       	ldd	r24, Z+6	; 0x06
    4f86:	97 81       	ldd	r25, Z+7	; 0x07
    4f88:	86 1b       	sub	r24, r22
    4f8a:	97 0b       	sbc	r25, r23
    4f8c:	ba 01       	movw	r22, r20
    4f8e:	ac 01       	movw	r20, r24
    4f90:	41 50       	subi	r20, 0x01	; 1
    4f92:	51 09       	sbc	r21, r1
    4f94:	dc cf       	rjmp	.-72     	; 0x4f4e <Adafruit_SSD1306::drawPixel(int, int, unsigned int)+0x40>
    4f96:	ca 01       	movw	r24, r20
    4f98:	57 fd       	sbrc	r21, 7
    4f9a:	07 96       	adiw	r24, 0x07	; 7
    4f9c:	a3 e0       	ldi	r26, 0x03	; 3
    4f9e:	95 95       	asr	r25
    4fa0:	87 95       	ror	r24
    4fa2:	aa 95       	dec	r26
    4fa4:	e1 f7       	brne	.-8      	; 0x4f9e <Adafruit_SSD1306::drawPixel(int, int, unsigned int)+0x90>
    4fa6:	a4 81       	ldd	r26, Z+4	; 0x04
    4fa8:	b5 81       	ldd	r27, Z+5	; 0x05
    4faa:	8a 9f       	mul	r24, r26
    4fac:	90 01       	movw	r18, r0
    4fae:	8b 9f       	mul	r24, r27
    4fb0:	30 0d       	add	r19, r0
    4fb2:	9a 9f       	mul	r25, r26
    4fb4:	30 0d       	add	r19, r0
    4fb6:	11 24       	eor	r1, r1
    4fb8:	62 0f       	add	r22, r18
    4fba:	73 1f       	adc	r23, r19
    4fbc:	07 8c       	ldd	r0, Z+31	; 0x1f
    4fbe:	f0 a1       	ldd	r31, Z+32	; 0x20
    4fc0:	e0 2d       	mov	r30, r0
    4fc2:	e6 0f       	add	r30, r22
    4fc4:	f7 1f       	adc	r31, r23
    4fc6:	47 70       	andi	r20, 0x07	; 7
    4fc8:	55 27       	eor	r21, r21
    4fca:	21 e0       	ldi	r18, 0x01	; 1
    4fcc:	30 e0       	ldi	r19, 0x00	; 0
    4fce:	01 c0       	rjmp	.+2      	; 0x4fd2 <Adafruit_SSD1306::drawPixel(int, int, unsigned int)+0xc4>
    4fd0:	22 0f       	add	r18, r18
    4fd2:	4a 95       	dec	r20
    4fd4:	ea f7       	brpl	.-6      	; 0x4fd0 <Adafruit_SSD1306::drawPixel(int, int, unsigned int)+0xc2>
    4fd6:	80 81       	ld	r24, Z
    4fd8:	82 2b       	or	r24, r18
    4fda:	80 83       	st	Z, r24
    4fdc:	08 95       	ret
    4fde:	ca 01       	movw	r24, r20
    4fe0:	57 fd       	sbrc	r21, 7
    4fe2:	07 96       	adiw	r24, 0x07	; 7
    4fe4:	33 e0       	ldi	r19, 0x03	; 3
    4fe6:	95 95       	asr	r25
    4fe8:	87 95       	ror	r24
    4fea:	3a 95       	dec	r19
    4fec:	e1 f7       	brne	.-8      	; 0x4fe6 <Adafruit_SSD1306::drawPixel(int, int, unsigned int)+0xd8>
    4fee:	a4 81       	ldd	r26, Z+4	; 0x04
    4ff0:	b5 81       	ldd	r27, Z+5	; 0x05
    4ff2:	8a 9f       	mul	r24, r26
    4ff4:	90 01       	movw	r18, r0
    4ff6:	8b 9f       	mul	r24, r27
    4ff8:	30 0d       	add	r19, r0
    4ffa:	9a 9f       	mul	r25, r26
    4ffc:	30 0d       	add	r19, r0
    4ffe:	11 24       	eor	r1, r1
    5000:	62 0f       	add	r22, r18
    5002:	73 1f       	adc	r23, r19
    5004:	07 8c       	ldd	r0, Z+31	; 0x1f
    5006:	f0 a1       	ldd	r31, Z+32	; 0x20
    5008:	e0 2d       	mov	r30, r0
    500a:	e6 0f       	add	r30, r22
    500c:	f7 1f       	adc	r31, r23
    500e:	47 70       	andi	r20, 0x07	; 7
    5010:	55 27       	eor	r21, r21
    5012:	81 e0       	ldi	r24, 0x01	; 1
    5014:	90 e0       	ldi	r25, 0x00	; 0
    5016:	01 c0       	rjmp	.+2      	; 0x501a <Adafruit_SSD1306::drawPixel(int, int, unsigned int)+0x10c>
    5018:	88 0f       	add	r24, r24
    501a:	4a 95       	dec	r20
    501c:	ea f7       	brpl	.-6      	; 0x5018 <Adafruit_SSD1306::drawPixel(int, int, unsigned int)+0x10a>
    501e:	80 95       	com	r24
    5020:	90 81       	ld	r25, Z
    5022:	89 23       	and	r24, r25
    5024:	da cf       	rjmp	.-76     	; 0x4fda <Adafruit_SSD1306::drawPixel(int, int, unsigned int)+0xcc>
    5026:	ca 01       	movw	r24, r20
    5028:	57 fd       	sbrc	r21, 7
    502a:	07 96       	adiw	r24, 0x07	; 7
    502c:	23 e0       	ldi	r18, 0x03	; 3
    502e:	95 95       	asr	r25
    5030:	87 95       	ror	r24
    5032:	2a 95       	dec	r18
    5034:	e1 f7       	brne	.-8      	; 0x502e <Adafruit_SSD1306::drawPixel(int, int, unsigned int)+0x120>
    5036:	a4 81       	ldd	r26, Z+4	; 0x04
    5038:	b5 81       	ldd	r27, Z+5	; 0x05
    503a:	8a 9f       	mul	r24, r26
    503c:	90 01       	movw	r18, r0
    503e:	8b 9f       	mul	r24, r27
    5040:	30 0d       	add	r19, r0
    5042:	9a 9f       	mul	r25, r26
    5044:	30 0d       	add	r19, r0
    5046:	11 24       	eor	r1, r1
    5048:	62 0f       	add	r22, r18
    504a:	73 1f       	adc	r23, r19
    504c:	07 8c       	ldd	r0, Z+31	; 0x1f
    504e:	f0 a1       	ldd	r31, Z+32	; 0x20
    5050:	e0 2d       	mov	r30, r0
    5052:	e6 0f       	add	r30, r22
    5054:	f7 1f       	adc	r31, r23
    5056:	47 70       	andi	r20, 0x07	; 7
    5058:	55 27       	eor	r21, r21
    505a:	21 e0       	ldi	r18, 0x01	; 1
    505c:	30 e0       	ldi	r19, 0x00	; 0
    505e:	01 c0       	rjmp	.+2      	; 0x5062 <Adafruit_SSD1306::drawPixel(int, int, unsigned int)+0x154>
    5060:	22 0f       	add	r18, r18
    5062:	4a 95       	dec	r20
    5064:	ea f7       	brpl	.-6      	; 0x5060 <Adafruit_SSD1306::drawPixel(int, int, unsigned int)+0x152>
    5066:	80 81       	ld	r24, Z
    5068:	82 27       	eor	r24, r18
    506a:	b7 cf       	rjmp	.-146    	; 0x4fda <Adafruit_SSD1306::drawPixel(int, int, unsigned int)+0xcc>

0000506c <SPIClass::beginTransaction(SPISettings)>:
_ZN8SPIClass16beginTransactionE11SPISettings():
    506c:	20 91 fb 09 	lds	r18, 0x09FB	; 0x8009fb <SPIClass::interruptMode>
    5070:	22 23       	and	r18, r18
    5072:	81 f0       	breq	.+32     	; 0x5094 <SPIClass::beginTransaction(SPISettings)+0x28>
    5074:	3f b7       	in	r19, 0x3f	; 63
    5076:	f8 94       	cli
    5078:	20 91 fb 09 	lds	r18, 0x09FB	; 0x8009fb <SPIClass::interruptMode>
    507c:	21 30       	cpi	r18, 0x01	; 1
    507e:	69 f4       	brne	.+26     	; 0x509a <SPIClass::beginTransaction(SPISettings)+0x2e>
    5080:	2d b3       	in	r18, 0x1d	; 29
    5082:	20 93 f9 09 	sts	0x09F9, r18	; 0x8009f9 <SPIClass::interruptSave>
    5086:	4d b3       	in	r20, 0x1d	; 29
    5088:	20 91 fa 09 	lds	r18, 0x09FA	; 0x8009fa <SPIClass::interruptMask>
    508c:	20 95       	com	r18
    508e:	24 23       	and	r18, r20
    5090:	2d bb       	out	0x1d, r18	; 29
    5092:	3f bf       	out	0x3f, r19	; 63
    5094:	8c bd       	out	0x2c, r24	; 44
    5096:	9d bd       	out	0x2d, r25	; 45
    5098:	08 95       	ret
    509a:	30 93 f9 09 	sts	0x09F9, r19	; 0x8009f9 <SPIClass::interruptSave>
    509e:	fa cf       	rjmp	.-12     	; 0x5094 <SPIClass::beginTransaction(SPISettings)+0x28>

000050a0 <SPIClass::transfer(unsigned char)>:
_ZN8SPIClass8transferEh():
    50a0:	8e bd       	out	0x2e, r24	; 46
    50a2:	00 00       	nop
    50a4:	0d b4       	in	r0, 0x2d	; 45
    50a6:	07 fe       	sbrs	r0, 7
    50a8:	fd cf       	rjmp	.-6      	; 0x50a4 <SPIClass::transfer(unsigned char)+0x4>
    50aa:	8e b5       	in	r24, 0x2e	; 46
    50ac:	08 95       	ret

000050ae <SPIClass::endTransaction()>:
_ZN8SPIClass14endTransactionEv():
    50ae:	80 91 fb 09 	lds	r24, 0x09FB	; 0x8009fb <SPIClass::interruptMode>
    50b2:	88 23       	and	r24, r24
    50b4:	61 f0       	breq	.+24     	; 0x50ce <SPIClass::endTransaction()+0x20>
    50b6:	9f b7       	in	r25, 0x3f	; 63
    50b8:	f8 94       	cli
    50ba:	20 91 fb 09 	lds	r18, 0x09FB	; 0x8009fb <SPIClass::interruptMode>
    50be:	80 91 f9 09 	lds	r24, 0x09F9	; 0x8009f9 <SPIClass::interruptSave>
    50c2:	21 30       	cpi	r18, 0x01	; 1
    50c4:	19 f4       	brne	.+6      	; 0x50cc <SPIClass::endTransaction()+0x1e>
    50c6:	8d bb       	out	0x1d, r24	; 29
    50c8:	9f bf       	out	0x3f, r25	; 63
    50ca:	08 95       	ret
    50cc:	8f bf       	out	0x3f, r24	; 63
    50ce:	08 95       	ret

000050d0 <Adafruit_SSD1306::Adafruit_SSD1306(unsigned char, unsigned char, TwoWire*, signed char, unsigned long, unsigned long)>:
_ZN16Adafruit_SSD1306C2EhhP7TwoWireamm():
    50d0:	4f 92       	push	r4
    50d2:	5f 92       	push	r5
    50d4:	6f 92       	push	r6
    50d6:	7f 92       	push	r7
    50d8:	8f 92       	push	r8
    50da:	9f 92       	push	r9
    50dc:	af 92       	push	r10
    50de:	bf 92       	push	r11
    50e0:	cf 92       	push	r12
    50e2:	df 92       	push	r13
    50e4:	ef 92       	push	r14
    50e6:	ff 92       	push	r15
    50e8:	0f 93       	push	r16
    50ea:	cf 93       	push	r28
    50ec:	df 93       	push	r29
    50ee:	cd b7       	in	r28, 0x3d	; 61
    50f0:	de b7       	in	r29, 0x3e	; 62
    50f2:	3c 01       	movw	r6, r24
    50f4:	29 01       	movw	r4, r18
    50f6:	50 e0       	ldi	r21, 0x00	; 0
    50f8:	70 e0       	ldi	r23, 0x00	; 0
    50fa:	0e 94 9f 2d 	call	0x5b3e	; 0x5b3e <Adafruit_GFX::Adafruit_GFX(int, int)>
    50fe:	81 e1       	ldi	r24, 0x11	; 17
    5100:	97 e0       	ldi	r25, 0x07	; 7
    5102:	f3 01       	movw	r30, r6
    5104:	91 83       	std	Z+1, r25	; 0x01
    5106:	80 83       	st	Z, r24
    5108:	14 8e       	std	Z+28, r1	; 0x1c
    510a:	13 8e       	std	Z+27, r1	; 0x1b
    510c:	41 14       	cp	r4, r1
    510e:	51 04       	cpc	r5, r1
    5110:	21 f4       	brne	.+8      	; 0x511a <Adafruit_SSD1306::Adafruit_SSD1306(unsigned char, unsigned char, TwoWire*, signed char, unsigned long, unsigned long)+0x4a>
    5112:	8c ef       	ldi	r24, 0xFC	; 252
    5114:	48 2e       	mov	r4, r24
    5116:	89 e0       	ldi	r24, 0x09	; 9
    5118:	58 2e       	mov	r5, r24
    511a:	f3 01       	movw	r30, r6
    511c:	56 8e       	std	Z+30, r5	; 0x1e
    511e:	45 8e       	std	Z+29, r4	; 0x1d
    5120:	10 a2       	std	Z+32, r1	; 0x20
    5122:	17 8e       	std	Z+31, r1	; 0x1f
    5124:	8f ef       	ldi	r24, 0xFF	; 255
    5126:	84 a3       	std	Z+36, r24	; 0x24
    5128:	85 a3       	std	Z+37, r24	; 0x25
    512a:	86 a3       	std	Z+38, r24	; 0x26
    512c:	87 a3       	std	Z+39, r24	; 0x27
    512e:	00 a7       	std	Z+40, r16	; 0x28
    5130:	c5 aa       	std	Z+53, r12	; 0x35
    5132:	d6 aa       	std	Z+54, r13	; 0x36
    5134:	e7 aa       	std	Z+55, r14	; 0x37
    5136:	f0 ae       	std	Z+56, r15	; 0x38
    5138:	81 ae       	std	Z+57, r8	; 0x39
    513a:	92 ae       	std	Z+58, r9	; 0x3a
    513c:	a3 ae       	std	Z+59, r10	; 0x3b
    513e:	b4 ae       	std	Z+60, r11	; 0x3c
_ZN11SPISettings17init_AlwaysInlineEmhh():
    5140:	80 e5       	ldi	r24, 0x50	; 80
    5142:	86 af       	std	Z+62, r24	; 0x3e
    5144:	17 ae       	std	Z+63, r1	; 0x3f
_ZN16Adafruit_SSD1306C2EhhP7TwoWireamm():
    5146:	df 91       	pop	r29
    5148:	cf 91       	pop	r28
    514a:	0f 91       	pop	r16
    514c:	ff 90       	pop	r15
    514e:	ef 90       	pop	r14
    5150:	df 90       	pop	r13
    5152:	cf 90       	pop	r12
    5154:	bf 90       	pop	r11
    5156:	af 90       	pop	r10
    5158:	9f 90       	pop	r9
    515a:	8f 90       	pop	r8
    515c:	7f 90       	pop	r7
    515e:	6f 90       	pop	r6
    5160:	5f 90       	pop	r5
    5162:	4f 90       	pop	r4
    5164:	08 95       	ret

00005166 <Adafruit_SSD1306::~Adafruit_SSD1306()>:
_ZN16Adafruit_SSD1306D2Ev():
    5166:	21 e1       	ldi	r18, 0x11	; 17
    5168:	37 e0       	ldi	r19, 0x07	; 7
    516a:	fc 01       	movw	r30, r24
    516c:	31 83       	std	Z+1, r19	; 0x01
    516e:	20 83       	st	Z, r18
    5170:	87 8d       	ldd	r24, Z+31	; 0x1f
    5172:	90 a1       	ldd	r25, Z+32	; 0x20
    5174:	00 97       	sbiw	r24, 0x00	; 0
    5176:	11 f0       	breq	.+4      	; 0x517c <Adafruit_SSD1306::~Adafruit_SSD1306()+0x16>
    5178:	0c 94 e8 3a 	jmp	0x75d0	; 0x75d0 <free>
    517c:	08 95       	ret

0000517e <Adafruit_SSD1306::ssd1306_command1(unsigned char)>:
_ZN16Adafruit_SSD130616ssd1306_command1Eh():
    517e:	1f 93       	push	r17
    5180:	cf 93       	push	r28
    5182:	df 93       	push	r29
    5184:	ec 01       	movw	r28, r24
    5186:	8d 8d       	ldd	r24, Y+29	; 0x1d
    5188:	9e 8d       	ldd	r25, Y+30	; 0x1e
    518a:	00 97       	sbiw	r24, 0x00	; 0
    518c:	11 f1       	breq	.+68     	; 0x51d2 <Adafruit_SSD1306::ssd1306_command1(unsigned char)+0x54>
    518e:	16 2f       	mov	r17, r22
    5190:	69 a1       	ldd	r22, Y+33	; 0x21
    5192:	06 2e       	mov	r0, r22
    5194:	00 0c       	add	r0, r0
    5196:	77 0b       	sbc	r23, r23
    5198:	0e 94 94 31 	call	0x6328	; 0x6328 <TwoWire::beginTransmission(int)>
    519c:	8d 8d       	ldd	r24, Y+29	; 0x1d
    519e:	9e 8d       	ldd	r25, Y+30	; 0x1e
    51a0:	dc 01       	movw	r26, r24
    51a2:	ed 91       	ld	r30, X+
    51a4:	fc 91       	ld	r31, X
    51a6:	01 90       	ld	r0, Z+
    51a8:	f0 81       	ld	r31, Z
    51aa:	e0 2d       	mov	r30, r0
    51ac:	60 e0       	ldi	r22, 0x00	; 0
    51ae:	09 95       	icall
    51b0:	8d 8d       	ldd	r24, Y+29	; 0x1d
    51b2:	9e 8d       	ldd	r25, Y+30	; 0x1e
    51b4:	dc 01       	movw	r26, r24
    51b6:	ed 91       	ld	r30, X+
    51b8:	fc 91       	ld	r31, X
    51ba:	01 90       	ld	r0, Z+
    51bc:	f0 81       	ld	r31, Z
    51be:	e0 2d       	mov	r30, r0
    51c0:	61 2f       	mov	r22, r17
    51c2:	09 95       	icall
    51c4:	8d 8d       	ldd	r24, Y+29	; 0x1d
    51c6:	9e 8d       	ldd	r25, Y+30	; 0x1e
    51c8:	df 91       	pop	r29
    51ca:	cf 91       	pop	r28
    51cc:	1f 91       	pop	r17
    51ce:	0c 94 a9 31 	jmp	0x6352	; 0x6352 <TwoWire::endTransmission()>
    51d2:	ad a5       	ldd	r26, Y+45	; 0x2d
    51d4:	be a5       	ldd	r27, Y+46	; 0x2e
    51d6:	9c 91       	ld	r25, X
    51d8:	8b a9       	ldd	r24, Y+51	; 0x33
    51da:	80 95       	com	r24
    51dc:	89 23       	and	r24, r25
    51de:	8c 93       	st	X, r24
_ZN16Adafruit_SSD13068SPIwriteEh():
    51e0:	8b 8d       	ldd	r24, Y+27	; 0x1b
    51e2:	9c 8d       	ldd	r25, Y+28	; 0x1c
    51e4:	89 2b       	or	r24, r25
    51e6:	31 f0       	breq	.+12     	; 0x51f4 <Adafruit_SSD1306::ssd1306_command1(unsigned char)+0x76>
    51e8:	86 2f       	mov	r24, r22
_ZN16Adafruit_SSD130616ssd1306_command1Eh():
    51ea:	df 91       	pop	r29
    51ec:	cf 91       	pop	r28
    51ee:	1f 91       	pop	r17
_ZN16Adafruit_SSD13068SPIwriteEh():
    51f0:	0c 94 50 28 	jmp	0x50a0	; 0x50a0 <SPIClass::transfer(unsigned char)>
    51f4:	28 e0       	ldi	r18, 0x08	; 8
    51f6:	30 e0       	ldi	r19, 0x00	; 0
    51f8:	80 e8       	ldi	r24, 0x80	; 128
    51fa:	a9 a5       	ldd	r26, Y+41	; 0x29
    51fc:	ba a5       	ldd	r27, Y+42	; 0x2a
    51fe:	99 a9       	ldd	r25, Y+49	; 0x31
    5200:	46 2f       	mov	r20, r22
    5202:	48 23       	and	r20, r24
    5204:	c1 f0       	breq	.+48     	; 0x5236 <Adafruit_SSD1306::ssd1306_command1(unsigned char)+0xb8>
    5206:	4c 91       	ld	r20, X
    5208:	94 2b       	or	r25, r20
    520a:	9c 93       	st	X, r25
    520c:	ab a5       	ldd	r26, Y+43	; 0x2b
    520e:	bc a5       	ldd	r27, Y+44	; 0x2c
    5210:	9c 91       	ld	r25, X
    5212:	4a a9       	ldd	r20, Y+50	; 0x32
    5214:	94 2b       	or	r25, r20
    5216:	9c 93       	st	X, r25
    5218:	ab a5       	ldd	r26, Y+43	; 0x2b
    521a:	bc a5       	ldd	r27, Y+44	; 0x2c
    521c:	4c 91       	ld	r20, X
    521e:	9a a9       	ldd	r25, Y+50	; 0x32
    5220:	90 95       	com	r25
    5222:	94 23       	and	r25, r20
    5224:	9c 93       	st	X, r25
    5226:	86 95       	lsr	r24
    5228:	21 50       	subi	r18, 0x01	; 1
    522a:	31 09       	sbc	r19, r1
    522c:	31 f7       	brne	.-52     	; 0x51fa <Adafruit_SSD1306::ssd1306_command1(unsigned char)+0x7c>
_ZN16Adafruit_SSD130616ssd1306_command1Eh():
    522e:	df 91       	pop	r29
    5230:	cf 91       	pop	r28
    5232:	1f 91       	pop	r17
    5234:	08 95       	ret
_ZN16Adafruit_SSD13068SPIwriteEh():
    5236:	4c 91       	ld	r20, X
    5238:	90 95       	com	r25
    523a:	94 23       	and	r25, r20
    523c:	e6 cf       	rjmp	.-52     	; 0x520a <Adafruit_SSD1306::ssd1306_command1(unsigned char)+0x8c>

0000523e <Adafruit_SSD1306::invertDisplay(bool)>:
_ZN16Adafruit_SSD130613invertDisplayEb():
    523e:	1f 93       	push	r17
    5240:	cf 93       	push	r28
    5242:	df 93       	push	r29
    5244:	ec 01       	movw	r28, r24
    5246:	16 2f       	mov	r17, r22
    5248:	8d 8d       	ldd	r24, Y+29	; 0x1d
    524a:	9e 8d       	ldd	r25, Y+30	; 0x1e
    524c:	00 97       	sbiw	r24, 0x00	; 0
    524e:	c9 f0       	breq	.+50     	; 0x5282 <Adafruit_SSD1306::invertDisplay(bool)+0x44>
    5250:	4d a9       	ldd	r20, Y+53	; 0x35
    5252:	5e a9       	ldd	r21, Y+54	; 0x36
    5254:	6f a9       	ldd	r22, Y+55	; 0x37
    5256:	78 ad       	ldd	r23, Y+56	; 0x38
    5258:	0e 94 86 31 	call	0x630c	; 0x630c <TwoWire::setClock(unsigned long)>
    525c:	66 ea       	ldi	r22, 0xA6	; 166
    525e:	11 11       	cpse	r17, r1
    5260:	67 ea       	ldi	r22, 0xA7	; 167
    5262:	ce 01       	movw	r24, r28
    5264:	0e 94 bf 28 	call	0x517e	; 0x517e <Adafruit_SSD1306::ssd1306_command1(unsigned char)>
    5268:	8d 8d       	ldd	r24, Y+29	; 0x1d
    526a:	9e 8d       	ldd	r25, Y+30	; 0x1e
    526c:	00 97       	sbiw	r24, 0x00	; 0
    526e:	c9 f0       	breq	.+50     	; 0x52a2 <Adafruit_SSD1306::invertDisplay(bool)+0x64>
    5270:	49 ad       	ldd	r20, Y+57	; 0x39
    5272:	5a ad       	ldd	r21, Y+58	; 0x3a
    5274:	6b ad       	ldd	r22, Y+59	; 0x3b
    5276:	7c ad       	ldd	r23, Y+60	; 0x3c
    5278:	df 91       	pop	r29
    527a:	cf 91       	pop	r28
    527c:	1f 91       	pop	r17
    527e:	0c 94 86 31 	jmp	0x630c	; 0x630c <TwoWire::setClock(unsigned long)>
    5282:	8b 8d       	ldd	r24, Y+27	; 0x1b
    5284:	9c 8d       	ldd	r25, Y+28	; 0x1c
    5286:	89 2b       	or	r24, r25
    5288:	21 f0       	breq	.+8      	; 0x5292 <Adafruit_SSD1306::invertDisplay(bool)+0x54>
    528a:	8e ad       	ldd	r24, Y+62	; 0x3e
    528c:	9f ad       	ldd	r25, Y+63	; 0x3f
    528e:	0e 94 36 28 	call	0x506c	; 0x506c <SPIClass::beginTransaction(SPISettings)>
    5292:	ef a5       	ldd	r30, Y+47	; 0x2f
    5294:	f8 a9       	ldd	r31, Y+48	; 0x30
    5296:	90 81       	ld	r25, Z
    5298:	8c a9       	ldd	r24, Y+52	; 0x34
    529a:	80 95       	com	r24
    529c:	89 23       	and	r24, r25
    529e:	80 83       	st	Z, r24
    52a0:	dd cf       	rjmp	.-70     	; 0x525c <Adafruit_SSD1306::invertDisplay(bool)+0x1e>
    52a2:	ef a5       	ldd	r30, Y+47	; 0x2f
    52a4:	f8 a9       	ldd	r31, Y+48	; 0x30
    52a6:	80 81       	ld	r24, Z
    52a8:	9c a9       	ldd	r25, Y+52	; 0x34
    52aa:	89 2b       	or	r24, r25
    52ac:	80 83       	st	Z, r24
    52ae:	8b 8d       	ldd	r24, Y+27	; 0x1b
    52b0:	9c 8d       	ldd	r25, Y+28	; 0x1c
    52b2:	89 2b       	or	r24, r25
    52b4:	29 f0       	breq	.+10     	; 0x52c0 <Adafruit_SSD1306::invertDisplay(bool)+0x82>
    52b6:	df 91       	pop	r29
    52b8:	cf 91       	pop	r28
    52ba:	1f 91       	pop	r17
    52bc:	0c 94 57 28 	jmp	0x50ae	; 0x50ae <SPIClass::endTransaction()>
    52c0:	df 91       	pop	r29
    52c2:	cf 91       	pop	r28
    52c4:	1f 91       	pop	r17
    52c6:	08 95       	ret

000052c8 <Adafruit_SSD1306::drawFastHLineInternal(int, int, int, unsigned int)>:
_ZN16Adafruit_SSD130621drawFastHLineInternalEiiij():
/Users/DS 1/Documents/Arduino/libraries/Adafruit_SSD1306/Adafruit_SSD1306.cpp:698
  else
    drawFastHLineInternal(x, y, w, color);
}

void Adafruit_SSD1306::drawFastHLineInternal(int16_t x, int16_t y, int16_t w,
                                             uint16_t color) {
    52c8:	0f 93       	push	r16
    52ca:	1f 93       	push	r17
    52cc:	cf 93       	push	r28
    52ce:	df 93       	push	r29
    52d0:	dc 01       	movw	r26, r24
/Users/DS 1/Documents/Arduino/libraries/Adafruit_SSD1306/Adafruit_SSD1306.cpp:700

  if ((y >= 0) && (y < HEIGHT)) { // Y coord in bounds?
    52d2:	57 fd       	sbrc	r21, 7
    52d4:	46 c0       	rjmp	.+140    	; 0x5362 <Adafruit_SSD1306::drawFastHLineInternal(int, int, int, unsigned int)+0x9a>
/Users/DS 1/Documents/Arduino/libraries/Adafruit_SSD1306/Adafruit_SSD1306.cpp:700 (discriminator 1)
    52d6:	16 96       	adiw	r26, 0x06	; 6
    52d8:	8d 91       	ld	r24, X+
    52da:	9c 91       	ld	r25, X
    52dc:	17 97       	sbiw	r26, 0x07	; 7
    52de:	48 17       	cp	r20, r24
    52e0:	59 07       	cpc	r21, r25
    52e2:	0c f0       	brlt	.+2      	; 0x52e6 <Adafruit_SSD1306::drawFastHLineInternal(int, int, int, unsigned int)+0x1e>
    52e4:	3e c0       	rjmp	.+124    	; 0x5362 <Adafruit_SSD1306::drawFastHLineInternal(int, int, int, unsigned int)+0x9a>
/Users/DS 1/Documents/Arduino/libraries/Adafruit_SSD1306/Adafruit_SSD1306.cpp:701
    if (x < 0) {                  // Clip left
    52e6:	77 ff       	sbrs	r23, 7
    52e8:	04 c0       	rjmp	.+8      	; 0x52f2 <Adafruit_SSD1306::drawFastHLineInternal(int, int, int, unsigned int)+0x2a>
    52ea:	26 0f       	add	r18, r22
    52ec:	37 1f       	adc	r19, r23
/Users/DS 1/Documents/Arduino/libraries/Adafruit_SSD1306/Adafruit_SSD1306.cpp:703
      w += x;
      x = 0;
    52ee:	70 e0       	ldi	r23, 0x00	; 0
    52f0:	60 e0       	ldi	r22, 0x00	; 0
/Users/DS 1/Documents/Arduino/libraries/Adafruit_SSD1306/Adafruit_SSD1306.cpp:705
    }
    if ((x + w) > WIDTH) { // Clip right
    52f2:	14 96       	adiw	r26, 0x04	; 4
    52f4:	cd 91       	ld	r28, X+
    52f6:	dc 91       	ld	r29, X
    52f8:	15 97       	sbiw	r26, 0x05	; 5
    52fa:	cb 01       	movw	r24, r22
    52fc:	82 0f       	add	r24, r18
    52fe:	93 1f       	adc	r25, r19
    5300:	c8 17       	cp	r28, r24
    5302:	d9 07       	cpc	r29, r25
    5304:	1c f4       	brge	.+6      	; 0x530c <Adafruit_SSD1306::drawFastHLineInternal(int, int, int, unsigned int)+0x44>
/Users/DS 1/Documents/Arduino/libraries/Adafruit_SSD1306/Adafruit_SSD1306.cpp:706
      w = (WIDTH - x);
    5306:	9e 01       	movw	r18, r28
    5308:	26 1b       	sub	r18, r22
    530a:	37 0b       	sbc	r19, r23
/Users/DS 1/Documents/Arduino/libraries/Adafruit_SSD1306/Adafruit_SSD1306.cpp:708
    }
    if (w > 0) { // Proceed only if width is positive
    530c:	12 16       	cp	r1, r18
    530e:	13 06       	cpc	r1, r19
    5310:	44 f5       	brge	.+80     	; 0x5362 <Adafruit_SSD1306::drawFastHLineInternal(int, int, int, unsigned int)+0x9a>
/Users/DS 1/Documents/Arduino/libraries/Adafruit_SSD1306/Adafruit_SSD1306.cpp:709
      uint8_t *pBuf = &buffer[(y / 8) * WIDTH + x], mask = 1 << (y & 7);
    5312:	fa 01       	movw	r30, r20
    5314:	57 fd       	sbrc	r21, 7
    5316:	37 96       	adiw	r30, 0x07	; 7
    5318:	83 e0       	ldi	r24, 0x03	; 3
    531a:	f5 95       	asr	r31
    531c:	e7 95       	ror	r30
    531e:	8a 95       	dec	r24
    5320:	e1 f7       	brne	.-8      	; 0x531a <Adafruit_SSD1306::drawFastHLineInternal(int, int, int, unsigned int)+0x52>
    5322:	ec 9f       	mul	r30, r28
    5324:	c0 01       	movw	r24, r0
    5326:	ed 9f       	mul	r30, r29
    5328:	90 0d       	add	r25, r0
    532a:	fc 9f       	mul	r31, r28
    532c:	90 0d       	add	r25, r0
    532e:	11 24       	eor	r1, r1
    5330:	68 0f       	add	r22, r24
    5332:	79 1f       	adc	r23, r25
    5334:	5f 96       	adiw	r26, 0x1f	; 31
    5336:	ed 91       	ld	r30, X+
    5338:	fc 91       	ld	r31, X
    533a:	e6 0f       	add	r30, r22
    533c:	f7 1f       	adc	r31, r23
    533e:	47 70       	andi	r20, 0x07	; 7
    5340:	55 27       	eor	r21, r21
    5342:	81 e0       	ldi	r24, 0x01	; 1
    5344:	90 e0       	ldi	r25, 0x00	; 0
    5346:	01 c0       	rjmp	.+2      	; 0x534a <Adafruit_SSD1306::drawFastHLineInternal(int, int, int, unsigned int)+0x82>
    5348:	88 0f       	add	r24, r24
    534a:	4a 95       	dec	r20
    534c:	ea f7       	brpl	.-6      	; 0x5348 <Adafruit_SSD1306::drawFastHLineInternal(int, int, int, unsigned int)+0x80>
    534e:	48 2f       	mov	r20, r24
/Users/DS 1/Documents/Arduino/libraries/Adafruit_SSD1306/Adafruit_SSD1306.cpp:710
      switch (color) {
    5350:	01 30       	cpi	r16, 0x01	; 1
    5352:	11 05       	cpc	r17, r1
    5354:	59 f0       	breq	.+22     	; 0x536c <Adafruit_SSD1306::drawFastHLineInternal(int, int, int, unsigned int)+0xa4>
    5356:	a8 f0       	brcs	.+42     	; 0x5382 <Adafruit_SSD1306::drawFastHLineInternal(int, int, int, unsigned int)+0xba>
    5358:	2e 0f       	add	r18, r30
    535a:	3f 1f       	adc	r19, r31
    535c:	02 30       	cpi	r16, 0x02	; 2
    535e:	11 05       	cpc	r17, r1
    5360:	e1 f0       	breq	.+56     	; 0x539a <Adafruit_SSD1306::drawFastHLineInternal(int, int, int, unsigned int)+0xd2>
/Users/DS 1/Documents/Arduino/libraries/Adafruit_SSD1306/Adafruit_SSD1306.cpp:730
        };
        break;
      }
    }
  }
}
    5362:	df 91       	pop	r29
    5364:	cf 91       	pop	r28
    5366:	1f 91       	pop	r17
    5368:	0f 91       	pop	r16
    536a:	08 95       	ret
    536c:	2e 0f       	add	r18, r30
    536e:	3f 1f       	adc	r19, r31
/Users/DS 1/Documents/Arduino/libraries/Adafruit_SSD1306/Adafruit_SSD1306.cpp:712
    }
    if (w > 0) { // Proceed only if width is positive
      uint8_t *pBuf = &buffer[(y / 8) * WIDTH + x], mask = 1 << (y & 7);
      switch (color) {
      case SSD1306_WHITE:
        while (w--) {
    5370:	e2 17       	cp	r30, r18
    5372:	f3 07       	cpc	r31, r19
    5374:	b1 f3       	breq	.-20     	; 0x5362 <Adafruit_SSD1306::drawFastHLineInternal(int, int, int, unsigned int)+0x9a>
/Users/DS 1/Documents/Arduino/libraries/Adafruit_SSD1306/Adafruit_SSD1306.cpp:713
          *pBuf++ |= mask;
    5376:	81 91       	ld	r24, Z+
    5378:	df 01       	movw	r26, r30
    537a:	11 97       	sbiw	r26, 0x01	; 1
    537c:	84 2b       	or	r24, r20
    537e:	8c 93       	st	X, r24
    5380:	f7 cf       	rjmp	.-18     	; 0x5370 <Adafruit_SSD1306::drawFastHLineInternal(int, int, int, unsigned int)+0xa8>
/Users/DS 1/Documents/Arduino/libraries/Adafruit_SSD1306/Adafruit_SSD1306.cpp:717
        };
        break;
      case SSD1306_BLACK:
        mask = ~mask;
    5382:	80 95       	com	r24
    5384:	2e 0f       	add	r18, r30
    5386:	3f 1f       	adc	r19, r31
/Users/DS 1/Documents/Arduino/libraries/Adafruit_SSD1306/Adafruit_SSD1306.cpp:718
        while (w--) {
    5388:	e2 17       	cp	r30, r18
    538a:	f3 07       	cpc	r31, r19
    538c:	51 f3       	breq	.-44     	; 0x5362 <Adafruit_SSD1306::drawFastHLineInternal(int, int, int, unsigned int)+0x9a>
/Users/DS 1/Documents/Arduino/libraries/Adafruit_SSD1306/Adafruit_SSD1306.cpp:719
          *pBuf++ &= mask;
    538e:	91 91       	ld	r25, Z+
    5390:	df 01       	movw	r26, r30
    5392:	11 97       	sbiw	r26, 0x01	; 1
    5394:	98 23       	and	r25, r24
    5396:	9c 93       	st	X, r25
    5398:	f7 cf       	rjmp	.-18     	; 0x5388 <Adafruit_SSD1306::drawFastHLineInternal(int, int, int, unsigned int)+0xc0>
/Users/DS 1/Documents/Arduino/libraries/Adafruit_SSD1306/Adafruit_SSD1306.cpp:723
        };
        break;
      case SSD1306_INVERSE:
        while (w--) {
    539a:	e2 17       	cp	r30, r18
    539c:	f3 07       	cpc	r31, r19
    539e:	09 f3       	breq	.-62     	; 0x5362 <Adafruit_SSD1306::drawFastHLineInternal(int, int, int, unsigned int)+0x9a>
/Users/DS 1/Documents/Arduino/libraries/Adafruit_SSD1306/Adafruit_SSD1306.cpp:724
          *pBuf++ ^= mask;
    53a0:	81 91       	ld	r24, Z+
    53a2:	df 01       	movw	r26, r30
    53a4:	11 97       	sbiw	r26, 0x01	; 1
    53a6:	84 27       	eor	r24, r20
    53a8:	8c 93       	st	X, r24
    53aa:	f7 cf       	rjmp	.-18     	; 0x539a <Adafruit_SSD1306::drawFastHLineInternal(int, int, int, unsigned int)+0xd2>

000053ac <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)>:
_ZN16Adafruit_SSD130621drawFastVLineInternalEiiij():
/Users/DS 1/Documents/Arduino/libraries/Adafruit_SSD1306/Adafruit_SSD1306.cpp:781
  else
    drawFastVLineInternal(x, y, h, color);
}

void Adafruit_SSD1306::drawFastVLineInternal(int16_t x, int16_t __y,
                                             int16_t __h, uint16_t color) {
    53ac:	ef 92       	push	r14
    53ae:	ff 92       	push	r15
    53b0:	0f 93       	push	r16
    53b2:	1f 93       	push	r17
    53b4:	cf 93       	push	r28
    53b6:	df 93       	push	r29
    53b8:	ec 01       	movw	r28, r24
/Users/DS 1/Documents/Arduino/libraries/Adafruit_SSD1306/Adafruit_SSD1306.cpp:783

  if ((x >= 0) && (x < WIDTH)) { // X coord in bounds?
    53ba:	77 fd       	sbrc	r23, 7
    53bc:	76 c0       	rjmp	.+236    	; 0x54aa <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)+0xfe>
    53be:	ec 80       	ldd	r14, Y+4	; 0x04
    53c0:	fd 80       	ldd	r15, Y+5	; 0x05
    53c2:	6e 15       	cp	r22, r14
    53c4:	7f 05       	cpc	r23, r15
    53c6:	0c f0       	brlt	.+2      	; 0x53ca <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)+0x1e>
    53c8:	70 c0       	rjmp	.+224    	; 0x54aa <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)+0xfe>
/Users/DS 1/Documents/Arduino/libraries/Adafruit_SSD1306/Adafruit_SSD1306.cpp:784
    if (__y < 0) {               // Clip top
    53ca:	57 ff       	sbrs	r21, 7
    53cc:	04 c0       	rjmp	.+8      	; 0x53d6 <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)+0x2a>
    53ce:	24 0f       	add	r18, r20
    53d0:	35 1f       	adc	r19, r21
/Users/DS 1/Documents/Arduino/libraries/Adafruit_SSD1306/Adafruit_SSD1306.cpp:786
      __h += __y;
      __y = 0;
    53d2:	50 e0       	ldi	r21, 0x00	; 0
    53d4:	40 e0       	ldi	r20, 0x00	; 0
/Users/DS 1/Documents/Arduino/libraries/Adafruit_SSD1306/Adafruit_SSD1306.cpp:788
    }
    if ((__y + __h) > HEIGHT) { // Clip bottom
    53d6:	8e 81       	ldd	r24, Y+6	; 0x06
    53d8:	9f 81       	ldd	r25, Y+7	; 0x07
    53da:	fa 01       	movw	r30, r20
    53dc:	e2 0f       	add	r30, r18
    53de:	f3 1f       	adc	r31, r19
    53e0:	8e 17       	cp	r24, r30
    53e2:	9f 07       	cpc	r25, r31
    53e4:	1c f4       	brge	.+6      	; 0x53ec <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)+0x40>
/Users/DS 1/Documents/Arduino/libraries/Adafruit_SSD1306/Adafruit_SSD1306.cpp:789
      __h = (HEIGHT - __y);
    53e6:	9c 01       	movw	r18, r24
    53e8:	24 1b       	sub	r18, r20
    53ea:	35 0b       	sbc	r19, r21
/Users/DS 1/Documents/Arduino/libraries/Adafruit_SSD1306/Adafruit_SSD1306.cpp:791
    }
    if (__h > 0) { // Proceed only if height is now positive
    53ec:	12 16       	cp	r1, r18
    53ee:	13 06       	cpc	r1, r19
    53f0:	0c f0       	brlt	.+2      	; 0x53f4 <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)+0x48>
    53f2:	5b c0       	rjmp	.+182    	; 0x54aa <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)+0xfe>
/Users/DS 1/Documents/Arduino/libraries/Adafruit_SSD1306/Adafruit_SSD1306.cpp:794
      // this display doesn't need ints for coordinates,
      // use local byte registers for faster juggling
      uint8_t y = __y, h = __h;
    53f4:	92 2f       	mov	r25, r18
/Users/DS 1/Documents/Arduino/libraries/Adafruit_SSD1306/Adafruit_SSD1306.cpp:795
      uint8_t *pBuf = &buffer[(y / 8) * WIDTH + x];
    53f6:	84 2f       	mov	r24, r20
    53f8:	86 95       	lsr	r24
    53fa:	86 95       	lsr	r24
    53fc:	86 95       	lsr	r24
    53fe:	8e 9d       	mul	r24, r14
    5400:	d0 01       	movw	r26, r0
    5402:	8f 9d       	mul	r24, r15
    5404:	b0 0d       	add	r27, r0
    5406:	11 24       	eor	r1, r1
    5408:	6a 0f       	add	r22, r26
    540a:	7b 1f       	adc	r23, r27
    540c:	af 8d       	ldd	r26, Y+31	; 0x1f
    540e:	b8 a1       	ldd	r27, Y+32	; 0x20
    5410:	a6 0f       	add	r26, r22
    5412:	b7 1f       	adc	r27, r23
/Users/DS 1/Documents/Arduino/libraries/Adafruit_SSD1306/Adafruit_SSD1306.cpp:798

      // do the first partial byte, if necessary - this requires some masking
      uint8_t mod = (y & 7);
    5414:	47 70       	andi	r20, 0x07	; 7
/Users/DS 1/Documents/Arduino/libraries/Adafruit_SSD1306/Adafruit_SSD1306.cpp:799
      if (mod) {
    5416:	49 f1       	breq	.+82     	; 0x546a <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)+0xbe>
/Users/DS 1/Documents/Arduino/libraries/Adafruit_SSD1306/Adafruit_SSD1306.cpp:801
        // mask off the high n bits we want to set
        mod = 8 - mod;
    5418:	88 e0       	ldi	r24, 0x08	; 8
    541a:	84 1b       	sub	r24, r20
    541c:	48 2f       	mov	r20, r24
/Users/DS 1/Documents/Arduino/libraries/Adafruit_SSD1306/Adafruit_SSD1306.cpp:807
        // note - lookup table results in a nearly 10% performance
        // improvement in fill* functions
        // uint8_t mask = ~(0xFF >> mod);
        static const uint8_t PROGMEM premask[8] = {0x00, 0x80, 0xC0, 0xE0,
                                                   0xF0, 0xF8, 0xFC, 0xFE};
        uint8_t mask = pgm_read_byte(&premask[mod]);
    541e:	68 2f       	mov	r22, r24
    5420:	70 e0       	ldi	r23, 0x00	; 0
    5422:	fb 01       	movw	r30, r22
    5424:	ec 56       	subi	r30, 0x6C	; 108
    5426:	ff 4f       	sbci	r31, 0xFF	; 255
    5428:	e4 91       	lpm	r30, Z
/Users/DS 1/Documents/Arduino/libraries/Adafruit_SSD1306/Adafruit_SSD1306.cpp:809
        // adjust the mask if we're not going to reach the end of this byte
        if (h < mod)
    542a:	28 17       	cp	r18, r24
    542c:	08 f0       	brcs	.+2      	; 0x5430 <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)+0x84>
    542e:	63 c0       	rjmp	.+198    	; 0x54f6 <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)+0x14a>
/Users/DS 1/Documents/Arduino/libraries/Adafruit_SSD1306/Adafruit_SSD1306.cpp:810
          mask &= (0XFF >> (mod - h));
    5430:	62 1b       	sub	r22, r18
    5432:	71 09       	sbc	r23, r1
    5434:	2f ef       	ldi	r18, 0xFF	; 255
    5436:	30 e0       	ldi	r19, 0x00	; 0
    5438:	02 c0       	rjmp	.+4      	; 0x543e <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)+0x92>
    543a:	35 95       	asr	r19
    543c:	27 95       	ror	r18
    543e:	6a 95       	dec	r22
    5440:	e2 f7       	brpl	.-8      	; 0x543a <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)+0x8e>
    5442:	e2 23       	and	r30, r18
/Users/DS 1/Documents/Arduino/libraries/Adafruit_SSD1306/Adafruit_SSD1306.cpp:812

        switch (color) {
    5444:	01 30       	cpi	r16, 0x01	; 1
    5446:	11 05       	cpc	r17, r1
    5448:	39 f0       	breq	.+14     	; 0x5458 <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)+0xac>
    544a:	b0 f1       	brcs	.+108    	; 0x54b8 <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)+0x10c>
    544c:	02 30       	cpi	r16, 0x02	; 2
    544e:	11 05       	cpc	r17, r1
    5450:	61 f5       	brne	.+88     	; 0x54aa <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)+0xfe>
/Users/DS 1/Documents/Arduino/libraries/Adafruit_SSD1306/Adafruit_SSD1306.cpp:820
          break;
        case SSD1306_BLACK:
          *pBuf &= ~mask;
          break;
        case SSD1306_INVERSE:
          *pBuf ^= mask;
    5452:	8c 91       	ld	r24, X
    5454:	e8 27       	eor	r30, r24
    5456:	02 c0       	rjmp	.+4      	; 0x545c <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)+0xb0>
/Users/DS 1/Documents/Arduino/libraries/Adafruit_SSD1306/Adafruit_SSD1306.cpp:814
        if (h < mod)
          mask &= (0XFF >> (mod - h));

        switch (color) {
        case SSD1306_WHITE:
          *pBuf |= mask;
    5458:	8c 91       	ld	r24, X
    545a:	e8 2b       	or	r30, r24
/Users/DS 1/Documents/Arduino/libraries/Adafruit_SSD1306/Adafruit_SSD1306.cpp:820
          break;
        case SSD1306_BLACK:
          *pBuf &= ~mask;
          break;
        case SSD1306_INVERSE:
          *pBuf ^= mask;
    545c:	ec 93       	st	X, r30
/Users/DS 1/Documents/Arduino/libraries/Adafruit_SSD1306/Adafruit_SSD1306.cpp:826
          break;
        }
        pBuf += WIDTH;
      }

      if (h >= mod) { // More to go?
    545e:	94 17       	cp	r25, r20
    5460:	20 f1       	brcs	.+72     	; 0x54aa <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)+0xfe>
/Users/DS 1/Documents/Arduino/libraries/Adafruit_SSD1306/Adafruit_SSD1306.cpp:823
          break;
        case SSD1306_INVERSE:
          *pBuf ^= mask;
          break;
        }
        pBuf += WIDTH;
    5462:	2c 81       	ldd	r18, Y+4	; 0x04
    5464:	3d 81       	ldd	r19, Y+5	; 0x05
    5466:	a2 0f       	add	r26, r18
    5468:	b3 1f       	adc	r27, r19
/Users/DS 1/Documents/Arduino/libraries/Adafruit_SSD1306/Adafruit_SSD1306.cpp:827
      }

      if (h >= mod) { // More to go?
        h -= mod;
    546a:	e9 2f       	mov	r30, r25
    546c:	e4 1b       	sub	r30, r20
/Users/DS 1/Documents/Arduino/libraries/Adafruit_SSD1306/Adafruit_SSD1306.cpp:829
        // Write solid bytes while we can - effectively 8 rows at a time
        if (h >= 8) {
    546e:	e8 30       	cpi	r30, 0x08	; 8
    5470:	78 f0       	brcs	.+30     	; 0x5490 <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)+0xe4>
/Users/DS 1/Documents/Arduino/libraries/Adafruit_SSD1306/Adafruit_SSD1306.cpp:830
          if (color == SSD1306_INVERSE) {
    5472:	02 30       	cpi	r16, 0x02	; 2
    5474:	11 05       	cpc	r17, r1
    5476:	21 f5       	brne	.+72     	; 0x54c0 <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)+0x114>
    5478:	8e 2f       	mov	r24, r30
/Users/DS 1/Documents/Arduino/libraries/Adafruit_SSD1306/Adafruit_SSD1306.cpp:834
            // separate copy of the code so we don't impact performance of
            // black/white write version with an extra comparison per loop
            do {
              *pBuf ^= 0xFF; // Invert byte
    547a:	9c 91       	ld	r25, X
    547c:	90 95       	com	r25
    547e:	9c 93       	st	X, r25
/Users/DS 1/Documents/Arduino/libraries/Adafruit_SSD1306/Adafruit_SSD1306.cpp:835
              pBuf += WIDTH; // Advance pointer 8 rows
    5480:	2c 81       	ldd	r18, Y+4	; 0x04
    5482:	3d 81       	ldd	r19, Y+5	; 0x05
    5484:	a2 0f       	add	r26, r18
    5486:	b3 1f       	adc	r27, r19
/Users/DS 1/Documents/Arduino/libraries/Adafruit_SSD1306/Adafruit_SSD1306.cpp:836
              h -= 8;        // Subtract 8 rows from height
    5488:	88 50       	subi	r24, 0x08	; 8
/Users/DS 1/Documents/Arduino/libraries/Adafruit_SSD1306/Adafruit_SSD1306.cpp:837
            } while (h >= 8);
    548a:	88 30       	cpi	r24, 0x08	; 8
    548c:	b0 f7       	brcc	.-20     	; 0x547a <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)+0xce>
    548e:	e7 70       	andi	r30, 0x07	; 7
/Users/DS 1/Documents/Arduino/libraries/Adafruit_SSD1306/Adafruit_SSD1306.cpp:849
              h -= 8;        // Subtract 8 rows from height
            } while (h >= 8);
          }
        }

        if (h) { // Do the final partial byte, if necessary
    5490:	ee 23       	and	r30, r30
    5492:	59 f0       	breq	.+22     	; 0x54aa <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)+0xfe>
/Users/DS 1/Documents/Arduino/libraries/Adafruit_SSD1306/Adafruit_SSD1306.cpp:858
          // uint8_t mask = (1 << mod) - 1;
          // note - lookup table results in a nearly 10% performance
          // improvement in fill* functions
          static const uint8_t PROGMEM postmask[8] = {0x00, 0x01, 0x03, 0x07,
                                                      0x0F, 0x1F, 0x3F, 0x7F};
          uint8_t mask = pgm_read_byte(&postmask[mod]);
    5494:	f0 e0       	ldi	r31, 0x00	; 0
    5496:	e4 57       	subi	r30, 0x74	; 116
    5498:	ff 4f       	sbci	r31, 0xFF	; 255
    549a:	e4 91       	lpm	r30, Z
/Users/DS 1/Documents/Arduino/libraries/Adafruit_SSD1306/Adafruit_SSD1306.cpp:859
          switch (color) {
    549c:	01 30       	cpi	r16, 0x01	; 1
    549e:	11 05       	cpc	r17, r1
    54a0:	f9 f0       	breq	.+62     	; 0x54e0 <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)+0x134>
    54a2:	10 f1       	brcs	.+68     	; 0x54e8 <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)+0x13c>
    54a4:	02 30       	cpi	r16, 0x02	; 2
    54a6:	11 05       	cpc	r17, r1
    54a8:	19 f1       	breq	.+70     	; 0x54f0 <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)+0x144>
/Users/DS 1/Documents/Arduino/libraries/Adafruit_SSD1306/Adafruit_SSD1306.cpp:874
          }
        }
      }
    } // endif positive height
  }   // endif x in bounds
}
    54aa:	df 91       	pop	r29
    54ac:	cf 91       	pop	r28
    54ae:	1f 91       	pop	r17
    54b0:	0f 91       	pop	r16
    54b2:	ff 90       	pop	r15
    54b4:	ef 90       	pop	r14
    54b6:	08 95       	ret
/Users/DS 1/Documents/Arduino/libraries/Adafruit_SSD1306/Adafruit_SSD1306.cpp:817
        switch (color) {
        case SSD1306_WHITE:
          *pBuf |= mask;
          break;
        case SSD1306_BLACK:
          *pBuf &= ~mask;
    54b8:	e0 95       	com	r30
    54ba:	8c 91       	ld	r24, X
    54bc:	e8 23       	and	r30, r24
    54be:	ce cf       	rjmp	.-100    	; 0x545c <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)+0xb0>
/Users/DS 1/Documents/Arduino/libraries/Adafruit_SSD1306/Adafruit_SSD1306.cpp:840
              pBuf += WIDTH; // Advance pointer 8 rows
              h -= 8;        // Subtract 8 rows from height
            } while (h >= 8);
          } else {
            // store a local value to work with
            uint8_t val = (color != SSD1306_BLACK) ? 255 : 0;
    54c0:	81 e0       	ldi	r24, 0x01	; 1
    54c2:	01 15       	cp	r16, r1
    54c4:	11 05       	cpc	r17, r1
    54c6:	09 f4       	brne	.+2      	; 0x54ca <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)+0x11e>
    54c8:	80 e0       	ldi	r24, 0x00	; 0
    54ca:	81 95       	neg	r24
    54cc:	9e 2f       	mov	r25, r30
/Users/DS 1/Documents/Arduino/libraries/Adafruit_SSD1306/Adafruit_SSD1306.cpp:842
            do {
              *pBuf = val;   // Set byte
    54ce:	8c 93       	st	X, r24
/Users/DS 1/Documents/Arduino/libraries/Adafruit_SSD1306/Adafruit_SSD1306.cpp:843
              pBuf += WIDTH; // Advance pointer 8 rows
    54d0:	2c 81       	ldd	r18, Y+4	; 0x04
    54d2:	3d 81       	ldd	r19, Y+5	; 0x05
    54d4:	a2 0f       	add	r26, r18
    54d6:	b3 1f       	adc	r27, r19
/Users/DS 1/Documents/Arduino/libraries/Adafruit_SSD1306/Adafruit_SSD1306.cpp:844
              h -= 8;        // Subtract 8 rows from height
    54d8:	98 50       	subi	r25, 0x08	; 8
/Users/DS 1/Documents/Arduino/libraries/Adafruit_SSD1306/Adafruit_SSD1306.cpp:845
            } while (h >= 8);
    54da:	98 30       	cpi	r25, 0x08	; 8
    54dc:	c0 f7       	brcc	.-16     	; 0x54ce <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)+0x122>
    54de:	d7 cf       	rjmp	.-82     	; 0x548e <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)+0xe2>
/Users/DS 1/Documents/Arduino/libraries/Adafruit_SSD1306/Adafruit_SSD1306.cpp:861
          static const uint8_t PROGMEM postmask[8] = {0x00, 0x01, 0x03, 0x07,
                                                      0x0F, 0x1F, 0x3F, 0x7F};
          uint8_t mask = pgm_read_byte(&postmask[mod]);
          switch (color) {
          case SSD1306_WHITE:
            *pBuf |= mask;
    54e0:	8c 91       	ld	r24, X
    54e2:	e8 2b       	or	r30, r24
/Users/DS 1/Documents/Arduino/libraries/Adafruit_SSD1306/Adafruit_SSD1306.cpp:867
            break;
          case SSD1306_BLACK:
            *pBuf &= ~mask;
            break;
          case SSD1306_INVERSE:
            *pBuf ^= mask;
    54e4:	ec 93       	st	X, r30
/Users/DS 1/Documents/Arduino/libraries/Adafruit_SSD1306/Adafruit_SSD1306.cpp:874
          }
        }
      }
    } // endif positive height
  }   // endif x in bounds
}
    54e6:	e1 cf       	rjmp	.-62     	; 0x54aa <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)+0xfe>
/Users/DS 1/Documents/Arduino/libraries/Adafruit_SSD1306/Adafruit_SSD1306.cpp:864
          switch (color) {
          case SSD1306_WHITE:
            *pBuf |= mask;
            break;
          case SSD1306_BLACK:
            *pBuf &= ~mask;
    54e8:	e0 95       	com	r30
    54ea:	8c 91       	ld	r24, X
    54ec:	e8 23       	and	r30, r24
    54ee:	fa cf       	rjmp	.-12     	; 0x54e4 <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)+0x138>
/Users/DS 1/Documents/Arduino/libraries/Adafruit_SSD1306/Adafruit_SSD1306.cpp:867
            break;
          case SSD1306_INVERSE:
            *pBuf ^= mask;
    54f0:	8c 91       	ld	r24, X
    54f2:	e8 27       	eor	r30, r24
    54f4:	f7 cf       	rjmp	.-18     	; 0x54e4 <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)+0x138>
/Users/DS 1/Documents/Arduino/libraries/Adafruit_SSD1306/Adafruit_SSD1306.cpp:812
        uint8_t mask = pgm_read_byte(&premask[mod]);
        // adjust the mask if we're not going to reach the end of this byte
        if (h < mod)
          mask &= (0XFF >> (mod - h));

        switch (color) {
    54f6:	01 30       	cpi	r16, 0x01	; 1
    54f8:	11 05       	cpc	r17, r1
    54fa:	09 f4       	brne	.+2      	; 0x54fe <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)+0x152>
    54fc:	ad cf       	rjmp	.-166    	; 0x5458 <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)+0xac>
    54fe:	e0 f2       	brcs	.-72     	; 0x54b8 <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)+0x10c>
    5500:	02 30       	cpi	r16, 0x02	; 2
    5502:	11 05       	cpc	r17, r1
    5504:	09 f4       	brne	.+2      	; 0x5508 <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)+0x15c>
    5506:	a5 cf       	rjmp	.-182    	; 0x5452 <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)+0xa6>
/Users/DS 1/Documents/Arduino/libraries/Adafruit_SSD1306/Adafruit_SSD1306.cpp:823
          break;
        case SSD1306_INVERSE:
          *pBuf ^= mask;
          break;
        }
        pBuf += WIDTH;
    5508:	ae 0d       	add	r26, r14
    550a:	bf 1d       	adc	r27, r15
    550c:	ae cf       	rjmp	.-164    	; 0x546a <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)+0xbe>

0000550e <Adafruit_SSD1306::drawFastHLine(int, int, int, unsigned int)>:
_ZN16Adafruit_SSD130613drawFastHLineEiiij():
/Users/DS 1/Documents/Arduino/libraries/Adafruit_SSD1306/Adafruit_SSD1306.cpp:666
    @note   Changes buffer contents only, no immediate effect on display.
            Follow up with a call to display(), or with other graphics
            commands as needed by one's own application.
*/
void Adafruit_SSD1306::drawFastHLine(int16_t x, int16_t y, int16_t w,
                                     uint16_t color) {
    550e:	0f 93       	push	r16
    5510:	1f 93       	push	r17
    5512:	fa 01       	movw	r30, r20
/Users/DS 1/Documents/Arduino/libraries/Adafruit_SSD1306/Adafruit_SSD1306.cpp:668
  bool bSwap = false;
  switch (rotation) {
    5514:	dc 01       	movw	r26, r24
    5516:	56 96       	adiw	r26, 0x16	; 22
    5518:	4c 91       	ld	r20, X
    551a:	56 97       	sbiw	r26, 0x16	; 22
    551c:	42 30       	cpi	r20, 0x02	; 2
    551e:	89 f0       	breq	.+34     	; 0x5542 <Adafruit_SSD1306::drawFastHLine(int, int, int, unsigned int)+0x34>
    5520:	43 30       	cpi	r20, 0x03	; 3
    5522:	39 f1       	breq	.+78     	; 0x5572 <Adafruit_SSD1306::drawFastHLine(int, int, int, unsigned int)+0x64>
    5524:	41 30       	cpi	r20, 0x01	; 1
    5526:	f9 f4       	brne	.+62     	; 0x5566 <Adafruit_SSD1306::drawFastHLine(int, int, int, unsigned int)+0x58>
/Users/DS 1/Documents/Arduino/libraries/Adafruit_SSD1306/Adafruit_SSD1306.cpp:673
  case 1:
    // 90 degree rotation, swap x & y for rotation, then invert x
    bSwap = true;
    ssd1306_swap(x, y);
    x = WIDTH - x - 1;
    5528:	14 96       	adiw	r26, 0x04	; 4
    552a:	4d 91       	ld	r20, X+
    552c:	5c 91       	ld	r21, X
    552e:	da 01       	movw	r26, r20
    5530:	ae 1b       	sub	r26, r30
    5532:	bf 0b       	sbc	r27, r31
    5534:	fd 01       	movw	r30, r26
    5536:	31 97       	sbiw	r30, 0x01	; 1
/Users/DS 1/Documents/Arduino/libraries/Adafruit_SSD1306/Adafruit_SSD1306.cpp:692
    y -= (w - 1);
    break;
  }

  if (bSwap)
    drawFastVLineInternal(x, y, w, color);
    5538:	ab 01       	movw	r20, r22
    553a:	bf 01       	movw	r22, r30
    553c:	0e 94 d6 29 	call	0x53ac	; 0x53ac <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)>
    5540:	15 c0       	rjmp	.+42     	; 0x556c <Adafruit_SSD1306::drawFastHLine(int, int, int, unsigned int)+0x5e>
/Users/DS 1/Documents/Arduino/libraries/Adafruit_SSD1306/Adafruit_SSD1306.cpp:678
    x = WIDTH - x - 1;
    break;
  case 2:
    // 180 degree rotation, invert x and y, then shift y around for height.
    x = WIDTH - x - 1;
    y = HEIGHT - y - 1;
    5542:	16 96       	adiw	r26, 0x06	; 6
    5544:	4d 91       	ld	r20, X+
    5546:	5c 91       	ld	r21, X
    5548:	da 01       	movw	r26, r20
    554a:	ae 1b       	sub	r26, r30
    554c:	bf 0b       	sbc	r27, r31
    554e:	fd 01       	movw	r30, r26
    5550:	31 97       	sbiw	r30, 0x01	; 1
/Users/DS 1/Documents/Arduino/libraries/Adafruit_SSD1306/Adafruit_SSD1306.cpp:677
    ssd1306_swap(x, y);
    x = WIDTH - x - 1;
    break;
  case 2:
    // 180 degree rotation, invert x and y, then shift y around for height.
    x = WIDTH - x - 1;
    5552:	dc 01       	movw	r26, r24
    5554:	14 96       	adiw	r26, 0x04	; 4
    5556:	4d 91       	ld	r20, X+
    5558:	5c 91       	ld	r21, X
    555a:	da 01       	movw	r26, r20
    555c:	a6 1b       	sub	r26, r22
    555e:	b7 0b       	sbc	r27, r23
    5560:	bd 01       	movw	r22, r26
/Users/DS 1/Documents/Arduino/libraries/Adafruit_SSD1306/Adafruit_SSD1306.cpp:679
    y = HEIGHT - y - 1;
    x -= (w - 1);
    5562:	62 1b       	sub	r22, r18
    5564:	73 0b       	sbc	r23, r19
/Users/DS 1/Documents/Arduino/libraries/Adafruit_SSD1306/Adafruit_SSD1306.cpp:694
  }

  if (bSwap)
    drawFastVLineInternal(x, y, w, color);
  else
    drawFastHLineInternal(x, y, w, color);
    5566:	af 01       	movw	r20, r30
    5568:	0e 94 64 29 	call	0x52c8	; 0x52c8 <Adafruit_SSD1306::drawFastHLineInternal(int, int, int, unsigned int)>
/Users/DS 1/Documents/Arduino/libraries/Adafruit_SSD1306/Adafruit_SSD1306.cpp:695
}
    556c:	1f 91       	pop	r17
    556e:	0f 91       	pop	r16
    5570:	08 95       	ret
/Users/DS 1/Documents/Arduino/libraries/Adafruit_SSD1306/Adafruit_SSD1306.cpp:686
  case 3:
    // 270 degree rotation, swap x & y for rotation,
    // then invert y and adjust y for w (not to become h)
    bSwap = true;
    ssd1306_swap(x, y);
    y = HEIGHT - y - 1;
    5572:	16 96       	adiw	r26, 0x06	; 6
    5574:	4d 91       	ld	r20, X+
    5576:	5c 91       	ld	r21, X
    5578:	da 01       	movw	r26, r20
    557a:	a6 1b       	sub	r26, r22
    557c:	b7 0b       	sbc	r27, r23
    557e:	bd 01       	movw	r22, r26
/Users/DS 1/Documents/Arduino/libraries/Adafruit_SSD1306/Adafruit_SSD1306.cpp:687
    y -= (w - 1);
    5580:	62 1b       	sub	r22, r18
    5582:	73 0b       	sbc	r23, r19
/Users/DS 1/Documents/Arduino/libraries/Adafruit_SSD1306/Adafruit_SSD1306.cpp:688
    break;
    5584:	d9 cf       	rjmp	.-78     	; 0x5538 <Adafruit_SSD1306::drawFastHLine(int, int, int, unsigned int)+0x2a>

00005586 <Adafruit_SSD1306::drawFastVLine(int, int, int, unsigned int)>:
_ZN16Adafruit_SSD130613drawFastVLineEiiij():
/Users/DS 1/Documents/Arduino/libraries/Adafruit_SSD1306/Adafruit_SSD1306.cpp:749
    @note   Changes buffer contents only, no immediate effect on display.
            Follow up with a call to display(), or with other graphics
            commands as needed by one's own application.
*/
void Adafruit_SSD1306::drawFastVLine(int16_t x, int16_t y, int16_t h,
                                     uint16_t color) {
    5586:	0f 93       	push	r16
    5588:	1f 93       	push	r17
    558a:	fa 01       	movw	r30, r20
/Users/DS 1/Documents/Arduino/libraries/Adafruit_SSD1306/Adafruit_SSD1306.cpp:751
  bool bSwap = false;
  switch (rotation) {
    558c:	dc 01       	movw	r26, r24
    558e:	56 96       	adiw	r26, 0x16	; 22
    5590:	4c 91       	ld	r20, X
    5592:	56 97       	sbiw	r26, 0x16	; 22
    5594:	42 30       	cpi	r20, 0x02	; 2
    5596:	91 f0       	breq	.+36     	; 0x55bc <Adafruit_SSD1306::drawFastVLine(int, int, int, unsigned int)+0x36>
    5598:	43 30       	cpi	r20, 0x03	; 3
    559a:	49 f1       	breq	.+82     	; 0x55ee <Adafruit_SSD1306::drawFastVLine(int, int, int, unsigned int)+0x68>
    559c:	41 30       	cpi	r20, 0x01	; 1
    559e:	09 f5       	brne	.+66     	; 0x55e2 <Adafruit_SSD1306::drawFastVLine(int, int, int, unsigned int)+0x5c>
/Users/DS 1/Documents/Arduino/libraries/Adafruit_SSD1306/Adafruit_SSD1306.cpp:757
  case 1:
    // 90 degree rotation, swap x & y for rotation,
    // then invert x and adjust x for h (now to become w)
    bSwap = true;
    ssd1306_swap(x, y);
    x = WIDTH - x - 1;
    55a0:	14 96       	adiw	r26, 0x04	; 4
    55a2:	4d 91       	ld	r20, X+
    55a4:	5c 91       	ld	r21, X
    55a6:	da 01       	movw	r26, r20
    55a8:	ae 1b       	sub	r26, r30
    55aa:	bf 0b       	sbc	r27, r31
    55ac:	fd 01       	movw	r30, r26
/Users/DS 1/Documents/Arduino/libraries/Adafruit_SSD1306/Adafruit_SSD1306.cpp:758
    x -= (h - 1);
    55ae:	e2 1b       	sub	r30, r18
    55b0:	f3 0b       	sbc	r31, r19
/Users/DS 1/Documents/Arduino/libraries/Adafruit_SSD1306/Adafruit_SSD1306.cpp:775
    y = HEIGHT - y - 1;
    break;
  }

  if (bSwap)
    drawFastHLineInternal(x, y, h, color);
    55b2:	ab 01       	movw	r20, r22
    55b4:	bf 01       	movw	r22, r30
    55b6:	0e 94 64 29 	call	0x52c8	; 0x52c8 <Adafruit_SSD1306::drawFastHLineInternal(int, int, int, unsigned int)>
    55ba:	16 c0       	rjmp	.+44     	; 0x55e8 <Adafruit_SSD1306::drawFastVLine(int, int, int, unsigned int)+0x62>
/Users/DS 1/Documents/Arduino/libraries/Adafruit_SSD1306/Adafruit_SSD1306.cpp:762
    x = WIDTH - x - 1;
    x -= (h - 1);
    break;
  case 2:
    // 180 degree rotation, invert x and y, then shift y around for height.
    x = WIDTH - x - 1;
    55bc:	14 96       	adiw	r26, 0x04	; 4
    55be:	4d 91       	ld	r20, X+
    55c0:	5c 91       	ld	r21, X
    55c2:	da 01       	movw	r26, r20
    55c4:	a6 1b       	sub	r26, r22
    55c6:	b7 0b       	sbc	r27, r23
    55c8:	bd 01       	movw	r22, r26
    55ca:	61 50       	subi	r22, 0x01	; 1
    55cc:	71 09       	sbc	r23, r1
/Users/DS 1/Documents/Arduino/libraries/Adafruit_SSD1306/Adafruit_SSD1306.cpp:763
    y = HEIGHT - y - 1;
    55ce:	dc 01       	movw	r26, r24
    55d0:	16 96       	adiw	r26, 0x06	; 6
    55d2:	4d 91       	ld	r20, X+
    55d4:	5c 91       	ld	r21, X
    55d6:	da 01       	movw	r26, r20
    55d8:	ae 1b       	sub	r26, r30
    55da:	bf 0b       	sbc	r27, r31
    55dc:	fd 01       	movw	r30, r26
/Users/DS 1/Documents/Arduino/libraries/Adafruit_SSD1306/Adafruit_SSD1306.cpp:764
    y -= (h - 1);
    55de:	e2 1b       	sub	r30, r18
    55e0:	f3 0b       	sbc	r31, r19
/Users/DS 1/Documents/Arduino/libraries/Adafruit_SSD1306/Adafruit_SSD1306.cpp:777
  }

  if (bSwap)
    drawFastHLineInternal(x, y, h, color);
  else
    drawFastVLineInternal(x, y, h, color);
    55e2:	af 01       	movw	r20, r30
    55e4:	0e 94 d6 29 	call	0x53ac	; 0x53ac <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)>
/Users/DS 1/Documents/Arduino/libraries/Adafruit_SSD1306/Adafruit_SSD1306.cpp:778
}
    55e8:	1f 91       	pop	r17
    55ea:	0f 91       	pop	r16
    55ec:	08 95       	ret
/Users/DS 1/Documents/Arduino/libraries/Adafruit_SSD1306/Adafruit_SSD1306.cpp:770
    break;
  case 3:
    // 270 degree rotation, swap x & y for rotation, then invert y
    bSwap = true;
    ssd1306_swap(x, y);
    y = HEIGHT - y - 1;
    55ee:	16 96       	adiw	r26, 0x06	; 6
    55f0:	4d 91       	ld	r20, X+
    55f2:	5c 91       	ld	r21, X
    55f4:	da 01       	movw	r26, r20
    55f6:	a6 1b       	sub	r26, r22
    55f8:	b7 0b       	sbc	r27, r23
    55fa:	bd 01       	movw	r22, r26
    55fc:	61 50       	subi	r22, 0x01	; 1
    55fe:	71 09       	sbc	r23, r1
/Users/DS 1/Documents/Arduino/libraries/Adafruit_SSD1306/Adafruit_SSD1306.cpp:771
    break;
    5600:	d8 cf       	rjmp	.-80     	; 0x55b2 <Adafruit_SSD1306::drawFastVLine(int, int, int, unsigned int)+0x2c>

00005602 <Adafruit_GFX::writeLine(int, int, int, int, unsigned int)>:
_ZN12Adafruit_GFX9writeLineEiiiij():
/Users/DS 1/Documents/Arduino/libraries/Adafruit_GFX_Library/Adafruit_GFX.cpp:1118
*/
/**************************************************************************/
void Adafruit_GFX::drawChar(int16_t x, int16_t y, unsigned char c,
                            uint16_t color, uint16_t bg, uint8_t size) {
  drawChar(x, y, c, color, bg, size, size);
}
    5602:	2f 92       	push	r2
    5604:	3f 92       	push	r3
    5606:	4f 92       	push	r4
    5608:	5f 92       	push	r5
    560a:	6f 92       	push	r6
    560c:	7f 92       	push	r7
    560e:	8f 92       	push	r8
    5610:	9f 92       	push	r9
    5612:	af 92       	push	r10
    5614:	bf 92       	push	r11
    5616:	cf 92       	push	r12
    5618:	df 92       	push	r13
    561a:	ef 92       	push	r14
    561c:	ff 92       	push	r15
    561e:	0f 93       	push	r16
    5620:	1f 93       	push	r17
    5622:	cf 93       	push	r28
    5624:	df 93       	push	r29
    5626:	00 d0       	rcall	.+0      	; 0x5628 <Adafruit_GFX::writeLine(int, int, int, int, unsigned int)+0x26>
    5628:	00 d0       	rcall	.+0      	; 0x562a <Adafruit_GFX::writeLine(int, int, int, int, unsigned int)+0x28>
    562a:	00 d0       	rcall	.+0      	; 0x562c <Adafruit_GFX::writeLine(int, int, int, int, unsigned int)+0x2a>
    562c:	cd b7       	in	r28, 0x3d	; 61
    562e:	de b7       	in	r29, 0x3e	; 62
    5630:	3c 01       	movw	r6, r24
    5632:	6a 01       	movw	r12, r20
    5634:	3e 83       	std	Y+6, r19	; 0x06
    5636:	2d 83       	std	Y+5, r18	; 0x05
    5638:	fc 82       	std	Y+4, r15	; 0x04
    563a:	eb 82       	std	Y+3, r14	; 0x03
    563c:	58 01       	movw	r10, r16
    563e:	a4 1a       	sub	r10, r20
    5640:	b5 0a       	sbc	r11, r21
    5642:	b7 fe       	sbrs	r11, 7
    5644:	03 c0       	rjmp	.+6      	; 0x564c <Adafruit_GFX::writeLine(int, int, int, int, unsigned int)+0x4a>
    5646:	b1 94       	neg	r11
    5648:	a1 94       	neg	r10
    564a:	b1 08       	sbc	r11, r1
    564c:	8d 80       	ldd	r8, Y+5	; 0x05
    564e:	9e 80       	ldd	r9, Y+6	; 0x06
    5650:	86 1a       	sub	r8, r22
    5652:	97 0a       	sbc	r9, r23
    5654:	97 fe       	sbrs	r9, 7
    5656:	03 c0       	rjmp	.+6      	; 0x565e <Adafruit_GFX::writeLine(int, int, int, int, unsigned int)+0x5c>
    5658:	91 94       	neg	r9
    565a:	81 94       	neg	r8
    565c:	91 08       	sbc	r9, r1
    565e:	8a 14       	cp	r8, r10
    5660:	9b 04       	cpc	r9, r11
    5662:	5c f0       	brlt	.+22     	; 0x567a <Adafruit_GFX::writeLine(int, int, int, int, unsigned int)+0x78>
    5664:	90 2f       	mov	r25, r16
    5666:	81 2f       	mov	r24, r17
    5668:	0d 81       	ldd	r16, Y+5	; 0x05
    566a:	1e 81       	ldd	r17, Y+6	; 0x06
    566c:	9d 83       	std	Y+5, r25	; 0x05
    566e:	8e 83       	std	Y+6, r24	; 0x06
    5670:	9c 2d       	mov	r25, r12
    5672:	8d 2d       	mov	r24, r13
    5674:	6b 01       	movw	r12, r22
    5676:	69 2f       	mov	r22, r25
    5678:	78 2f       	mov	r23, r24
    567a:	0c 15       	cp	r16, r12
    567c:	1d 05       	cpc	r17, r13
    567e:	5c f0       	brlt	.+22     	; 0x5696 <Adafruit_GFX::writeLine(int, int, int, int, unsigned int)+0x94>
    5680:	9d 81       	ldd	r25, Y+5	; 0x05
    5682:	8e 81       	ldd	r24, Y+6	; 0x06
    5684:	7e 83       	std	Y+6, r23	; 0x06
    5686:	6d 83       	std	Y+5, r22	; 0x05
    5688:	69 2f       	mov	r22, r25
    568a:	78 2f       	mov	r23, r24
    568c:	90 2f       	mov	r25, r16
    568e:	81 2f       	mov	r24, r17
    5690:	86 01       	movw	r16, r12
    5692:	c9 2e       	mov	r12, r25
    5694:	d8 2e       	mov	r13, r24
    5696:	16 01       	movw	r2, r12
    5698:	20 1a       	sub	r2, r16
    569a:	31 0a       	sbc	r3, r17
    569c:	2b 01       	movw	r4, r22
    569e:	2d 81       	ldd	r18, Y+5	; 0x05
    56a0:	3e 81       	ldd	r19, Y+6	; 0x06
    56a2:	42 1a       	sub	r4, r18
    56a4:	53 0a       	sbc	r5, r19
    56a6:	57 fe       	sbrs	r5, 7
    56a8:	03 c0       	rjmp	.+6      	; 0x56b0 <Adafruit_GFX::writeLine(int, int, int, int, unsigned int)+0xae>
    56aa:	51 94       	neg	r5
    56ac:	41 94       	neg	r4
    56ae:	51 08       	sbc	r5, r1
    56b0:	71 01       	movw	r14, r2
    56b2:	37 fe       	sbrs	r3, 7
    56b4:	03 c0       	rjmp	.+6      	; 0x56bc <Adafruit_GFX::writeLine(int, int, int, int, unsigned int)+0xba>
    56b6:	3f ef       	ldi	r19, 0xFF	; 255
    56b8:	e3 1a       	sub	r14, r19
    56ba:	f3 0a       	sbc	r15, r19
    56bc:	f5 94       	asr	r15
    56be:	e7 94       	ror	r14
    56c0:	8d 81       	ldd	r24, Y+5	; 0x05
    56c2:	9e 81       	ldd	r25, Y+6	; 0x06
    56c4:	86 17       	cp	r24, r22
    56c6:	97 07       	cpc	r25, r23
    56c8:	5c f5       	brge	.+86     	; 0x5720 <Adafruit_GFX::writeLine(int, int, int, int, unsigned int)+0x11e>
    56ca:	a1 e0       	ldi	r26, 0x01	; 1
    56cc:	b0 e0       	ldi	r27, 0x00	; 0
    56ce:	ba 83       	std	Y+2, r27	; 0x02
    56d0:	a9 83       	std	Y+1, r26	; 0x01
    56d2:	c0 16       	cp	r12, r16
    56d4:	d1 06       	cpc	r13, r17
    56d6:	4c f1       	brlt	.+82     	; 0x572a <Adafruit_GFX::writeLine(int, int, int, int, unsigned int)+0x128>
    56d8:	d3 01       	movw	r26, r6
    56da:	ed 91       	ld	r30, X+
    56dc:	fc 91       	ld	r31, X
    56de:	04 84       	ldd	r0, Z+12	; 0x0c
    56e0:	f5 85       	ldd	r31, Z+13	; 0x0d
    56e2:	e0 2d       	mov	r30, r0
    56e4:	2b 81       	ldd	r18, Y+3	; 0x03
    56e6:	3c 81       	ldd	r19, Y+4	; 0x04
    56e8:	a8 01       	movw	r20, r16
    56ea:	6d 81       	ldd	r22, Y+5	; 0x05
    56ec:	7e 81       	ldd	r23, Y+6	; 0x06
    56ee:	8a 14       	cp	r8, r10
    56f0:	9b 04       	cpc	r9, r11
    56f2:	1c f0       	brlt	.+6      	; 0x56fa <Adafruit_GFX::writeLine(int, int, int, int, unsigned int)+0xf8>
    56f4:	4d 81       	ldd	r20, Y+5	; 0x05
    56f6:	5e 81       	ldd	r21, Y+6	; 0x06
    56f8:	b8 01       	movw	r22, r16
    56fa:	c3 01       	movw	r24, r6
    56fc:	09 95       	icall
    56fe:	e4 18       	sub	r14, r4
    5700:	f5 08       	sbc	r15, r5
    5702:	f7 fe       	sbrs	r15, 7
    5704:	0a c0       	rjmp	.+20     	; 0x571a <Adafruit_GFX::writeLine(int, int, int, int, unsigned int)+0x118>
    5706:	2d 81       	ldd	r18, Y+5	; 0x05
    5708:	3e 81       	ldd	r19, Y+6	; 0x06
    570a:	89 81       	ldd	r24, Y+1	; 0x01
    570c:	9a 81       	ldd	r25, Y+2	; 0x02
    570e:	28 0f       	add	r18, r24
    5710:	39 1f       	adc	r19, r25
    5712:	3e 83       	std	Y+6, r19	; 0x06
    5714:	2d 83       	std	Y+5, r18	; 0x05
    5716:	e2 0c       	add	r14, r2
    5718:	f3 1c       	adc	r15, r3
    571a:	0f 5f       	subi	r16, 0xFF	; 255
    571c:	1f 4f       	sbci	r17, 0xFF	; 255
    571e:	d9 cf       	rjmp	.-78     	; 0x56d2 <Adafruit_GFX::writeLine(int, int, int, int, unsigned int)+0xd0>
    5720:	2f ef       	ldi	r18, 0xFF	; 255
    5722:	3f ef       	ldi	r19, 0xFF	; 255
    5724:	3a 83       	std	Y+2, r19	; 0x02
    5726:	29 83       	std	Y+1, r18	; 0x01
    5728:	d4 cf       	rjmp	.-88     	; 0x56d2 <Adafruit_GFX::writeLine(int, int, int, int, unsigned int)+0xd0>
    572a:	26 96       	adiw	r28, 0x06	; 6
    572c:	0f b6       	in	r0, 0x3f	; 63
    572e:	f8 94       	cli
    5730:	de bf       	out	0x3e, r29	; 62
    5732:	0f be       	out	0x3f, r0	; 63
    5734:	cd bf       	out	0x3d, r28	; 61
    5736:	df 91       	pop	r29
    5738:	cf 91       	pop	r28
    573a:	1f 91       	pop	r17
    573c:	0f 91       	pop	r16
    573e:	ff 90       	pop	r15
    5740:	ef 90       	pop	r14
    5742:	df 90       	pop	r13
    5744:	cf 90       	pop	r12
    5746:	bf 90       	pop	r11
    5748:	af 90       	pop	r10
    574a:	9f 90       	pop	r9
    574c:	8f 90       	pop	r8
    574e:	7f 90       	pop	r7
    5750:	6f 90       	pop	r6
    5752:	5f 90       	pop	r5
    5754:	4f 90       	pop	r4
    5756:	3f 90       	pop	r3
    5758:	2f 90       	pop	r2
    575a:	08 95       	ret

0000575c <Adafruit_GFX::startWrite()>:
_ZN12Adafruit_GFX10startWriteEv():
    575c:	08 95       	ret

0000575e <Adafruit_GFX::writePixel(int, int, unsigned int)>:
_ZN12Adafruit_GFX10writePixelEiij():
    575e:	dc 01       	movw	r26, r24
    5760:	ed 91       	ld	r30, X+
    5762:	fc 91       	ld	r31, X
    5764:	00 84       	ldd	r0, Z+8	; 0x08
    5766:	f1 85       	ldd	r31, Z+9	; 0x09
    5768:	e0 2d       	mov	r30, r0
    576a:	09 94       	ijmp

0000576c <Adafruit_GFX::writeFastVLine(int, int, int, unsigned int)>:
_ZN12Adafruit_GFX14writeFastVLineEiiij():
    576c:	0f 93       	push	r16
    576e:	1f 93       	push	r17
    5770:	dc 01       	movw	r26, r24
    5772:	ed 91       	ld	r30, X+
    5774:	fc 91       	ld	r31, X
    5776:	04 8c       	ldd	r0, Z+28	; 0x1c
    5778:	f5 8d       	ldd	r31, Z+29	; 0x1d
    577a:	e0 2d       	mov	r30, r0
    577c:	09 95       	icall
    577e:	1f 91       	pop	r17
    5780:	0f 91       	pop	r16
    5782:	08 95       	ret

00005784 <Adafruit_GFX::writeFastHLine(int, int, int, unsigned int)>:
_ZN12Adafruit_GFX14writeFastHLineEiiij():
    5784:	0f 93       	push	r16
    5786:	1f 93       	push	r17
    5788:	dc 01       	movw	r26, r24
    578a:	ed 91       	ld	r30, X+
    578c:	fc 91       	ld	r31, X
    578e:	06 8c       	ldd	r0, Z+30	; 0x1e
    5790:	f7 8d       	ldd	r31, Z+31	; 0x1f
    5792:	e0 2d       	mov	r30, r0
    5794:	09 95       	icall
    5796:	1f 91       	pop	r17
    5798:	0f 91       	pop	r16
    579a:	08 95       	ret

0000579c <Adafruit_GFX::writeFillRect(int, int, int, int, unsigned int)>:
_ZN12Adafruit_GFX13writeFillRectEiiiij():
    579c:	ef 92       	push	r14
    579e:	ff 92       	push	r15
    57a0:	0f 93       	push	r16
    57a2:	1f 93       	push	r17
    57a4:	dc 01       	movw	r26, r24
    57a6:	ed 91       	ld	r30, X+
    57a8:	fc 91       	ld	r31, X
    57aa:	00 a0       	ldd	r0, Z+32	; 0x20
    57ac:	f1 a1       	ldd	r31, Z+33	; 0x21
    57ae:	e0 2d       	mov	r30, r0
    57b0:	09 95       	icall
    57b2:	1f 91       	pop	r17
    57b4:	0f 91       	pop	r16
    57b6:	ff 90       	pop	r15
    57b8:	ef 90       	pop	r14
    57ba:	08 95       	ret

000057bc <Adafruit_GFX::drawFastVLine(int, int, int, unsigned int)>:
_ZN12Adafruit_GFX13drawFastVLineEiiij():
    57bc:	8f 92       	push	r8
    57be:	9f 92       	push	r9
    57c0:	af 92       	push	r10
    57c2:	bf 92       	push	r11
    57c4:	cf 92       	push	r12
    57c6:	df 92       	push	r13
    57c8:	ef 92       	push	r14
    57ca:	ff 92       	push	r15
    57cc:	0f 93       	push	r16
    57ce:	1f 93       	push	r17
    57d0:	cf 93       	push	r28
    57d2:	df 93       	push	r29
    57d4:	ec 01       	movw	r28, r24
    57d6:	5b 01       	movw	r10, r22
    57d8:	4a 01       	movw	r8, r20
    57da:	69 01       	movw	r12, r18
    57dc:	78 01       	movw	r14, r16
    57de:	e8 81       	ld	r30, Y
    57e0:	f9 81       	ldd	r31, Y+1	; 0x01
    57e2:	02 84       	ldd	r0, Z+10	; 0x0a
    57e4:	f3 85       	ldd	r31, Z+11	; 0x0b
    57e6:	e0 2d       	mov	r30, r0
    57e8:	09 95       	icall
    57ea:	c8 0c       	add	r12, r8
    57ec:	d9 1c       	adc	r13, r9
    57ee:	86 01       	movw	r16, r12
    57f0:	01 50       	subi	r16, 0x01	; 1
    57f2:	11 09       	sbc	r17, r1
    57f4:	e8 81       	ld	r30, Y
    57f6:	f9 81       	ldd	r31, Y+1	; 0x01
    57f8:	04 88       	ldd	r0, Z+20	; 0x14
    57fa:	f5 89       	ldd	r31, Z+21	; 0x15
    57fc:	e0 2d       	mov	r30, r0
    57fe:	95 01       	movw	r18, r10
    5800:	a4 01       	movw	r20, r8
    5802:	b5 01       	movw	r22, r10
    5804:	ce 01       	movw	r24, r28
    5806:	09 95       	icall
    5808:	e8 81       	ld	r30, Y
    580a:	f9 81       	ldd	r31, Y+1	; 0x01
    580c:	06 88       	ldd	r0, Z+22	; 0x16
    580e:	f7 89       	ldd	r31, Z+23	; 0x17
    5810:	e0 2d       	mov	r30, r0
    5812:	ce 01       	movw	r24, r28
    5814:	df 91       	pop	r29
    5816:	cf 91       	pop	r28
    5818:	1f 91       	pop	r17
    581a:	0f 91       	pop	r16
    581c:	ff 90       	pop	r15
    581e:	ef 90       	pop	r14
    5820:	df 90       	pop	r13
    5822:	cf 90       	pop	r12
    5824:	bf 90       	pop	r11
    5826:	af 90       	pop	r10
    5828:	9f 90       	pop	r9
    582a:	8f 90       	pop	r8
    582c:	09 94       	ijmp

0000582e <Adafruit_GFX::drawFastHLine(int, int, int, unsigned int)>:
_ZN12Adafruit_GFX13drawFastHLineEiiij():
    582e:	8f 92       	push	r8
    5830:	9f 92       	push	r9
    5832:	af 92       	push	r10
    5834:	bf 92       	push	r11
    5836:	cf 92       	push	r12
    5838:	df 92       	push	r13
    583a:	ef 92       	push	r14
    583c:	ff 92       	push	r15
    583e:	0f 93       	push	r16
    5840:	1f 93       	push	r17
    5842:	cf 93       	push	r28
    5844:	df 93       	push	r29
    5846:	ec 01       	movw	r28, r24
    5848:	5b 01       	movw	r10, r22
    584a:	4a 01       	movw	r8, r20
    584c:	69 01       	movw	r12, r18
    584e:	e8 81       	ld	r30, Y
    5850:	f9 81       	ldd	r31, Y+1	; 0x01
    5852:	02 84       	ldd	r0, Z+10	; 0x0a
    5854:	f3 85       	ldd	r31, Z+11	; 0x0b
    5856:	e0 2d       	mov	r30, r0
    5858:	09 95       	icall
    585a:	95 01       	movw	r18, r10
    585c:	2c 0d       	add	r18, r12
    585e:	3d 1d       	adc	r19, r13
    5860:	21 50       	subi	r18, 0x01	; 1
    5862:	31 09       	sbc	r19, r1
    5864:	e8 81       	ld	r30, Y
    5866:	f9 81       	ldd	r31, Y+1	; 0x01
    5868:	04 88       	ldd	r0, Z+20	; 0x14
    586a:	f5 89       	ldd	r31, Z+21	; 0x15
    586c:	e0 2d       	mov	r30, r0
    586e:	78 01       	movw	r14, r16
    5870:	84 01       	movw	r16, r8
    5872:	a4 01       	movw	r20, r8
    5874:	b5 01       	movw	r22, r10
    5876:	ce 01       	movw	r24, r28
    5878:	09 95       	icall
    587a:	e8 81       	ld	r30, Y
    587c:	f9 81       	ldd	r31, Y+1	; 0x01
    587e:	06 88       	ldd	r0, Z+22	; 0x16
    5880:	f7 89       	ldd	r31, Z+23	; 0x17
    5882:	e0 2d       	mov	r30, r0
    5884:	ce 01       	movw	r24, r28
    5886:	df 91       	pop	r29
    5888:	cf 91       	pop	r28
    588a:	1f 91       	pop	r17
    588c:	0f 91       	pop	r16
    588e:	ff 90       	pop	r15
    5890:	ef 90       	pop	r14
    5892:	df 90       	pop	r13
    5894:	cf 90       	pop	r12
    5896:	bf 90       	pop	r11
    5898:	af 90       	pop	r10
    589a:	9f 90       	pop	r9
    589c:	8f 90       	pop	r8
    589e:	09 94       	ijmp

000058a0 <Adafruit_GFX::fillRect(int, int, int, int, unsigned int)>:
_ZN12Adafruit_GFX8fillRectEiiiij():
    58a0:	4f 92       	push	r4
    58a2:	5f 92       	push	r5
    58a4:	6f 92       	push	r6
    58a6:	7f 92       	push	r7
    58a8:	8f 92       	push	r8
    58aa:	9f 92       	push	r9
    58ac:	af 92       	push	r10
    58ae:	bf 92       	push	r11
    58b0:	cf 92       	push	r12
    58b2:	df 92       	push	r13
    58b4:	ef 92       	push	r14
    58b6:	ff 92       	push	r15
    58b8:	0f 93       	push	r16
    58ba:	1f 93       	push	r17
    58bc:	cf 93       	push	r28
    58be:	df 93       	push	r29
    58c0:	6c 01       	movw	r12, r24
    58c2:	2b 01       	movw	r4, r22
    58c4:	5a 01       	movw	r10, r20
    58c6:	39 01       	movw	r6, r18
    58c8:	48 01       	movw	r8, r16
    58ca:	dc 01       	movw	r26, r24
    58cc:	ed 91       	ld	r30, X+
    58ce:	fc 91       	ld	r31, X
    58d0:	02 84       	ldd	r0, Z+10	; 0x0a
    58d2:	f3 85       	ldd	r31, Z+11	; 0x0b
    58d4:	e0 2d       	mov	r30, r0
    58d6:	09 95       	icall
    58d8:	e2 01       	movw	r28, r4
    58da:	64 0c       	add	r6, r4
    58dc:	75 1c       	adc	r7, r5
    58de:	d6 01       	movw	r26, r12
    58e0:	ed 91       	ld	r30, X+
    58e2:	fc 91       	ld	r31, X
    58e4:	c6 15       	cp	r28, r6
    58e6:	d7 05       	cpc	r29, r7
    58e8:	5c f4       	brge	.+22     	; 0x5900 <Adafruit_GFX::fillRect(int, int, int, int, unsigned int)+0x60>
    58ea:	00 88       	ldd	r0, Z+16	; 0x10
    58ec:	f1 89       	ldd	r31, Z+17	; 0x11
    58ee:	e0 2d       	mov	r30, r0
    58f0:	87 01       	movw	r16, r14
    58f2:	94 01       	movw	r18, r8
    58f4:	a5 01       	movw	r20, r10
    58f6:	be 01       	movw	r22, r28
    58f8:	c6 01       	movw	r24, r12
    58fa:	09 95       	icall
    58fc:	21 96       	adiw	r28, 0x01	; 1
    58fe:	ef cf       	rjmp	.-34     	; 0x58de <Adafruit_GFX::fillRect(int, int, int, int, unsigned int)+0x3e>
    5900:	06 88       	ldd	r0, Z+22	; 0x16
    5902:	f7 89       	ldd	r31, Z+23	; 0x17
    5904:	e0 2d       	mov	r30, r0
    5906:	c6 01       	movw	r24, r12
    5908:	df 91       	pop	r29
    590a:	cf 91       	pop	r28
    590c:	1f 91       	pop	r17
    590e:	0f 91       	pop	r16
    5910:	ff 90       	pop	r15
    5912:	ef 90       	pop	r14
    5914:	df 90       	pop	r13
    5916:	cf 90       	pop	r12
    5918:	bf 90       	pop	r11
    591a:	af 90       	pop	r10
    591c:	9f 90       	pop	r9
    591e:	8f 90       	pop	r8
    5920:	7f 90       	pop	r7
    5922:	6f 90       	pop	r6
    5924:	5f 90       	pop	r5
    5926:	4f 90       	pop	r4
    5928:	09 94       	ijmp

0000592a <Adafruit_GFX::fillScreen(unsigned int)>:
_ZN12Adafruit_GFX10fillScreenEj():
    592a:	ef 92       	push	r14
    592c:	ff 92       	push	r15
    592e:	0f 93       	push	r16
    5930:	1f 93       	push	r17
    5932:	dc 01       	movw	r26, r24
    5934:	1a 96       	adiw	r26, 0x0a	; 10
    5936:	0d 91       	ld	r16, X+
    5938:	1c 91       	ld	r17, X
    593a:	1b 97       	sbiw	r26, 0x0b	; 11
    593c:	18 96       	adiw	r26, 0x08	; 8
    593e:	2d 91       	ld	r18, X+
    5940:	3c 91       	ld	r19, X
    5942:	19 97       	sbiw	r26, 0x09	; 9
    5944:	ed 91       	ld	r30, X+
    5946:	fc 91       	ld	r31, X
    5948:	00 a0       	ldd	r0, Z+32	; 0x20
    594a:	f1 a1       	ldd	r31, Z+33	; 0x21
    594c:	e0 2d       	mov	r30, r0
    594e:	7b 01       	movw	r14, r22
    5950:	50 e0       	ldi	r21, 0x00	; 0
    5952:	40 e0       	ldi	r20, 0x00	; 0
    5954:	70 e0       	ldi	r23, 0x00	; 0
    5956:	60 e0       	ldi	r22, 0x00	; 0
    5958:	09 95       	icall
    595a:	1f 91       	pop	r17
    595c:	0f 91       	pop	r16
    595e:	ff 90       	pop	r15
    5960:	ef 90       	pop	r14
    5962:	08 95       	ret

00005964 <Adafruit_GFX::drawRect(int, int, int, int, unsigned int)>:
_ZN12Adafruit_GFX8drawRectEiiiij():
    5964:	6f 92       	push	r6
    5966:	7f 92       	push	r7
    5968:	8f 92       	push	r8
    596a:	9f 92       	push	r9
    596c:	af 92       	push	r10
    596e:	bf 92       	push	r11
    5970:	cf 92       	push	r12
    5972:	df 92       	push	r13
    5974:	ef 92       	push	r14
    5976:	ff 92       	push	r15
    5978:	0f 93       	push	r16
    597a:	1f 93       	push	r17
    597c:	cf 93       	push	r28
    597e:	df 93       	push	r29
    5980:	ec 01       	movw	r28, r24
    5982:	6b 01       	movw	r12, r22
    5984:	5a 01       	movw	r10, r20
    5986:	39 01       	movw	r6, r18
    5988:	48 01       	movw	r8, r16
    598a:	e8 81       	ld	r30, Y
    598c:	f9 81       	ldd	r31, Y+1	; 0x01
    598e:	02 84       	ldd	r0, Z+10	; 0x0a
    5990:	f3 85       	ldd	r31, Z+11	; 0x0b
    5992:	e0 2d       	mov	r30, r0
    5994:	09 95       	icall
    5996:	e8 81       	ld	r30, Y
    5998:	f9 81       	ldd	r31, Y+1	; 0x01
    599a:	02 88       	ldd	r0, Z+18	; 0x12
    599c:	f3 89       	ldd	r31, Z+19	; 0x13
    599e:	e0 2d       	mov	r30, r0
    59a0:	87 01       	movw	r16, r14
    59a2:	93 01       	movw	r18, r6
    59a4:	a5 01       	movw	r20, r10
    59a6:	b6 01       	movw	r22, r12
    59a8:	ce 01       	movw	r24, r28
    59aa:	09 95       	icall
    59ac:	a5 01       	movw	r20, r10
    59ae:	48 0d       	add	r20, r8
    59b0:	59 1d       	adc	r21, r9
    59b2:	41 50       	subi	r20, 0x01	; 1
    59b4:	51 09       	sbc	r21, r1
    59b6:	e8 81       	ld	r30, Y
    59b8:	f9 81       	ldd	r31, Y+1	; 0x01
    59ba:	02 88       	ldd	r0, Z+18	; 0x12
    59bc:	f3 89       	ldd	r31, Z+19	; 0x13
    59be:	e0 2d       	mov	r30, r0
    59c0:	93 01       	movw	r18, r6
    59c2:	b6 01       	movw	r22, r12
    59c4:	ce 01       	movw	r24, r28
    59c6:	09 95       	icall
    59c8:	e8 81       	ld	r30, Y
    59ca:	f9 81       	ldd	r31, Y+1	; 0x01
    59cc:	00 88       	ldd	r0, Z+16	; 0x10
    59ce:	f1 89       	ldd	r31, Z+17	; 0x11
    59d0:	e0 2d       	mov	r30, r0
    59d2:	94 01       	movw	r18, r8
    59d4:	a5 01       	movw	r20, r10
    59d6:	b6 01       	movw	r22, r12
    59d8:	ce 01       	movw	r24, r28
    59da:	09 95       	icall
    59dc:	c6 0c       	add	r12, r6
    59de:	d7 1c       	adc	r13, r7
    59e0:	b6 01       	movw	r22, r12
    59e2:	61 50       	subi	r22, 0x01	; 1
    59e4:	71 09       	sbc	r23, r1
    59e6:	e8 81       	ld	r30, Y
    59e8:	f9 81       	ldd	r31, Y+1	; 0x01
    59ea:	00 88       	ldd	r0, Z+16	; 0x10
    59ec:	f1 89       	ldd	r31, Z+17	; 0x11
    59ee:	e0 2d       	mov	r30, r0
    59f0:	94 01       	movw	r18, r8
    59f2:	a5 01       	movw	r20, r10
    59f4:	ce 01       	movw	r24, r28
    59f6:	09 95       	icall
    59f8:	e8 81       	ld	r30, Y
    59fa:	f9 81       	ldd	r31, Y+1	; 0x01
    59fc:	06 88       	ldd	r0, Z+22	; 0x16
    59fe:	f7 89       	ldd	r31, Z+23	; 0x17
    5a00:	e0 2d       	mov	r30, r0
    5a02:	ce 01       	movw	r24, r28
    5a04:	df 91       	pop	r29
    5a06:	cf 91       	pop	r28
    5a08:	1f 91       	pop	r17
    5a0a:	0f 91       	pop	r16
    5a0c:	ff 90       	pop	r15
    5a0e:	ef 90       	pop	r14
    5a10:	df 90       	pop	r13
    5a12:	cf 90       	pop	r12
    5a14:	bf 90       	pop	r11
    5a16:	af 90       	pop	r10
    5a18:	9f 90       	pop	r9
    5a1a:	8f 90       	pop	r8
    5a1c:	7f 90       	pop	r7
    5a1e:	6f 90       	pop	r6
    5a20:	09 94       	ijmp

00005a22 <Adafruit_GFX::invertDisplay(bool)>:
_ZN12Adafruit_GFX13invertDisplayEb():
    5a22:	08 95       	ret

00005a24 <Adafruit_GFX::drawLine(int, int, int, int, unsigned int)>:
_ZN12Adafruit_GFX8drawLineEiiiij():
    5a24:	6f 92       	push	r6
    5a26:	7f 92       	push	r7
    5a28:	8f 92       	push	r8
    5a2a:	9f 92       	push	r9
    5a2c:	af 92       	push	r10
    5a2e:	bf 92       	push	r11
    5a30:	cf 92       	push	r12
    5a32:	df 92       	push	r13
    5a34:	ef 92       	push	r14
    5a36:	ff 92       	push	r15
    5a38:	0f 93       	push	r16
    5a3a:	1f 93       	push	r17
    5a3c:	cf 93       	push	r28
    5a3e:	df 93       	push	r29
    5a40:	5c 01       	movw	r10, r24
    5a42:	eb 01       	movw	r28, r22
    5a44:	6a 01       	movw	r12, r20
    5a46:	49 01       	movw	r8, r18
    5a48:	38 01       	movw	r6, r16
    5a4a:	87 01       	movw	r16, r14
    5a4c:	dc 01       	movw	r26, r24
    5a4e:	ed 91       	ld	r30, X+
    5a50:	fc 91       	ld	r31, X
    5a52:	62 17       	cp	r22, r18
    5a54:	73 07       	cpc	r23, r19
    5a56:	19 f5       	brne	.+70     	; 0x5a9e <Adafruit_GFX::drawLine(int, int, int, int, unsigned int)+0x7a>
    5a58:	64 16       	cp	r6, r20
    5a5a:	75 06       	cpc	r7, r21
    5a5c:	2c f0       	brlt	.+10     	; 0x5a68 <Adafruit_GFX::drawLine(int, int, int, int, unsigned int)+0x44>
    5a5e:	96 2d       	mov	r25, r6
    5a60:	87 2d       	mov	r24, r7
    5a62:	3a 01       	movw	r6, r20
    5a64:	c9 2e       	mov	r12, r25
    5a66:	d8 2e       	mov	r13, r24
    5a68:	96 01       	movw	r18, r12
    5a6a:	26 19       	sub	r18, r6
    5a6c:	37 09       	sbc	r19, r7
    5a6e:	2f 5f       	subi	r18, 0xFF	; 255
    5a70:	3f 4f       	sbci	r19, 0xFF	; 255
    5a72:	04 8c       	ldd	r0, Z+28	; 0x1c
    5a74:	f5 8d       	ldd	r31, Z+29	; 0x1d
    5a76:	e0 2d       	mov	r30, r0
    5a78:	a3 01       	movw	r20, r6
    5a7a:	be 01       	movw	r22, r28
    5a7c:	c5 01       	movw	r24, r10
    5a7e:	09 95       	icall
    5a80:	df 91       	pop	r29
    5a82:	cf 91       	pop	r28
    5a84:	1f 91       	pop	r17
    5a86:	0f 91       	pop	r16
    5a88:	ff 90       	pop	r15
    5a8a:	ef 90       	pop	r14
    5a8c:	df 90       	pop	r13
    5a8e:	cf 90       	pop	r12
    5a90:	bf 90       	pop	r11
    5a92:	af 90       	pop	r10
    5a94:	9f 90       	pop	r9
    5a96:	8f 90       	pop	r8
    5a98:	7f 90       	pop	r7
    5a9a:	6f 90       	pop	r6
    5a9c:	08 95       	ret
    5a9e:	46 15       	cp	r20, r6
    5aa0:	57 05       	cpc	r21, r7
    5aa2:	91 f4       	brne	.+36     	; 0x5ac8 <Adafruit_GFX::drawLine(int, int, int, int, unsigned int)+0xa4>
    5aa4:	26 17       	cp	r18, r22
    5aa6:	37 07       	cpc	r19, r23
    5aa8:	24 f0       	brlt	.+8      	; 0x5ab2 <Adafruit_GFX::drawLine(int, int, int, int, unsigned int)+0x8e>
    5aaa:	89 2d       	mov	r24, r9
    5aac:	4b 01       	movw	r8, r22
    5aae:	c2 2f       	mov	r28, r18
    5ab0:	d8 2f       	mov	r29, r24
    5ab2:	9e 01       	movw	r18, r28
    5ab4:	28 19       	sub	r18, r8
    5ab6:	39 09       	sbc	r19, r9
    5ab8:	2f 5f       	subi	r18, 0xFF	; 255
    5aba:	3f 4f       	sbci	r19, 0xFF	; 255
    5abc:	06 8c       	ldd	r0, Z+30	; 0x1e
    5abe:	f7 8d       	ldd	r31, Z+31	; 0x1f
    5ac0:	e0 2d       	mov	r30, r0
    5ac2:	a6 01       	movw	r20, r12
    5ac4:	b4 01       	movw	r22, r8
    5ac6:	da cf       	rjmp	.-76     	; 0x5a7c <Adafruit_GFX::drawLine(int, int, int, int, unsigned int)+0x58>
    5ac8:	02 84       	ldd	r0, Z+10	; 0x0a
    5aca:	f3 85       	ldd	r31, Z+11	; 0x0b
    5acc:	e0 2d       	mov	r30, r0
    5ace:	09 95       	icall
    5ad0:	d5 01       	movw	r26, r10
    5ad2:	ed 91       	ld	r30, X+
    5ad4:	fc 91       	ld	r31, X
    5ad6:	04 88       	ldd	r0, Z+20	; 0x14
    5ad8:	f5 89       	ldd	r31, Z+21	; 0x15
    5ada:	e0 2d       	mov	r30, r0
    5adc:	83 01       	movw	r16, r6
    5ade:	94 01       	movw	r18, r8
    5ae0:	a6 01       	movw	r20, r12
    5ae2:	be 01       	movw	r22, r28
    5ae4:	c5 01       	movw	r24, r10
    5ae6:	09 95       	icall
    5ae8:	d5 01       	movw	r26, r10
    5aea:	ed 91       	ld	r30, X+
    5aec:	fc 91       	ld	r31, X
    5aee:	06 88       	ldd	r0, Z+22	; 0x16
    5af0:	f7 89       	ldd	r31, Z+23	; 0x17
    5af2:	e0 2d       	mov	r30, r0
    5af4:	c5 01       	movw	r24, r10
    5af6:	df 91       	pop	r29
    5af8:	cf 91       	pop	r28
    5afa:	1f 91       	pop	r17
    5afc:	0f 91       	pop	r16
    5afe:	ff 90       	pop	r15
    5b00:	ef 90       	pop	r14
    5b02:	df 90       	pop	r13
    5b04:	cf 90       	pop	r12
    5b06:	bf 90       	pop	r11
    5b08:	af 90       	pop	r10
    5b0a:	9f 90       	pop	r9
    5b0c:	8f 90       	pop	r8
    5b0e:	7f 90       	pop	r7
    5b10:	6f 90       	pop	r6
    5b12:	09 94       	ijmp

00005b14 <Adafruit_GFX::setRotation(unsigned char)>:
_ZN12Adafruit_GFX11setRotationEh():
    5b14:	fc 01       	movw	r30, r24
    5b16:	63 70       	andi	r22, 0x03	; 3
    5b18:	66 8b       	std	Z+22, r22	; 0x16
    5b1a:	84 81       	ldd	r24, Z+4	; 0x04
    5b1c:	95 81       	ldd	r25, Z+5	; 0x05
    5b1e:	26 81       	ldd	r18, Z+6	; 0x06
    5b20:	37 81       	ldd	r19, Z+7	; 0x07
    5b22:	61 30       	cpi	r22, 0x01	; 1
    5b24:	39 f0       	breq	.+14     	; 0x5b34 <Adafruit_GFX::setRotation(unsigned char)+0x20>
    5b26:	63 30       	cpi	r22, 0x03	; 3
    5b28:	29 f0       	breq	.+10     	; 0x5b34 <Adafruit_GFX::setRotation(unsigned char)+0x20>
    5b2a:	91 87       	std	Z+9, r25	; 0x09
    5b2c:	80 87       	std	Z+8, r24	; 0x08
    5b2e:	33 87       	std	Z+11, r19	; 0x0b
    5b30:	22 87       	std	Z+10, r18	; 0x0a
    5b32:	08 95       	ret
    5b34:	31 87       	std	Z+9, r19	; 0x09
    5b36:	20 87       	std	Z+8, r18	; 0x08
    5b38:	93 87       	std	Z+11, r25	; 0x0b
    5b3a:	82 87       	std	Z+10, r24	; 0x0a
    5b3c:	08 95       	ret

00005b3e <Adafruit_GFX::Adafruit_GFX(int, int)>:
_ZN12Adafruit_GFXC2Eii():
    5b3e:	fc 01       	movw	r30, r24
_ZN5PrintC4Ev():
    5b40:	13 82       	std	Z+3, r1	; 0x03
    5b42:	12 82       	std	Z+2, r1	; 0x02
_ZN12Adafruit_GFXC2Eii():
    5b44:	8d e3       	ldi	r24, 0x3D	; 61
    5b46:	97 e0       	ldi	r25, 0x07	; 7
    5b48:	91 83       	std	Z+1, r25	; 0x01
    5b4a:	80 83       	st	Z, r24
    5b4c:	75 83       	std	Z+5, r23	; 0x05
    5b4e:	64 83       	std	Z+4, r22	; 0x04
    5b50:	57 83       	std	Z+7, r21	; 0x07
    5b52:	46 83       	std	Z+6, r20	; 0x06
    5b54:	71 87       	std	Z+9, r23	; 0x09
    5b56:	60 87       	std	Z+8, r22	; 0x08
    5b58:	53 87       	std	Z+11, r21	; 0x0b
    5b5a:	42 87       	std	Z+10, r20	; 0x0a
    5b5c:	16 8a       	std	Z+22, r1	; 0x16
    5b5e:	15 86       	std	Z+13, r1	; 0x0d
    5b60:	14 86       	std	Z+12, r1	; 0x0c
    5b62:	17 86       	std	Z+15, r1	; 0x0f
    5b64:	16 86       	std	Z+14, r1	; 0x0e
    5b66:	81 e0       	ldi	r24, 0x01	; 1
    5b68:	85 8b       	std	Z+21, r24	; 0x15
    5b6a:	84 8b       	std	Z+20, r24	; 0x14
    5b6c:	2f ef       	ldi	r18, 0xFF	; 255
    5b6e:	3f ef       	ldi	r19, 0xFF	; 255
    5b70:	33 8b       	std	Z+19, r19	; 0x13
    5b72:	22 8b       	std	Z+18, r18	; 0x12
    5b74:	31 8b       	std	Z+17, r19	; 0x11
    5b76:	20 8b       	std	Z+16, r18	; 0x10
    5b78:	87 8b       	std	Z+23, r24	; 0x17
    5b7a:	10 8e       	std	Z+24, r1	; 0x18
    5b7c:	12 8e       	std	Z+26, r1	; 0x1a
    5b7e:	11 8e       	std	Z+25, r1	; 0x19
    5b80:	08 95       	ret

00005b82 <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)>:
_ZN12Adafruit_GFX8drawCharEiihjjhh():
    5b82:	2f 92       	push	r2
    5b84:	3f 92       	push	r3
    5b86:	4f 92       	push	r4
    5b88:	5f 92       	push	r5
    5b8a:	6f 92       	push	r6
    5b8c:	7f 92       	push	r7
    5b8e:	8f 92       	push	r8
    5b90:	9f 92       	push	r9
    5b92:	af 92       	push	r10
    5b94:	bf 92       	push	r11
    5b96:	cf 92       	push	r12
    5b98:	df 92       	push	r13
    5b9a:	ef 92       	push	r14
    5b9c:	ff 92       	push	r15
    5b9e:	0f 93       	push	r16
    5ba0:	1f 93       	push	r17
    5ba2:	cf 93       	push	r28
    5ba4:	df 93       	push	r29
    5ba6:	cd b7       	in	r28, 0x3d	; 61
    5ba8:	de b7       	in	r29, 0x3e	; 62
    5baa:	6a 97       	sbiw	r28, 0x1a	; 26
    5bac:	0f b6       	in	r0, 0x3f	; 63
    5bae:	f8 94       	cli
    5bb0:	de bf       	out	0x3e, r29	; 62
    5bb2:	0f be       	out	0x3f, r0	; 63
    5bb4:	cd bf       	out	0x3d, r28	; 61
    5bb6:	9a 8f       	std	Y+26, r25	; 0x1a
    5bb8:	89 8f       	std	Y+25, r24	; 0x19
    5bba:	7a 83       	std	Y+2, r23	; 0x02
    5bbc:	69 83       	std	Y+1, r22	; 0x01
    5bbe:	4a 01       	movw	r8, r20
    5bc0:	d2 2e       	mov	r13, r18
    5bc2:	18 87       	std	Y+8, r17	; 0x08
    5bc4:	0f 83       	std	Y+7, r16	; 0x07
    5bc6:	37 01       	movw	r6, r14
    5bc8:	bc 2c       	mov	r11, r12
    5bca:	dc 01       	movw	r26, r24
    5bcc:	59 96       	adiw	r26, 0x19	; 25
    5bce:	2d 91       	ld	r18, X+
    5bd0:	3c 91       	ld	r19, X
    5bd2:	5a 97       	sbiw	r26, 0x1a	; 26
    5bd4:	21 15       	cp	r18, r1
    5bd6:	31 05       	cpc	r19, r1
    5bd8:	09 f0       	breq	.+2      	; 0x5bdc <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x5a>
    5bda:	15 c1       	rjmp	.+554    	; 0x5e06 <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x284>
    5bdc:	18 96       	adiw	r26, 0x08	; 8
    5bde:	8d 91       	ld	r24, X+
    5be0:	9c 91       	ld	r25, X
    5be2:	19 97       	sbiw	r26, 0x09	; 9
    5be4:	68 17       	cp	r22, r24
    5be6:	79 07       	cpc	r23, r25
    5be8:	0c f0       	brlt	.+2      	; 0x5bec <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x6a>
    5bea:	d7 c1       	rjmp	.+942    	; 0x5f9a <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x418>
    5bec:	1a 96       	adiw	r26, 0x0a	; 10
    5bee:	8d 91       	ld	r24, X+
    5bf0:	9c 91       	ld	r25, X
    5bf2:	48 17       	cp	r20, r24
    5bf4:	59 07       	cpc	r21, r25
    5bf6:	0c f0       	brlt	.+2      	; 0x5bfa <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x78>
    5bf8:	d0 c1       	rjmp	.+928    	; 0x5f9a <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x418>
    5bfa:	4c 2c       	mov	r4, r12
    5bfc:	51 2c       	mov	r5, r1
    5bfe:	b6 e0       	ldi	r27, 0x06	; 6
    5c00:	cb 9e       	mul	r12, r27
    5c02:	60 0d       	add	r22, r0
    5c04:	71 1d       	adc	r23, r1
    5c06:	11 24       	eor	r1, r1
    5c08:	7c 87       	std	Y+12, r23	; 0x0c
    5c0a:	6b 87       	std	Y+11, r22	; 0x0b
    5c0c:	16 16       	cp	r1, r22
    5c0e:	17 06       	cpc	r1, r23
    5c10:	0c f0       	brlt	.+2      	; 0x5c14 <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x92>
    5c12:	c3 c1       	rjmp	.+902    	; 0x5f9a <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x418>
    5c14:	ea 2d       	mov	r30, r10
    5c16:	f0 e0       	ldi	r31, 0x00	; 0
    5c18:	fa 87       	std	Y+10, r31	; 0x0a
    5c1a:	e9 87       	std	Y+9, r30	; 0x09
    5c1c:	93 e0       	ldi	r25, 0x03	; 3
    5c1e:	ee 0f       	add	r30, r30
    5c20:	ff 1f       	adc	r31, r31
    5c22:	9a 95       	dec	r25
    5c24:	e1 f7       	brne	.-8      	; 0x5c1e <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x9c>
    5c26:	f8 8b       	std	Y+16, r31	; 0x10
    5c28:	ef 87       	std	Y+15, r30	; 0x0f
    5c2a:	cf 01       	movw	r24, r30
    5c2c:	84 0f       	add	r24, r20
    5c2e:	95 1f       	adc	r25, r21
    5c30:	18 16       	cp	r1, r24
    5c32:	19 06       	cpc	r1, r25
    5c34:	0c f0       	brlt	.+2      	; 0x5c38 <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0xb6>
    5c36:	b1 c1       	rjmp	.+866    	; 0x5f9a <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x418>
    5c38:	a9 8d       	ldd	r26, Y+25	; 0x19
    5c3a:	ba 8d       	ldd	r27, Y+26	; 0x1a
    5c3c:	58 96       	adiw	r26, 0x18	; 24
    5c3e:	8c 91       	ld	r24, X
    5c40:	81 11       	cpse	r24, r1
    5c42:	04 c0       	rjmp	.+8      	; 0x5c4c <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0xca>
    5c44:	bf ea       	ldi	r27, 0xAF	; 175
    5c46:	bd 15       	cp	r27, r13
    5c48:	08 f4       	brcc	.+2      	; 0x5c4c <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0xca>
    5c4a:	d3 94       	inc	r13
    5c4c:	a9 8d       	ldd	r26, Y+25	; 0x19
    5c4e:	ba 8d       	ldd	r27, Y+26	; 0x1a
    5c50:	ed 91       	ld	r30, X+
    5c52:	fc 91       	ld	r31, X
    5c54:	11 97       	sbiw	r26, 0x01	; 1
    5c56:	02 84       	ldd	r0, Z+10	; 0x0a
    5c58:	f3 85       	ldd	r31, Z+11	; 0x0b
    5c5a:	e0 2d       	mov	r30, r0
    5c5c:	cd 01       	movw	r24, r26
    5c5e:	09 95       	icall
    5c60:	b5 e0       	ldi	r27, 0x05	; 5
    5c62:	db 9e       	mul	r13, r27
    5c64:	c0 01       	movw	r24, r0
    5c66:	11 24       	eor	r1, r1
    5c68:	e9 81       	ldd	r30, Y+1	; 0x01
    5c6a:	fa 81       	ldd	r31, Y+2	; 0x02
    5c6c:	fc 83       	std	Y+4, r31	; 0x04
    5c6e:	eb 83       	std	Y+3, r30	; 0x03
    5c70:	31 2c       	mov	r3, r1
    5c72:	21 2c       	mov	r2, r1
    5c74:	9c 01       	movw	r18, r24
    5c76:	24 56       	subi	r18, 0x64	; 100
    5c78:	3f 4f       	sbci	r19, 0xFF	; 255
    5c7a:	38 8f       	std	Y+24, r19	; 0x18
    5c7c:	2f 8b       	std	Y+23, r18	; 0x17
    5c7e:	4a 2d       	mov	r20, r10
    5c80:	50 e0       	ldi	r21, 0x00	; 0
    5c82:	5e 8b       	std	Y+22, r21	; 0x16
    5c84:	4d 8b       	std	Y+21, r20	; 0x15
    5c86:	ef 89       	ldd	r30, Y+23	; 0x17
    5c88:	f8 8d       	ldd	r31, Y+24	; 0x18
    5c8a:	e2 0d       	add	r30, r2
    5c8c:	f3 1d       	adc	r31, r3
    5c8e:	44 91       	lpm	r20, Z
    5c90:	9e 82       	std	Y+6, r9	; 0x06
    5c92:	8d 82       	std	Y+5, r8	; 0x05
    5c94:	d1 2c       	mov	r13, r1
    5c96:	c1 2c       	mov	r12, r1
    5c98:	69 81       	ldd	r22, Y+1	; 0x01
    5c9a:	7a 81       	ldd	r23, Y+2	; 0x02
    5c9c:	62 0d       	add	r22, r2
    5c9e:	73 1d       	adc	r23, r3
    5ca0:	7a 8b       	std	Y+18, r23	; 0x12
    5ca2:	69 8b       	std	Y+17, r22	; 0x11
    5ca4:	84 2f       	mov	r24, r20
    5ca6:	90 e0       	ldi	r25, 0x00	; 0
    5ca8:	9c 8b       	std	Y+20, r25	; 0x14
    5caa:	8b 8b       	std	Y+19, r24	; 0x13
    5cac:	e9 8d       	ldd	r30, Y+25	; 0x19
    5cae:	fa 8d       	ldd	r31, Y+26	; 0x1a
    5cb0:	a0 81       	ld	r26, Z
    5cb2:	b1 81       	ldd	r27, Z+1	; 0x01
    5cb4:	40 ff       	sbrs	r20, 0
    5cb6:	82 c0       	rjmp	.+260    	; 0x5dbc <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x23a>
    5cb8:	f1 e0       	ldi	r31, 0x01	; 1
    5cba:	bf 12       	cpse	r11, r31
    5cbc:	6f c0       	rjmp	.+222    	; 0x5d9c <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x21a>
    5cbe:	af 12       	cpse	r10, r31
    5cc0:	6d c0       	rjmp	.+218    	; 0x5d9c <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x21a>
    5cc2:	1c 96       	adiw	r26, 0x0c	; 12
    5cc4:	ed 91       	ld	r30, X+
    5cc6:	fc 91       	ld	r31, X
    5cc8:	2f 81       	ldd	r18, Y+7	; 0x07
    5cca:	38 85       	ldd	r19, Y+8	; 0x08
    5ccc:	a4 01       	movw	r20, r8
    5cce:	4c 0d       	add	r20, r12
    5cd0:	5d 1d       	adc	r21, r13
    5cd2:	69 89       	ldd	r22, Y+17	; 0x11
    5cd4:	7a 89       	ldd	r23, Y+18	; 0x12
    5cd6:	89 8d       	ldd	r24, Y+25	; 0x19
    5cd8:	9a 8d       	ldd	r25, Y+26	; 0x1a
    5cda:	09 95       	icall
    5cdc:	eb 89       	ldd	r30, Y+19	; 0x13
    5cde:	fc 89       	ldd	r31, Y+20	; 0x14
    5ce0:	f5 95       	asr	r31
    5ce2:	e7 95       	ror	r30
    5ce4:	4e 2f       	mov	r20, r30
    5ce6:	5f ef       	ldi	r21, 0xFF	; 255
    5ce8:	c5 1a       	sub	r12, r21
    5cea:	d5 0a       	sbc	r13, r21
    5cec:	6d 81       	ldd	r22, Y+5	; 0x05
    5cee:	7e 81       	ldd	r23, Y+6	; 0x06
    5cf0:	8d 89       	ldd	r24, Y+21	; 0x15
    5cf2:	9e 89       	ldd	r25, Y+22	; 0x16
    5cf4:	68 0f       	add	r22, r24
    5cf6:	79 1f       	adc	r23, r25
    5cf8:	7e 83       	std	Y+6, r23	; 0x06
    5cfa:	6d 83       	std	Y+5, r22	; 0x05
    5cfc:	98 e0       	ldi	r25, 0x08	; 8
    5cfe:	c9 16       	cp	r12, r25
    5d00:	d1 04       	cpc	r13, r1
    5d02:	81 f6       	brne	.-96     	; 0x5ca4 <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x122>
    5d04:	af ef       	ldi	r26, 0xFF	; 255
    5d06:	2a 1a       	sub	r2, r26
    5d08:	3a 0a       	sbc	r3, r26
    5d0a:	eb 81       	ldd	r30, Y+3	; 0x03
    5d0c:	fc 81       	ldd	r31, Y+4	; 0x04
    5d0e:	e4 0d       	add	r30, r4
    5d10:	f5 1d       	adc	r31, r5
    5d12:	fc 83       	std	Y+4, r31	; 0x04
    5d14:	eb 83       	std	Y+3, r30	; 0x03
    5d16:	f5 e0       	ldi	r31, 0x05	; 5
    5d18:	2f 16       	cp	r2, r31
    5d1a:	31 04       	cpc	r3, r1
    5d1c:	09 f0       	breq	.+2      	; 0x5d20 <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x19e>
    5d1e:	b3 cf       	rjmp	.-154    	; 0x5c86 <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x104>
    5d20:	2f 81       	ldd	r18, Y+7	; 0x07
    5d22:	38 85       	ldd	r19, Y+8	; 0x08
    5d24:	26 15       	cp	r18, r6
    5d26:	37 05       	cpc	r19, r7
    5d28:	b9 f0       	breq	.+46     	; 0x5d58 <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x1d6>
    5d2a:	a9 8d       	ldd	r26, Y+25	; 0x19
    5d2c:	ba 8d       	ldd	r27, Y+26	; 0x1a
    5d2e:	ed 91       	ld	r30, X+
    5d30:	fc 91       	ld	r31, X
    5d32:	b1 e0       	ldi	r27, 0x01	; 1
    5d34:	bb 12       	cpse	r11, r27
    5d36:	57 c0       	rjmp	.+174    	; 0x5de6 <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x264>
    5d38:	ab 12       	cpse	r10, r27
    5d3a:	55 c0       	rjmp	.+170    	; 0x5de6 <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x264>
    5d3c:	69 81       	ldd	r22, Y+1	; 0x01
    5d3e:	7a 81       	ldd	r23, Y+2	; 0x02
    5d40:	6b 5f       	subi	r22, 0xFB	; 251
    5d42:	7f 4f       	sbci	r23, 0xFF	; 255
    5d44:	00 88       	ldd	r0, Z+16	; 0x10
    5d46:	f1 89       	ldd	r31, Z+17	; 0x11
    5d48:	e0 2d       	mov	r30, r0
    5d4a:	83 01       	movw	r16, r6
    5d4c:	28 e0       	ldi	r18, 0x08	; 8
    5d4e:	30 e0       	ldi	r19, 0x00	; 0
    5d50:	a4 01       	movw	r20, r8
    5d52:	89 8d       	ldd	r24, Y+25	; 0x19
    5d54:	9a 8d       	ldd	r25, Y+26	; 0x1a
    5d56:	09 95       	icall
    5d58:	a9 8d       	ldd	r26, Y+25	; 0x19
    5d5a:	ba 8d       	ldd	r27, Y+26	; 0x1a
    5d5c:	ed 91       	ld	r30, X+
    5d5e:	fc 91       	ld	r31, X
    5d60:	11 97       	sbiw	r26, 0x01	; 1
    5d62:	06 88       	ldd	r0, Z+22	; 0x16
    5d64:	f7 89       	ldd	r31, Z+23	; 0x17
    5d66:	e0 2d       	mov	r30, r0
    5d68:	cd 01       	movw	r24, r26
    5d6a:	6a 96       	adiw	r28, 0x1a	; 26
    5d6c:	0f b6       	in	r0, 0x3f	; 63
    5d6e:	f8 94       	cli
    5d70:	de bf       	out	0x3e, r29	; 62
    5d72:	0f be       	out	0x3f, r0	; 63
    5d74:	cd bf       	out	0x3d, r28	; 61
    5d76:	df 91       	pop	r29
    5d78:	cf 91       	pop	r28
    5d7a:	1f 91       	pop	r17
    5d7c:	0f 91       	pop	r16
    5d7e:	ff 90       	pop	r15
    5d80:	ef 90       	pop	r14
    5d82:	df 90       	pop	r13
    5d84:	cf 90       	pop	r12
    5d86:	bf 90       	pop	r11
    5d88:	af 90       	pop	r10
    5d8a:	9f 90       	pop	r9
    5d8c:	8f 90       	pop	r8
    5d8e:	7f 90       	pop	r7
    5d90:	6f 90       	pop	r6
    5d92:	5f 90       	pop	r5
    5d94:	4f 90       	pop	r4
    5d96:	3f 90       	pop	r3
    5d98:	2f 90       	pop	r2
    5d9a:	09 94       	ijmp
    5d9c:	1e 96       	adiw	r26, 0x0e	; 14
    5d9e:	ed 91       	ld	r30, X+
    5da0:	fc 91       	ld	r31, X
    5da2:	ef 80       	ldd	r14, Y+7	; 0x07
    5da4:	f8 84       	ldd	r15, Y+8	; 0x08
    5da6:	09 85       	ldd	r16, Y+9	; 0x09
    5da8:	1a 85       	ldd	r17, Y+10	; 0x0a
    5daa:	92 01       	movw	r18, r4
    5dac:	4d 81       	ldd	r20, Y+5	; 0x05
    5dae:	5e 81       	ldd	r21, Y+6	; 0x06
    5db0:	6b 81       	ldd	r22, Y+3	; 0x03
    5db2:	7c 81       	ldd	r23, Y+4	; 0x04
    5db4:	89 8d       	ldd	r24, Y+25	; 0x19
    5db6:	9a 8d       	ldd	r25, Y+26	; 0x1a
    5db8:	09 95       	icall
    5dba:	90 cf       	rjmp	.-224    	; 0x5cdc <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x15a>
    5dbc:	2f 81       	ldd	r18, Y+7	; 0x07
    5dbe:	38 85       	ldd	r19, Y+8	; 0x08
    5dc0:	26 15       	cp	r18, r6
    5dc2:	37 05       	cpc	r19, r7
    5dc4:	09 f4       	brne	.+2      	; 0x5dc8 <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x246>
    5dc6:	8a cf       	rjmp	.-236    	; 0x5cdc <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x15a>
    5dc8:	31 e0       	ldi	r19, 0x01	; 1
    5dca:	b3 12       	cpse	r11, r19
    5dcc:	07 c0       	rjmp	.+14     	; 0x5ddc <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x25a>
    5dce:	a3 12       	cpse	r10, r19
    5dd0:	05 c0       	rjmp	.+10     	; 0x5ddc <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x25a>
    5dd2:	1c 96       	adiw	r26, 0x0c	; 12
    5dd4:	ed 91       	ld	r30, X+
    5dd6:	fc 91       	ld	r31, X
    5dd8:	93 01       	movw	r18, r6
    5dda:	78 cf       	rjmp	.-272    	; 0x5ccc <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x14a>
    5ddc:	1e 96       	adiw	r26, 0x0e	; 14
    5dde:	ed 91       	ld	r30, X+
    5de0:	fc 91       	ld	r31, X
    5de2:	73 01       	movw	r14, r6
    5de4:	e0 cf       	rjmp	.-64     	; 0x5da6 <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x224>
    5de6:	6b 85       	ldd	r22, Y+11	; 0x0b
    5de8:	7c 85       	ldd	r23, Y+12	; 0x0c
    5dea:	64 19       	sub	r22, r4
    5dec:	75 09       	sbc	r23, r5
    5dee:	06 84       	ldd	r0, Z+14	; 0x0e
    5df0:	f7 85       	ldd	r31, Z+15	; 0x0f
    5df2:	e0 2d       	mov	r30, r0
    5df4:	73 01       	movw	r14, r6
    5df6:	0f 85       	ldd	r16, Y+15	; 0x0f
    5df8:	18 89       	ldd	r17, Y+16	; 0x10
    5dfa:	92 01       	movw	r18, r4
    5dfc:	a4 01       	movw	r20, r8
    5dfe:	89 8d       	ldd	r24, Y+25	; 0x19
    5e00:	9a 8d       	ldd	r25, Y+26	; 0x1a
    5e02:	09 95       	icall
    5e04:	a9 cf       	rjmp	.-174    	; 0x5d58 <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x1d6>
    5e06:	f9 01       	movw	r30, r18
    5e08:	34 96       	adiw	r30, 0x04	; 4
    5e0a:	94 91       	lpm	r25, Z
_Z18pgm_read_glyph_ptrPK7GFXfonth():
    5e0c:	32 97       	sbiw	r30, 0x02	; 2
    5e0e:	45 91       	lpm	r20, Z+
    5e10:	54 91       	lpm	r21, Z
_ZN12Adafruit_GFX8drawCharEiihjjhh():
    5e12:	d9 1a       	sub	r13, r25
_Z18pgm_read_glyph_ptrPK7GFXfonth():
    5e14:	b7 e0       	ldi	r27, 0x07	; 7
    5e16:	db 9e       	mul	r13, r27
    5e18:	40 0d       	add	r20, r0
    5e1a:	51 1d       	adc	r21, r1
    5e1c:	11 24       	eor	r1, r1
_Z19pgm_read_bitmap_ptrPK7GFXfont():
    5e1e:	f9 01       	movw	r30, r18
    5e20:	25 91       	lpm	r18, Z+
    5e22:	34 91       	lpm	r19, Z
    5e24:	3c 8b       	std	Y+20, r19	; 0x14
    5e26:	2b 8b       	std	Y+19, r18	; 0x13
_ZN12Adafruit_GFX8drawCharEiihjjhh():
    5e28:	fa 01       	movw	r30, r20
    5e2a:	25 90       	lpm	r2, Z+
    5e2c:	34 90       	lpm	r3, Z
    5e2e:	fa 01       	movw	r30, r20
    5e30:	32 96       	adiw	r30, 0x02	; 2
    5e32:	74 90       	lpm	r7, Z
    5e34:	31 96       	adiw	r30, 0x01	; 1
    5e36:	34 91       	lpm	r19, Z
    5e38:	39 8b       	std	Y+17, r19	; 0x11
    5e3a:	32 96       	adiw	r30, 0x02	; 2
    5e3c:	64 90       	lpm	r6, Z
    5e3e:	31 96       	adiw	r30, 0x01	; 1
    5e40:	44 90       	lpm	r4, Z
    5e42:	41 e0       	ldi	r20, 0x01	; 1
    5e44:	4c 15       	cp	r20, r12
    5e46:	18 f0       	brcs	.+6      	; 0x5e4e <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x2cc>
    5e48:	4a 15       	cp	r20, r10
    5e4a:	08 f0       	brcs	.+2      	; 0x5e4e <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x2cc>
    5e4c:	7f c0       	rjmp	.+254    	; 0x5f4c <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x3ca>
    5e4e:	66 2d       	mov	r22, r6
    5e50:	06 2c       	mov	r0, r6
    5e52:	00 0c       	add	r0, r0
    5e54:	77 0b       	sbc	r23, r23
    5e56:	7c 83       	std	Y+4, r23	; 0x04
    5e58:	6b 83       	std	Y+3, r22	; 0x03
    5e5a:	84 2d       	mov	r24, r4
    5e5c:	04 2c       	mov	r0, r4
    5e5e:	00 0c       	add	r0, r0
    5e60:	99 0b       	sbc	r25, r25
    5e62:	9e 83       	std	Y+6, r25	; 0x06
    5e64:	8d 83       	std	Y+5, r24	; 0x05
    5e66:	a9 8d       	ldd	r26, Y+25	; 0x19
    5e68:	ba 8d       	ldd	r27, Y+26	; 0x1a
    5e6a:	ed 91       	ld	r30, X+
    5e6c:	fc 91       	ld	r31, X
    5e6e:	11 97       	sbiw	r26, 0x01	; 1
    5e70:	02 84       	ldd	r0, Z+10	; 0x0a
    5e72:	f3 85       	ldd	r31, Z+11	; 0x0b
    5e74:	e0 2d       	mov	r30, r0
    5e76:	cd 01       	movw	r24, r26
    5e78:	09 95       	icall
    5e7a:	51 2c       	mov	r5, r1
    5e7c:	d1 2c       	mov	r13, r1
    5e7e:	c1 2c       	mov	r12, r1
    5e80:	ea 2d       	mov	r30, r10
    5e82:	f0 e0       	ldi	r31, 0x00	; 0
    5e84:	fa 87       	std	Y+10, r31	; 0x0a
    5e86:	e9 87       	std	Y+9, r30	; 0x09
    5e88:	2b 2d       	mov	r18, r11
    5e8a:	30 e0       	ldi	r19, 0x00	; 0
    5e8c:	3c 87       	std	Y+12, r19	; 0x0c
    5e8e:	2b 87       	std	Y+11, r18	; 0x0b
    5e90:	a4 01       	movw	r20, r8
    5e92:	44 0d       	add	r20, r4
    5e94:	51 1d       	adc	r21, r1
    5e96:	47 fc       	sbrc	r4, 7
    5e98:	5a 95       	dec	r21
    5e9a:	58 8f       	std	Y+24, r21	; 0x18
    5e9c:	4f 8b       	std	Y+23, r20	; 0x17
    5e9e:	69 81       	ldd	r22, Y+1	; 0x01
    5ea0:	7a 81       	ldd	r23, Y+2	; 0x02
    5ea2:	66 0d       	add	r22, r6
    5ea4:	71 1d       	adc	r23, r1
    5ea6:	67 fc       	sbrc	r6, 7
    5ea8:	7a 95       	dec	r23
    5eaa:	7e 87       	std	Y+14, r23	; 0x0e
    5eac:	6d 87       	std	Y+13, r22	; 0x0d
    5eae:	79 89       	ldd	r23, Y+17	; 0x11
    5eb0:	c7 16       	cp	r12, r23
    5eb2:	08 f0       	brcs	.+2      	; 0x5eb6 <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x334>
    5eb4:	51 cf       	rjmp	.-350    	; 0x5d58 <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x1d6>
    5eb6:	2c 2d       	mov	r18, r12
    5eb8:	30 e0       	ldi	r19, 0x00	; 0
    5eba:	4d 81       	ldd	r20, Y+5	; 0x05
    5ebc:	5e 81       	ldd	r21, Y+6	; 0x06
    5ebe:	42 0f       	add	r20, r18
    5ec0:	53 1f       	adc	r21, r19
    5ec2:	a9 85       	ldd	r26, Y+9	; 0x09
    5ec4:	ba 85       	ldd	r27, Y+10	; 0x0a
    5ec6:	4a 9f       	mul	r20, r26
    5ec8:	c0 01       	movw	r24, r0
    5eca:	4b 9f       	mul	r20, r27
    5ecc:	90 0d       	add	r25, r0
    5ece:	5a 9f       	mul	r21, r26
    5ed0:	90 0d       	add	r25, r0
    5ed2:	11 24       	eor	r1, r1
    5ed4:	fc 01       	movw	r30, r24
    5ed6:	e8 0d       	add	r30, r8
    5ed8:	f9 1d       	adc	r31, r9
    5eda:	f8 8b       	std	Y+16, r31	; 0x10
    5edc:	ef 87       	std	Y+15, r30	; 0x0f
    5ede:	85 2d       	mov	r24, r5
    5ee0:	61 2c       	mov	r6, r1
    5ee2:	4f 89       	ldd	r20, Y+23	; 0x17
    5ee4:	58 8d       	ldd	r21, Y+24	; 0x18
    5ee6:	42 0f       	add	r20, r18
    5ee8:	53 1f       	adc	r21, r19
    5eea:	5e 8b       	std	Y+22, r21	; 0x16
    5eec:	4d 8b       	std	Y+21, r20	; 0x15
    5eee:	67 14       	cp	r6, r7
    5ef0:	08 f0       	brcs	.+2      	; 0x5ef4 <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x372>
    5ef2:	50 c0       	rjmp	.+160    	; 0x5f94 <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x412>
    5ef4:	44 24       	eor	r4, r4
    5ef6:	43 94       	inc	r4
    5ef8:	48 0e       	add	r4, r24
    5efa:	87 70       	andi	r24, 0x07	; 7
    5efc:	41 f4       	brne	.+16     	; 0x5f0e <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x38c>
    5efe:	c1 01       	movw	r24, r2
    5f00:	01 96       	adiw	r24, 0x01	; 1
    5f02:	eb 89       	ldd	r30, Y+19	; 0x13
    5f04:	fc 89       	ldd	r31, Y+20	; 0x14
    5f06:	e2 0d       	add	r30, r2
    5f08:	f3 1d       	adc	r31, r3
    5f0a:	d4 90       	lpm	r13, Z
    5f0c:	1c 01       	movw	r2, r24
    5f0e:	d7 fe       	sbrs	r13, 7
    5f10:	19 c0       	rjmp	.+50     	; 0x5f44 <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x3c2>
    5f12:	a9 8d       	ldd	r26, Y+25	; 0x19
    5f14:	ba 8d       	ldd	r27, Y+26	; 0x1a
    5f16:	ed 91       	ld	r30, X+
    5f18:	fc 91       	ld	r31, X
    5f1a:	66 2d       	mov	r22, r6
    5f1c:	70 e0       	ldi	r23, 0x00	; 0
    5f1e:	b1 e0       	ldi	r27, 0x01	; 1
    5f20:	bb 12       	cpse	r11, r27
    5f22:	19 c0       	rjmp	.+50     	; 0x5f56 <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x3d4>
    5f24:	ab 12       	cpse	r10, r27
    5f26:	17 c0       	rjmp	.+46     	; 0x5f56 <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x3d4>
    5f28:	2d 85       	ldd	r18, Y+13	; 0x0d
    5f2a:	3e 85       	ldd	r19, Y+14	; 0x0e
    5f2c:	62 0f       	add	r22, r18
    5f2e:	73 1f       	adc	r23, r19
    5f30:	04 84       	ldd	r0, Z+12	; 0x0c
    5f32:	f5 85       	ldd	r31, Z+13	; 0x0d
    5f34:	e0 2d       	mov	r30, r0
    5f36:	2f 81       	ldd	r18, Y+7	; 0x07
    5f38:	38 85       	ldd	r19, Y+8	; 0x08
    5f3a:	4d 89       	ldd	r20, Y+21	; 0x15
    5f3c:	5e 89       	ldd	r21, Y+22	; 0x16
    5f3e:	89 8d       	ldd	r24, Y+25	; 0x19
    5f40:	9a 8d       	ldd	r25, Y+26	; 0x1a
    5f42:	09 95       	icall
    5f44:	dd 0c       	add	r13, r13
    5f46:	63 94       	inc	r6
    5f48:	84 2d       	mov	r24, r4
    5f4a:	d1 cf       	rjmp	.-94     	; 0x5eee <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x36c>
    5f4c:	1e 82       	std	Y+6, r1	; 0x06
    5f4e:	1d 82       	std	Y+5, r1	; 0x05
    5f50:	1c 82       	std	Y+4, r1	; 0x04
    5f52:	1b 82       	std	Y+3, r1	; 0x03
    5f54:	88 cf       	rjmp	.-240    	; 0x5e66 <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x2e4>
    5f56:	4b 81       	ldd	r20, Y+3	; 0x03
    5f58:	5c 81       	ldd	r21, Y+4	; 0x04
    5f5a:	64 0f       	add	r22, r20
    5f5c:	75 1f       	adc	r23, r21
    5f5e:	ab 85       	ldd	r26, Y+11	; 0x0b
    5f60:	bc 85       	ldd	r27, Y+12	; 0x0c
    5f62:	6a 9f       	mul	r22, r26
    5f64:	c0 01       	movw	r24, r0
    5f66:	6b 9f       	mul	r22, r27
    5f68:	90 0d       	add	r25, r0
    5f6a:	7a 9f       	mul	r23, r26
    5f6c:	90 0d       	add	r25, r0
    5f6e:	11 24       	eor	r1, r1
    5f70:	69 81       	ldd	r22, Y+1	; 0x01
    5f72:	7a 81       	ldd	r23, Y+2	; 0x02
    5f74:	68 0f       	add	r22, r24
    5f76:	79 1f       	adc	r23, r25
    5f78:	06 84       	ldd	r0, Z+14	; 0x0e
    5f7a:	f7 85       	ldd	r31, Z+15	; 0x0f
    5f7c:	e0 2d       	mov	r30, r0
    5f7e:	ef 80       	ldd	r14, Y+7	; 0x07
    5f80:	f8 84       	ldd	r15, Y+8	; 0x08
    5f82:	09 85       	ldd	r16, Y+9	; 0x09
    5f84:	1a 85       	ldd	r17, Y+10	; 0x0a
    5f86:	9d 01       	movw	r18, r26
    5f88:	4f 85       	ldd	r20, Y+15	; 0x0f
    5f8a:	58 89       	ldd	r21, Y+16	; 0x10
    5f8c:	89 8d       	ldd	r24, Y+25	; 0x19
    5f8e:	9a 8d       	ldd	r25, Y+26	; 0x1a
    5f90:	09 95       	icall
    5f92:	d8 cf       	rjmp	.-80     	; 0x5f44 <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x3c2>
    5f94:	57 0c       	add	r5, r7
    5f96:	c3 94       	inc	r12
    5f98:	8a cf       	rjmp	.-236    	; 0x5eae <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x32c>
    5f9a:	6a 96       	adiw	r28, 0x1a	; 26
    5f9c:	0f b6       	in	r0, 0x3f	; 63
    5f9e:	f8 94       	cli
    5fa0:	de bf       	out	0x3e, r29	; 62
    5fa2:	0f be       	out	0x3f, r0	; 63
    5fa4:	cd bf       	out	0x3d, r28	; 61
    5fa6:	df 91       	pop	r29
    5fa8:	cf 91       	pop	r28
    5faa:	1f 91       	pop	r17
    5fac:	0f 91       	pop	r16
    5fae:	ff 90       	pop	r15
    5fb0:	ef 90       	pop	r14
    5fb2:	df 90       	pop	r13
    5fb4:	cf 90       	pop	r12
    5fb6:	bf 90       	pop	r11
    5fb8:	af 90       	pop	r10
    5fba:	9f 90       	pop	r9
    5fbc:	8f 90       	pop	r8
    5fbe:	7f 90       	pop	r7
    5fc0:	6f 90       	pop	r6
    5fc2:	5f 90       	pop	r5
    5fc4:	4f 90       	pop	r4
    5fc6:	3f 90       	pop	r3
    5fc8:	2f 90       	pop	r2
    5fca:	08 95       	ret

00005fcc <Adafruit_GFX::write(unsigned char)>:
_ZN12Adafruit_GFX5writeEh():
/Users/DS 1/Documents/Arduino/libraries/Adafruit_GFX_Library/Adafruit_GFX.cpp:1242
/*!
    @brief  Print one byte/character of data, used to support print()
    @param  c  The 8-bit ascii character to write
*/
/**************************************************************************/
size_t Adafruit_GFX::write(uint8_t c) {
    5fcc:	8f 92       	push	r8
    5fce:	9f 92       	push	r9
    5fd0:	af 92       	push	r10
    5fd2:	cf 92       	push	r12
    5fd4:	ef 92       	push	r14
    5fd6:	ff 92       	push	r15
    5fd8:	0f 93       	push	r16
    5fda:	1f 93       	push	r17
    5fdc:	cf 93       	push	r28
    5fde:	df 93       	push	r29
    5fe0:	ec 01       	movw	r28, r24
    5fe2:	26 2f       	mov	r18, r22
/Users/DS 1/Documents/Arduino/libraries/Adafruit_GFX_Library/Adafruit_GFX.cpp:1243
  if (!gfxFont) { // 'Classic' built-in font
    5fe4:	89 8d       	ldd	r24, Y+25	; 0x19
    5fe6:	9a 8d       	ldd	r25, Y+26	; 0x1a
    5fe8:	00 97       	sbiw	r24, 0x00	; 0
    5fea:	09 f0       	breq	.+2      	; 0x5fee <Adafruit_GFX::write(unsigned char)+0x22>
    5fec:	51 c0       	rjmp	.+162    	; 0x6090 <Adafruit_GFX::write(unsigned char)+0xc4>
/Users/DS 1/Documents/Arduino/libraries/Adafruit_GFX_Library/Adafruit_GFX.cpp:1245

    if (c == '\n') {              // Newline?
    5fee:	6a 30       	cpi	r22, 0x0A	; 10
    5ff0:	d1 f4       	brne	.+52     	; 0x6026 <Adafruit_GFX::write(unsigned char)+0x5a>
/Users/DS 1/Documents/Arduino/libraries/Adafruit_GFX_Library/Adafruit_GFX.cpp:1246
      cursor_x = 0;               // Reset x to zero,
    5ff2:	1d 86       	std	Y+13, r1	; 0x0d
    5ff4:	1c 86       	std	Y+12, r1	; 0x0c
/Users/DS 1/Documents/Arduino/libraries/Adafruit_GFX_Library/Adafruit_GFX.cpp:1247
      cursor_y += textsize_y * 8; // advance y one line
    5ff6:	8d 89       	ldd	r24, Y+21	; 0x15
    5ff8:	48 e0       	ldi	r20, 0x08	; 8
    5ffa:	84 9f       	mul	r24, r20
    5ffc:	90 01       	movw	r18, r0
    5ffe:	11 24       	eor	r1, r1
    6000:	8e 85       	ldd	r24, Y+14	; 0x0e
    6002:	9f 85       	ldd	r25, Y+15	; 0x0f
    6004:	82 0f       	add	r24, r18
    6006:	93 1f       	adc	r25, r19
/Users/DS 1/Documents/Arduino/libraries/Adafruit_GFX_Library/Adafruit_GFX.cpp:1262

  } else { // Custom font

    if (c == '\n') {
      cursor_x = 0;
      cursor_y +=
    6008:	9f 87       	std	Y+15, r25	; 0x0f
    600a:	8e 87       	std	Y+14, r24	; 0x0e
/Users/DS 1/Documents/Arduino/libraries/Adafruit_GFX_Library/Adafruit_GFX.cpp:1286
            (uint8_t)pgm_read_byte(&glyph->xAdvance) * (int16_t)textsize_x;
      }
    }
  }
  return 1;
}
    600c:	81 e0       	ldi	r24, 0x01	; 1
    600e:	90 e0       	ldi	r25, 0x00	; 0
    6010:	df 91       	pop	r29
    6012:	cf 91       	pop	r28
    6014:	1f 91       	pop	r17
    6016:	0f 91       	pop	r16
    6018:	ff 90       	pop	r15
    601a:	ef 90       	pop	r14
    601c:	cf 90       	pop	r12
    601e:	af 90       	pop	r10
    6020:	9f 90       	pop	r9
    6022:	8f 90       	pop	r8
    6024:	08 95       	ret
/Users/DS 1/Documents/Arduino/libraries/Adafruit_GFX_Library/Adafruit_GFX.cpp:1248
  if (!gfxFont) { // 'Classic' built-in font

    if (c == '\n') {              // Newline?
      cursor_x = 0;               // Reset x to zero,
      cursor_y += textsize_y * 8; // advance y one line
    } else if (c != '\r') {       // Ignore carriage returns
    6026:	6d 30       	cpi	r22, 0x0D	; 13
    6028:	89 f3       	breq	.-30     	; 0x600c <Adafruit_GFX::write(unsigned char)+0x40>
    602a:	cc 88       	ldd	r12, Y+20	; 0x14
    602c:	ad 88       	ldd	r10, Y+21	; 0x15
/Users/DS 1/Documents/Arduino/libraries/Adafruit_GFX_Library/Adafruit_GFX.cpp:1249
      if (wrap && ((cursor_x + textsize_x * 6) > _width)) { // Off right?
    602e:	8f 89       	ldd	r24, Y+23	; 0x17
    6030:	88 23       	and	r24, r24
    6032:	c1 f0       	breq	.+48     	; 0x6064 <Adafruit_GFX::write(unsigned char)+0x98>
/Users/DS 1/Documents/Arduino/libraries/Adafruit_GFX_Library/Adafruit_GFX.cpp:1249 (discriminator 1)
    6034:	8c 85       	ldd	r24, Y+12	; 0x0c
    6036:	9d 85       	ldd	r25, Y+13	; 0x0d
    6038:	36 e0       	ldi	r19, 0x06	; 6
    603a:	c3 9e       	mul	r12, r19
    603c:	80 0d       	add	r24, r0
    603e:	91 1d       	adc	r25, r1
    6040:	11 24       	eor	r1, r1
    6042:	48 85       	ldd	r20, Y+8	; 0x08
    6044:	59 85       	ldd	r21, Y+9	; 0x09
    6046:	48 17       	cp	r20, r24
    6048:	59 07       	cpc	r21, r25
    604a:	64 f4       	brge	.+24     	; 0x6064 <Adafruit_GFX::write(unsigned char)+0x98>
    604c:	4e 85       	ldd	r20, Y+14	; 0x0e
    604e:	5f 85       	ldd	r21, Y+15	; 0x0f
/Users/DS 1/Documents/Arduino/libraries/Adafruit_GFX_Library/Adafruit_GFX.cpp:1250
        cursor_x = 0;                                       // Reset x to zero,
    6050:	1d 86       	std	Y+13, r1	; 0x0d
    6052:	1c 86       	std	Y+12, r1	; 0x0c
/Users/DS 1/Documents/Arduino/libraries/Adafruit_GFX_Library/Adafruit_GFX.cpp:1251
        cursor_y += textsize_y * 8; // advance y one line
    6054:	38 e0       	ldi	r19, 0x08	; 8
    6056:	a3 9e       	mul	r10, r19
    6058:	c0 01       	movw	r24, r0
    605a:	11 24       	eor	r1, r1
    605c:	84 0f       	add	r24, r20
    605e:	95 1f       	adc	r25, r21
    6060:	9f 87       	std	Y+15, r25	; 0x0f
    6062:	8e 87       	std	Y+14, r24	; 0x0e
/Users/DS 1/Documents/Arduino/libraries/Adafruit_GFX_Library/Adafruit_GFX.cpp:1253
      }
      drawChar(cursor_x, cursor_y, c, textcolor, textbgcolor, textsize_x,
    6064:	ea 88       	ldd	r14, Y+18	; 0x12
    6066:	fb 88       	ldd	r15, Y+19	; 0x13
    6068:	08 89       	ldd	r16, Y+16	; 0x10
    606a:	19 89       	ldd	r17, Y+17	; 0x11
    606c:	4e 85       	ldd	r20, Y+14	; 0x0e
    606e:	5f 85       	ldd	r21, Y+15	; 0x0f
    6070:	6c 85       	ldd	r22, Y+12	; 0x0c
    6072:	7d 85       	ldd	r23, Y+13	; 0x0d
    6074:	ce 01       	movw	r24, r28
    6076:	0e 94 c1 2d 	call	0x5b82	; 0x5b82 <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)>
/Users/DS 1/Documents/Arduino/libraries/Adafruit_GFX_Library/Adafruit_GFX.cpp:1255
               textsize_y);
      cursor_x += textsize_x * 6; // Advance x one char
    607a:	2c 89       	ldd	r18, Y+20	; 0x14
    607c:	8c 85       	ldd	r24, Y+12	; 0x0c
    607e:	9d 85       	ldd	r25, Y+13	; 0x0d
    6080:	46 e0       	ldi	r20, 0x06	; 6
    6082:	24 9f       	mul	r18, r20
    6084:	80 0d       	add	r24, r0
    6086:	91 1d       	adc	r25, r1
    6088:	11 24       	eor	r1, r1
/Users/DS 1/Documents/Arduino/libraries/Adafruit_GFX_Library/Adafruit_GFX.cpp:1280
                        (uint8_t)pgm_read_byte(&gfxFont->yAdvance);
          }
          drawChar(cursor_x, cursor_y, c, textcolor, textbgcolor, textsize_x,
                   textsize_y);
        }
        cursor_x +=
    608a:	9d 87       	std	Y+13, r25	; 0x0d
    608c:	8c 87       	std	Y+12, r24	; 0x0c
    608e:	be cf       	rjmp	.-132    	; 0x600c <Adafruit_GFX::write(unsigned char)+0x40>
/Users/DS 1/Documents/Arduino/libraries/Adafruit_GFX_Library/Adafruit_GFX.cpp:1260
      cursor_x += textsize_x * 6; // Advance x one char
    }

  } else { // Custom font

    if (c == '\n') {
    6090:	6a 30       	cpi	r22, 0x0A	; 10
    6092:	69 f4       	brne	.+26     	; 0x60ae <Adafruit_GFX::write(unsigned char)+0xe2>
/Users/DS 1/Documents/Arduino/libraries/Adafruit_GFX_Library/Adafruit_GFX.cpp:1261
      cursor_x = 0;
    6094:	1d 86       	std	Y+13, r1	; 0x0d
    6096:	1c 86       	std	Y+12, r1	; 0x0c
/Users/DS 1/Documents/Arduino/libraries/Adafruit_GFX_Library/Adafruit_GFX.cpp:1263
      cursor_y +=
          (int16_t)textsize_y * (uint8_t)pgm_read_byte(&gfxFont->yAdvance);
    6098:	fc 01       	movw	r30, r24
    609a:	38 96       	adiw	r30, 0x08	; 8
    609c:	e4 91       	lpm	r30, Z
    609e:	2d 89       	ldd	r18, Y+21	; 0x15
/Users/DS 1/Documents/Arduino/libraries/Adafruit_GFX_Library/Adafruit_GFX.cpp:1262

  } else { // Custom font

    if (c == '\n') {
      cursor_x = 0;
      cursor_y +=
    60a0:	8e 85       	ldd	r24, Y+14	; 0x0e
    60a2:	9f 85       	ldd	r25, Y+15	; 0x0f
    60a4:	e2 9f       	mul	r30, r18
    60a6:	80 0d       	add	r24, r0
    60a8:	91 1d       	adc	r25, r1
    60aa:	11 24       	eor	r1, r1
    60ac:	ad cf       	rjmp	.-166    	; 0x6008 <Adafruit_GFX::write(unsigned char)+0x3c>
/Users/DS 1/Documents/Arduino/libraries/Adafruit_GFX_Library/Adafruit_GFX.cpp:1264
          (int16_t)textsize_y * (uint8_t)pgm_read_byte(&gfxFont->yAdvance);
    } else if (c != '\r') {
    60ae:	6d 30       	cpi	r22, 0x0D	; 13
    60b0:	09 f4       	brne	.+2      	; 0x60b4 <Adafruit_GFX::write(unsigned char)+0xe8>
    60b2:	ac cf       	rjmp	.-168    	; 0x600c <Adafruit_GFX::write(unsigned char)+0x40>
/Users/DS 1/Documents/Arduino/libraries/Adafruit_GFX_Library/Adafruit_GFX.cpp:1265
      uint8_t first = pgm_read_byte(&gfxFont->first);
    60b4:	fc 01       	movw	r30, r24
    60b6:	34 96       	adiw	r30, 0x04	; 4
    60b8:	34 91       	lpm	r19, Z
/Users/DS 1/Documents/Arduino/libraries/Adafruit_GFX_Library/Adafruit_GFX.cpp:1266
      if ((c >= first) && (c <= (uint8_t)pgm_read_byte(&gfxFont->last))) {
    60ba:	63 17       	cp	r22, r19
    60bc:	08 f4       	brcc	.+2      	; 0x60c0 <Adafruit_GFX::write(unsigned char)+0xf4>
    60be:	a6 cf       	rjmp	.-180    	; 0x600c <Adafruit_GFX::write(unsigned char)+0x40>
/Users/DS 1/Documents/Arduino/libraries/Adafruit_GFX_Library/Adafruit_GFX.cpp:1266 (discriminator 1)
    60c0:	32 96       	adiw	r30, 0x02	; 2
    60c2:	e4 91       	lpm	r30, Z
    60c4:	e6 17       	cp	r30, r22
    60c6:	08 f4       	brcc	.+2      	; 0x60ca <Adafruit_GFX::write(unsigned char)+0xfe>
    60c8:	a1 cf       	rjmp	.-190    	; 0x600c <Adafruit_GFX::write(unsigned char)+0x40>
_Z18pgm_read_glyph_ptrPK7GFXfonth():
/Users/DS 1/Documents/Arduino/libraries/Adafruit_GFX_Library/Adafruit_GFX.cpp:67
#define pgm_read_pointer(addr) ((void *)pgm_read_word(addr))
#endif

inline GFXglyph *pgm_read_glyph_ptr(const GFXfont *gfxFont, uint8_t c) {
#ifdef __AVR__
  return &(((GFXglyph *)pgm_read_pointer(&gfxFont->glyph))[c]);
    60ca:	fc 01       	movw	r30, r24
    60cc:	32 96       	adiw	r30, 0x02	; 2
    60ce:	85 90       	lpm	r8, Z+
    60d0:	94 90       	lpm	r9, Z
_ZN12Adafruit_GFX5writeEh():
/Users/DS 1/Documents/Arduino/libraries/Adafruit_GFX_Library/Adafruit_GFX.cpp:1267
      cursor_y +=
          (int16_t)textsize_y * (uint8_t)pgm_read_byte(&gfxFont->yAdvance);
    } else if (c != '\r') {
      uint8_t first = pgm_read_byte(&gfxFont->first);
      if ((c >= first) && (c <= (uint8_t)pgm_read_byte(&gfxFont->last))) {
        GFXglyph *glyph = pgm_read_glyph_ptr(gfxFont, c - first);
    60d2:	46 2f       	mov	r20, r22
    60d4:	43 1b       	sub	r20, r19
    60d6:	34 2f       	mov	r19, r20
_Z18pgm_read_glyph_ptrPK7GFXfonth():
/Users/DS 1/Documents/Arduino/libraries/Adafruit_GFX_Library/Adafruit_GFX.cpp:67
#define pgm_read_pointer(addr) ((void *)pgm_read_word(addr))
#endif

inline GFXglyph *pgm_read_glyph_ptr(const GFXfont *gfxFont, uint8_t c) {
#ifdef __AVR__
  return &(((GFXglyph *)pgm_read_pointer(&gfxFont->glyph))[c]);
    60d8:	47 e0       	ldi	r20, 0x07	; 7
    60da:	34 9f       	mul	r19, r20
    60dc:	80 0c       	add	r8, r0
    60de:	91 1c       	adc	r9, r1
    60e0:	11 24       	eor	r1, r1
_ZN12Adafruit_GFX5writeEh():
/Users/DS 1/Documents/Arduino/libraries/Adafruit_GFX_Library/Adafruit_GFX.cpp:1268
          (int16_t)textsize_y * (uint8_t)pgm_read_byte(&gfxFont->yAdvance);
    } else if (c != '\r') {
      uint8_t first = pgm_read_byte(&gfxFont->first);
      if ((c >= first) && (c <= (uint8_t)pgm_read_byte(&gfxFont->last))) {
        GFXglyph *glyph = pgm_read_glyph_ptr(gfxFont, c - first);
        uint8_t w = pgm_read_byte(&glyph->width),
    60e2:	f4 01       	movw	r30, r8
    60e4:	32 96       	adiw	r30, 0x02	; 2
    60e6:	34 91       	lpm	r19, Z
/Users/DS 1/Documents/Arduino/libraries/Adafruit_GFX_Library/Adafruit_GFX.cpp:1269
                h = pgm_read_byte(&glyph->height);
    60e8:	31 96       	adiw	r30, 0x01	; 1
    60ea:	e4 91       	lpm	r30, Z
/Users/DS 1/Documents/Arduino/libraries/Adafruit_GFX_Library/Adafruit_GFX.cpp:1270
        if ((w > 0) && (h > 0)) { // Is there an associated bitmap?
    60ec:	33 23       	and	r19, r19
    60ee:	a9 f1       	breq	.+106    	; 0x615a <Adafruit_GFX::write(unsigned char)+0x18e>
/Users/DS 1/Documents/Arduino/libraries/Adafruit_GFX_Library/Adafruit_GFX.cpp:1270 (discriminator 1)
    60f0:	ee 23       	and	r30, r30
    60f2:	99 f1       	breq	.+102    	; 0x615a <Adafruit_GFX::write(unsigned char)+0x18e>
    60f4:	cc 88       	ldd	r12, Y+20	; 0x14
/Users/DS 1/Documents/Arduino/libraries/Adafruit_GFX_Library/Adafruit_GFX.cpp:1271
          int16_t xo = (int8_t)pgm_read_byte(&glyph->xOffset); // sic
    60f6:	f4 01       	movw	r30, r8
    60f8:	35 96       	adiw	r30, 0x05	; 5
    60fa:	e4 91       	lpm	r30, Z
    60fc:	ad 88       	ldd	r10, Y+21	; 0x15
/Users/DS 1/Documents/Arduino/libraries/Adafruit_GFX_Library/Adafruit_GFX.cpp:1272
          if (wrap && ((cursor_x + textsize_x * (xo + w)) > _width)) {
    60fe:	4f 89       	ldd	r20, Y+23	; 0x17
    6100:	44 23       	and	r20, r20
    6102:	01 f1       	breq	.+64     	; 0x6144 <Adafruit_GFX::write(unsigned char)+0x178>
/Users/DS 1/Documents/Arduino/libraries/Adafruit_GFX_Library/Adafruit_GFX.cpp:1271 (discriminator 1)
      if ((c >= first) && (c <= (uint8_t)pgm_read_byte(&gfxFont->last))) {
        GFXglyph *glyph = pgm_read_glyph_ptr(gfxFont, c - first);
        uint8_t w = pgm_read_byte(&glyph->width),
                h = pgm_read_byte(&glyph->height);
        if ((w > 0) && (h > 0)) { // Is there an associated bitmap?
          int16_t xo = (int8_t)pgm_read_byte(&glyph->xOffset); // sic
    6104:	0e 2e       	mov	r0, r30
    6106:	00 0c       	add	r0, r0
    6108:	ff 0b       	sbc	r31, r31
/Users/DS 1/Documents/Arduino/libraries/Adafruit_GFX_Library/Adafruit_GFX.cpp:1272 (discriminator 1)
          if (wrap && ((cursor_x + textsize_x * (xo + w)) > _width)) {
    610a:	e3 0f       	add	r30, r19
    610c:	f1 1d       	adc	r31, r1
    610e:	ce 9e       	mul	r12, r30
    6110:	a0 01       	movw	r20, r0
    6112:	cf 9e       	mul	r12, r31
    6114:	50 0d       	add	r21, r0
    6116:	11 24       	eor	r1, r1
    6118:	6c 85       	ldd	r22, Y+12	; 0x0c
    611a:	7d 85       	ldd	r23, Y+13	; 0x0d
    611c:	46 0f       	add	r20, r22
    611e:	57 1f       	adc	r21, r23
    6120:	68 85       	ldd	r22, Y+8	; 0x08
    6122:	79 85       	ldd	r23, Y+9	; 0x09
    6124:	64 17       	cp	r22, r20
    6126:	75 07       	cpc	r23, r21
    6128:	6c f4       	brge	.+26     	; 0x6144 <Adafruit_GFX::write(unsigned char)+0x178>
    612a:	4e 85       	ldd	r20, Y+14	; 0x0e
    612c:	5f 85       	ldd	r21, Y+15	; 0x0f
/Users/DS 1/Documents/Arduino/libraries/Adafruit_GFX_Library/Adafruit_GFX.cpp:1273
            cursor_x = 0;
    612e:	1d 86       	std	Y+13, r1	; 0x0d
    6130:	1c 86       	std	Y+12, r1	; 0x0c
/Users/DS 1/Documents/Arduino/libraries/Adafruit_GFX_Library/Adafruit_GFX.cpp:1275
            cursor_y += (int16_t)textsize_y *
                        (uint8_t)pgm_read_byte(&gfxFont->yAdvance);
    6132:	fc 01       	movw	r30, r24
    6134:	38 96       	adiw	r30, 0x08	; 8
    6136:	e4 91       	lpm	r30, Z
/Users/DS 1/Documents/Arduino/libraries/Adafruit_GFX_Library/Adafruit_GFX.cpp:1274
                h = pgm_read_byte(&glyph->height);
        if ((w > 0) && (h > 0)) { // Is there an associated bitmap?
          int16_t xo = (int8_t)pgm_read_byte(&glyph->xOffset); // sic
          if (wrap && ((cursor_x + textsize_x * (xo + w)) > _width)) {
            cursor_x = 0;
            cursor_y += (int16_t)textsize_y *
    6138:	ae 9e       	mul	r10, r30
    613a:	40 0d       	add	r20, r0
    613c:	51 1d       	adc	r21, r1
    613e:	11 24       	eor	r1, r1
    6140:	5f 87       	std	Y+15, r21	; 0x0f
    6142:	4e 87       	std	Y+14, r20	; 0x0e
/Users/DS 1/Documents/Arduino/libraries/Adafruit_GFX_Library/Adafruit_GFX.cpp:1277
                        (uint8_t)pgm_read_byte(&gfxFont->yAdvance);
          }
          drawChar(cursor_x, cursor_y, c, textcolor, textbgcolor, textsize_x,
    6144:	ea 88       	ldd	r14, Y+18	; 0x12
    6146:	fb 88       	ldd	r15, Y+19	; 0x13
    6148:	08 89       	ldd	r16, Y+16	; 0x10
    614a:	19 89       	ldd	r17, Y+17	; 0x11
    614c:	4e 85       	ldd	r20, Y+14	; 0x0e
    614e:	5f 85       	ldd	r21, Y+15	; 0x0f
    6150:	6c 85       	ldd	r22, Y+12	; 0x0c
    6152:	7d 85       	ldd	r23, Y+13	; 0x0d
    6154:	ce 01       	movw	r24, r28
    6156:	0e 94 c1 2d 	call	0x5b82	; 0x5b82 <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)>
/Users/DS 1/Documents/Arduino/libraries/Adafruit_GFX_Library/Adafruit_GFX.cpp:1281
                   textsize_y);
        }
        cursor_x +=
            (uint8_t)pgm_read_byte(&glyph->xAdvance) * (int16_t)textsize_x;
    615a:	f4 01       	movw	r30, r8
    615c:	34 96       	adiw	r30, 0x04	; 4
    615e:	e4 91       	lpm	r30, Z
    6160:	2c 89       	ldd	r18, Y+20	; 0x14
/Users/DS 1/Documents/Arduino/libraries/Adafruit_GFX_Library/Adafruit_GFX.cpp:1280
                        (uint8_t)pgm_read_byte(&gfxFont->yAdvance);
          }
          drawChar(cursor_x, cursor_y, c, textcolor, textbgcolor, textsize_x,
                   textsize_y);
        }
        cursor_x +=
    6162:	8c 85       	ldd	r24, Y+12	; 0x0c
    6164:	9d 85       	ldd	r25, Y+13	; 0x0d
    6166:	e2 9f       	mul	r30, r18
    6168:	80 0d       	add	r24, r0
    616a:	91 1d       	adc	r25, r1
    616c:	11 24       	eor	r1, r1
    616e:	8d cf       	rjmp	.-230    	; 0x608a <Adafruit_GFX::write(unsigned char)+0xbe>

00006170 <TwoWire::available()>:
_ZN7TwoWire9availableEv():
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/libraries/Wire/src/Wire.cpp:329

// sets function called on slave read
void TwoWire::onRequest( void (*function)(void) )
{
  user_onRequest = function;
}
    6170:	80 91 30 0a 	lds	r24, 0x0A30	; 0x800a30 <TwoWire::rxBufferLength>
    6174:	90 91 31 0a 	lds	r25, 0x0A31	; 0x800a31 <TwoWire::rxBufferIndex>
    6178:	89 1b       	sub	r24, r25
    617a:	99 0b       	sbc	r25, r25
    617c:	08 95       	ret

0000617e <TwoWire::read()>:
_ZN7TwoWire4readEv():
    617e:	90 91 31 0a 	lds	r25, 0x0A31	; 0x800a31 <TwoWire::rxBufferIndex>
    6182:	80 91 30 0a 	lds	r24, 0x0A30	; 0x800a30 <TwoWire::rxBufferLength>
    6186:	2f ef       	ldi	r18, 0xFF	; 255
    6188:	3f ef       	ldi	r19, 0xFF	; 255
    618a:	98 17       	cp	r25, r24
    618c:	48 f4       	brcc	.+18     	; 0x61a0 <TwoWire::read()+0x22>
    618e:	e9 2f       	mov	r30, r25
    6190:	f0 e0       	ldi	r31, 0x00	; 0
    6192:	ee 5c       	subi	r30, 0xCE	; 206
    6194:	f5 4f       	sbci	r31, 0xF5	; 245
    6196:	20 81       	ld	r18, Z
    6198:	30 e0       	ldi	r19, 0x00	; 0
    619a:	9f 5f       	subi	r25, 0xFF	; 255
    619c:	90 93 31 0a 	sts	0x0A31, r25	; 0x800a31 <TwoWire::rxBufferIndex>
    61a0:	c9 01       	movw	r24, r18
    61a2:	08 95       	ret

000061a4 <TwoWire::peek()>:
_ZN7TwoWire4peekEv():
    61a4:	e0 91 31 0a 	lds	r30, 0x0A31	; 0x800a31 <TwoWire::rxBufferIndex>
    61a8:	80 91 30 0a 	lds	r24, 0x0A30	; 0x800a30 <TwoWire::rxBufferLength>
    61ac:	e8 17       	cp	r30, r24
    61ae:	30 f4       	brcc	.+12     	; 0x61bc <TwoWire::peek()+0x18>
    61b0:	f0 e0       	ldi	r31, 0x00	; 0
    61b2:	ee 5c       	subi	r30, 0xCE	; 206
    61b4:	f5 4f       	sbci	r31, 0xF5	; 245
    61b6:	80 81       	ld	r24, Z
    61b8:	90 e0       	ldi	r25, 0x00	; 0
    61ba:	08 95       	ret
    61bc:	8f ef       	ldi	r24, 0xFF	; 255
    61be:	9f ef       	ldi	r25, 0xFF	; 255
    61c0:	08 95       	ret

000061c2 <TwoWire::flush()>:
_ZN7TwoWire5flushEv():
    61c2:	08 95       	ret

000061c4 <TwoWire::onReceiveService(unsigned char*, int)>:
_ZN7TwoWire16onReceiveServiceEPhi():
    61c4:	cf 93       	push	r28
    61c6:	df 93       	push	r29
    61c8:	ec 01       	movw	r28, r24
    61ca:	e0 91 08 0a 	lds	r30, 0x0A08	; 0x800a08 <TwoWire::user_onReceive>
    61ce:	f0 91 09 0a 	lds	r31, 0x0A09	; 0x800a09 <TwoWire::user_onReceive+0x1>
    61d2:	30 97       	sbiw	r30, 0x00	; 0
    61d4:	f1 f0       	breq	.+60     	; 0x6212 <TwoWire::onReceiveService(unsigned char*, int)+0x4e>
    61d6:	90 91 31 0a 	lds	r25, 0x0A31	; 0x800a31 <TwoWire::rxBufferIndex>
    61da:	80 91 30 0a 	lds	r24, 0x0A30	; 0x800a30 <TwoWire::rxBufferLength>
    61de:	98 17       	cp	r25, r24
    61e0:	c0 f0       	brcs	.+48     	; 0x6212 <TwoWire::onReceiveService(unsigned char*, int)+0x4e>
    61e2:	90 e0       	ldi	r25, 0x00	; 0
    61e4:	29 2f       	mov	r18, r25
    61e6:	30 e0       	ldi	r19, 0x00	; 0
    61e8:	26 17       	cp	r18, r22
    61ea:	37 07       	cpc	r19, r23
    61ec:	54 f4       	brge	.+20     	; 0x6202 <TwoWire::onReceiveService(unsigned char*, int)+0x3e>
    61ee:	de 01       	movw	r26, r28
    61f0:	a2 0f       	add	r26, r18
    61f2:	b3 1f       	adc	r27, r19
    61f4:	4c 91       	ld	r20, X
    61f6:	2e 5c       	subi	r18, 0xCE	; 206
    61f8:	35 4f       	sbci	r19, 0xF5	; 245
    61fa:	d9 01       	movw	r26, r18
    61fc:	4c 93       	st	X, r20
    61fe:	9f 5f       	subi	r25, 0xFF	; 255
    6200:	f1 cf       	rjmp	.-30     	; 0x61e4 <TwoWire::onReceiveService(unsigned char*, int)+0x20>
    6202:	10 92 31 0a 	sts	0x0A31, r1	; 0x800a31 <TwoWire::rxBufferIndex>
    6206:	60 93 30 0a 	sts	0x0A30, r22	; 0x800a30 <TwoWire::rxBufferLength>
    620a:	cb 01       	movw	r24, r22
    620c:	df 91       	pop	r29
    620e:	cf 91       	pop	r28
    6210:	09 94       	ijmp
    6212:	df 91       	pop	r29
    6214:	cf 91       	pop	r28
    6216:	08 95       	ret

00006218 <TwoWire::onRequestService()>:
_ZN7TwoWire16onRequestServiceEv():
    6218:	e0 91 0a 0a 	lds	r30, 0x0A0A	; 0x800a0a <TwoWire::user_onRequest>
    621c:	f0 91 0b 0a 	lds	r31, 0x0A0B	; 0x800a0b <TwoWire::user_onRequest+0x1>
    6220:	30 97       	sbiw	r30, 0x00	; 0
    6222:	29 f0       	breq	.+10     	; 0x622e <TwoWire::onRequestService()+0x16>
    6224:	10 92 0e 0a 	sts	0x0A0E, r1	; 0x800a0e <TwoWire::txBufferIndex>
    6228:	10 92 0d 0a 	sts	0x0A0D, r1	; 0x800a0d <TwoWire::txBufferLength>
    622c:	09 94       	ijmp
    622e:	08 95       	ret

00006230 <TwoWire::write(unsigned char)>:
_ZN7TwoWire5writeEh():
    6230:	cf 93       	push	r28
    6232:	df 93       	push	r29
    6234:	1f 92       	push	r1
    6236:	cd b7       	in	r28, 0x3d	; 61
    6238:	de b7       	in	r29, 0x3e	; 62
    623a:	69 83       	std	Y+1, r22	; 0x01
    623c:	20 91 0c 0a 	lds	r18, 0x0A0C	; 0x800a0c <TwoWire::transmitting>
    6240:	22 23       	and	r18, r18
    6242:	f9 f0       	breq	.+62     	; 0x6282 <TwoWire::write(unsigned char)+0x52>
    6244:	20 91 0d 0a 	lds	r18, 0x0A0D	; 0x800a0d <TwoWire::txBufferLength>
    6248:	20 32       	cpi	r18, 0x20	; 32
    624a:	58 f0       	brcs	.+22     	; 0x6262 <TwoWire::write(unsigned char)+0x32>
_ZN5Print13setWriteErrorEi():
    624c:	21 e0       	ldi	r18, 0x01	; 1
    624e:	30 e0       	ldi	r19, 0x00	; 0
    6250:	fc 01       	movw	r30, r24
    6252:	33 83       	std	Z+3, r19	; 0x03
    6254:	22 83       	std	Z+2, r18	; 0x02
_ZN7TwoWire5writeEh():
    6256:	90 e0       	ldi	r25, 0x00	; 0
    6258:	80 e0       	ldi	r24, 0x00	; 0
    625a:	0f 90       	pop	r0
    625c:	df 91       	pop	r29
    625e:	cf 91       	pop	r28
    6260:	08 95       	ret
    6262:	80 91 0e 0a 	lds	r24, 0x0A0E	; 0x800a0e <TwoWire::txBufferIndex>
    6266:	e8 2f       	mov	r30, r24
    6268:	f0 e0       	ldi	r31, 0x00	; 0
    626a:	e1 5f       	subi	r30, 0xF1	; 241
    626c:	f5 4f       	sbci	r31, 0xF5	; 245
    626e:	99 81       	ldd	r25, Y+1	; 0x01
    6270:	90 83       	st	Z, r25
    6272:	8f 5f       	subi	r24, 0xFF	; 255
    6274:	80 93 0e 0a 	sts	0x0A0E, r24	; 0x800a0e <TwoWire::txBufferIndex>
    6278:	80 93 0d 0a 	sts	0x0A0D, r24	; 0x800a0d <TwoWire::txBufferLength>
    627c:	81 e0       	ldi	r24, 0x01	; 1
    627e:	90 e0       	ldi	r25, 0x00	; 0
    6280:	ec cf       	rjmp	.-40     	; 0x625a <TwoWire::write(unsigned char)+0x2a>
    6282:	61 e0       	ldi	r22, 0x01	; 1
    6284:	ce 01       	movw	r24, r28
    6286:	01 96       	adiw	r24, 0x01	; 1
    6288:	0e 94 45 32 	call	0x648a	; 0x648a <twi_transmit>
    628c:	f7 cf       	rjmp	.-18     	; 0x627c <TwoWire::write(unsigned char)+0x4c>

0000628e <TwoWire::write(unsigned char const*, unsigned int)>:
_ZN7TwoWire5writeEPKhj():
    628e:	cf 92       	push	r12
    6290:	df 92       	push	r13
    6292:	ef 92       	push	r14
    6294:	ff 92       	push	r15
    6296:	0f 93       	push	r16
    6298:	1f 93       	push	r17
    629a:	cf 93       	push	r28
    629c:	df 93       	push	r29
    629e:	7c 01       	movw	r14, r24
    62a0:	cb 01       	movw	r24, r22
    62a2:	8a 01       	movw	r16, r20
    62a4:	20 91 0c 0a 	lds	r18, 0x0A0C	; 0x800a0c <TwoWire::transmitting>
    62a8:	22 23       	and	r18, r18
    62aa:	89 f0       	breq	.+34     	; 0x62ce <TwoWire::write(unsigned char const*, unsigned int)+0x40>
    62ac:	eb 01       	movw	r28, r22
    62ae:	6b 01       	movw	r12, r22
    62b0:	c4 0e       	add	r12, r20
    62b2:	d5 1e       	adc	r13, r21
    62b4:	cc 15       	cp	r28, r12
    62b6:	dd 05       	cpc	r29, r13
    62b8:	69 f0       	breq	.+26     	; 0x62d4 <TwoWire::write(unsigned char const*, unsigned int)+0x46>
    62ba:	69 91       	ld	r22, Y+
    62bc:	d7 01       	movw	r26, r14
    62be:	ed 91       	ld	r30, X+
    62c0:	fc 91       	ld	r31, X
    62c2:	01 90       	ld	r0, Z+
    62c4:	f0 81       	ld	r31, Z
    62c6:	e0 2d       	mov	r30, r0
    62c8:	c7 01       	movw	r24, r14
    62ca:	09 95       	icall
    62cc:	f3 cf       	rjmp	.-26     	; 0x62b4 <TwoWire::write(unsigned char const*, unsigned int)+0x26>
    62ce:	64 2f       	mov	r22, r20
    62d0:	0e 94 45 32 	call	0x648a	; 0x648a <twi_transmit>
    62d4:	c8 01       	movw	r24, r16
    62d6:	df 91       	pop	r29
    62d8:	cf 91       	pop	r28
    62da:	1f 91       	pop	r17
    62dc:	0f 91       	pop	r16
    62de:	ff 90       	pop	r15
    62e0:	ef 90       	pop	r14
    62e2:	df 90       	pop	r13
    62e4:	cf 90       	pop	r12
    62e6:	08 95       	ret

000062e8 <TwoWire::begin()>:
_ZN7TwoWire5beginEv():
    62e8:	10 92 31 0a 	sts	0x0A31, r1	; 0x800a31 <TwoWire::rxBufferIndex>
    62ec:	10 92 30 0a 	sts	0x0A30, r1	; 0x800a30 <TwoWire::rxBufferLength>
    62f0:	10 92 0e 0a 	sts	0x0A0E, r1	; 0x800a0e <TwoWire::txBufferIndex>
    62f4:	10 92 0d 0a 	sts	0x0A0D, r1	; 0x800a0d <TwoWire::txBufferLength>
    62f8:	0e 94 bd 31 	call	0x637a	; 0x637a <twi_init>
    62fc:	8c e0       	ldi	r24, 0x0C	; 12
    62fe:	91 e3       	ldi	r25, 0x31	; 49
    6300:	0e 94 71 32 	call	0x64e2	; 0x64e2 <twi_attachSlaveTxEvent>
    6304:	82 ee       	ldi	r24, 0xE2	; 226
    6306:	90 e3       	ldi	r25, 0x30	; 48
    6308:	0c 94 6c 32 	jmp	0x64d8	; 0x64d8 <twi_attachSlaveRxEvent>

0000630c <TwoWire::setClock(unsigned long)>:
_ZN7TwoWire8setClockEm():
    630c:	cb 01       	movw	r24, r22
    630e:	ba 01       	movw	r22, r20
    6310:	0c 94 db 31 	jmp	0x63b6	; 0x63b6 <twi_setFrequency>

00006314 <TwoWire::beginTransmission(unsigned char)>:
_ZN7TwoWire17beginTransmissionEh():
    6314:	81 e0       	ldi	r24, 0x01	; 1
    6316:	80 93 0c 0a 	sts	0x0A0C, r24	; 0x800a0c <TwoWire::transmitting>
    631a:	60 93 2f 0a 	sts	0x0A2F, r22	; 0x800a2f <TwoWire::txAddress>
    631e:	10 92 0e 0a 	sts	0x0A0E, r1	; 0x800a0e <TwoWire::txBufferIndex>
    6322:	10 92 0d 0a 	sts	0x0A0D, r1	; 0x800a0d <TwoWire::txBufferLength>
    6326:	08 95       	ret

00006328 <TwoWire::beginTransmission(int)>:
_ZN7TwoWire17beginTransmissionEi():
    6328:	0c 94 8a 31 	jmp	0x6314	; 0x6314 <TwoWire::beginTransmission(unsigned char)>

0000632c <TwoWire::endTransmission(unsigned char)>:
_ZN7TwoWire15endTransmissionEh():
    632c:	0f 93       	push	r16
    632e:	06 2f       	mov	r16, r22
    6330:	21 e0       	ldi	r18, 0x01	; 1
    6332:	40 91 0d 0a 	lds	r20, 0x0A0D	; 0x800a0d <TwoWire::txBufferLength>
    6336:	6f e0       	ldi	r22, 0x0F	; 15
    6338:	7a e0       	ldi	r23, 0x0A	; 10
    633a:	80 91 2f 0a 	lds	r24, 0x0A2F	; 0x800a2f <TwoWire::txAddress>
    633e:	0e 94 ee 31 	call	0x63dc	; 0x63dc <twi_writeTo>
    6342:	10 92 0e 0a 	sts	0x0A0E, r1	; 0x800a0e <TwoWire::txBufferIndex>
    6346:	10 92 0d 0a 	sts	0x0A0D, r1	; 0x800a0d <TwoWire::txBufferLength>
    634a:	10 92 0c 0a 	sts	0x0A0C, r1	; 0x800a0c <TwoWire::transmitting>
    634e:	0f 91       	pop	r16
    6350:	08 95       	ret

00006352 <TwoWire::endTransmission()>:
_ZN7TwoWire15endTransmissionEv():
    6352:	61 e0       	ldi	r22, 0x01	; 1
    6354:	0c 94 96 31 	jmp	0x632c	; 0x632c <TwoWire::endTransmission(unsigned char)>

00006358 <_GLOBAL__sub_I__ZN7TwoWire8rxBufferE>:
_ZN5PrintC4Ev():
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/Print.h:46
    size_t printNumber(unsigned long, uint8_t);
    size_t printFloat(double, uint8_t);
  protected:
    void setWriteError(int err = 1) { write_error = err; }
  public:
    Print() : write_error(0) {}
    6358:	ec ef       	ldi	r30, 0xFC	; 252
    635a:	f9 e0       	ldi	r31, 0x09	; 9
    635c:	13 82       	std	Z+3, r1	; 0x03
    635e:	12 82       	std	Z+2, r1	; 0x02
_ZN6StreamC4Ev():
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/Stream.h:63
  public:
    virtual int available() = 0;
    virtual int read() = 0;
    virtual int peek() = 0;

    Stream() {_timeout=1000;}
    6360:	88 ee       	ldi	r24, 0xE8	; 232
    6362:	93 e0       	ldi	r25, 0x03	; 3
    6364:	a0 e0       	ldi	r26, 0x00	; 0
    6366:	b0 e0       	ldi	r27, 0x00	; 0
    6368:	84 83       	std	Z+4, r24	; 0x04
    636a:	95 83       	std	Z+5, r25	; 0x05
    636c:	a6 83       	std	Z+6, r26	; 0x06
    636e:	b7 83       	std	Z+7, r27	; 0x07
_ZN7TwoWireC4Ev():
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/libraries/Wire/src/Wire.cpp:52
void (*TwoWire::user_onRequest)(void);
void (*TwoWire::user_onReceive)(int);

// Constructors ////////////////////////////////////////////////////////////////

TwoWire::TwoWire()
    6370:	89 e6       	ldi	r24, 0x69	; 105
    6372:	97 e0       	ldi	r25, 0x07	; 7
    6374:	91 83       	std	Z+1, r25	; 0x01
    6376:	80 83       	st	Z, r24
_GLOBAL__sub_I__ZN7TwoWire8rxBufferE():
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/libraries/Wire/src/Wire.cpp:333
  user_onRequest = function;
}

// Preinstantiate Objects //////////////////////////////////////////////////////

TwoWire Wire = TwoWire();
    6378:	08 95       	ret

0000637a <twi_init>:
twi_init():
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/libraries/Wire/src/utility/twi.c:359
{
  // transmit master read ready signal, with or without ack
  if(ack){
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT) | _BV(TWEA);
  }else{
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT);
    637a:	10 92 bf 0a 	sts	0x0ABF, r1	; 0x800abf <twi_state>
    637e:	81 e0       	ldi	r24, 0x01	; 1
    6380:	80 93 bd 0a 	sts	0x0ABD, r24	; 0x800abd <twi_sendStop>
    6384:	10 92 bc 0a 	sts	0x0ABC, r1	; 0x800abc <twi_inRepStart>
    6388:	61 e0       	ldi	r22, 0x01	; 1
    638a:	81 e1       	ldi	r24, 0x11	; 17
    638c:	0e 94 54 35 	call	0x6aa8	; 0x6aa8 <digitalWrite>
    6390:	61 e0       	ldi	r22, 0x01	; 1
    6392:	80 e1       	ldi	r24, 0x10	; 16
    6394:	0e 94 54 35 	call	0x6aa8	; 0x6aa8 <digitalWrite>
    6398:	e9 eb       	ldi	r30, 0xB9	; 185
    639a:	f0 e0       	ldi	r31, 0x00	; 0
    639c:	80 81       	ld	r24, Z
    639e:	8e 7f       	andi	r24, 0xFE	; 254
    63a0:	80 83       	st	Z, r24
    63a2:	80 81       	ld	r24, Z
    63a4:	8d 7f       	andi	r24, 0xFD	; 253
    63a6:	80 83       	st	Z, r24
    63a8:	88 e4       	ldi	r24, 0x48	; 72
    63aa:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7e00b8>
    63ae:	85 e4       	ldi	r24, 0x45	; 69
    63b0:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    63b4:	08 95       	ret

000063b6 <twi_setFrequency>:
twi_setFrequency():
    63b6:	9b 01       	movw	r18, r22
    63b8:	ac 01       	movw	r20, r24
    63ba:	60 e0       	ldi	r22, 0x00	; 0
    63bc:	74 e2       	ldi	r23, 0x24	; 36
    63be:	84 ef       	ldi	r24, 0xF4	; 244
    63c0:	90 e0       	ldi	r25, 0x00	; 0
    63c2:	0e 94 02 3a 	call	0x7404	; 0x7404 <__udivmodsi4>
    63c6:	20 51       	subi	r18, 0x10	; 16
    63c8:	31 09       	sbc	r19, r1
    63ca:	41 09       	sbc	r20, r1
    63cc:	51 09       	sbc	r21, r1
    63ce:	56 95       	lsr	r21
    63d0:	47 95       	ror	r20
    63d2:	37 95       	ror	r19
    63d4:	27 95       	ror	r18
    63d6:	20 93 b8 00 	sts	0x00B8, r18	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7e00b8>
    63da:	08 95       	ret

000063dc <twi_writeTo>:
twi_writeTo():
    63dc:	0f 93       	push	r16
    63de:	41 32       	cpi	r20, 0x21	; 33
    63e0:	08 f0       	brcs	.+2      	; 0x63e4 <twi_writeTo+0x8>
    63e2:	4b c0       	rjmp	.+150    	; 0x647a <twi_writeTo+0x9e>
    63e4:	90 91 bf 0a 	lds	r25, 0x0ABF	; 0x800abf <twi_state>
    63e8:	91 11       	cpse	r25, r1
    63ea:	fc cf       	rjmp	.-8      	; 0x63e4 <twi_writeTo+0x8>
    63ec:	92 e0       	ldi	r25, 0x02	; 2
    63ee:	90 93 bf 0a 	sts	0x0ABF, r25	; 0x800abf <twi_state>
    63f2:	00 93 bd 0a 	sts	0x0ABD, r16	; 0x800abd <twi_sendStop>
    63f6:	9f ef       	ldi	r25, 0xFF	; 255
    63f8:	90 93 52 0a 	sts	0x0A52, r25	; 0x800a52 <twi_error>
    63fc:	10 92 97 0a 	sts	0x0A97, r1	; 0x800a97 <twi_masterBufferIndex>
    6400:	40 93 96 0a 	sts	0x0A96, r20	; 0x800a96 <twi_masterBufferLength>
    6404:	36 2f       	mov	r19, r22
    6406:	a8 e9       	ldi	r26, 0x98	; 152
    6408:	ba e0       	ldi	r27, 0x0A	; 10
    640a:	fb 01       	movw	r30, r22
    640c:	9e 2f       	mov	r25, r30
    640e:	93 1b       	sub	r25, r19
    6410:	94 17       	cp	r25, r20
    6412:	70 f1       	brcs	.+92     	; 0x6470 <twi_writeTo+0x94>
    6414:	10 92 be 0a 	sts	0x0ABE, r1	; 0x800abe <twi_slarw>
    6418:	90 91 be 0a 	lds	r25, 0x0ABE	; 0x800abe <twi_slarw>
    641c:	88 0f       	add	r24, r24
    641e:	89 2b       	or	r24, r25
    6420:	80 93 be 0a 	sts	0x0ABE, r24	; 0x800abe <twi_slarw>
    6424:	80 91 bc 0a 	lds	r24, 0x0ABC	; 0x800abc <twi_inRepStart>
    6428:	81 30       	cpi	r24, 0x01	; 1
    642a:	29 f5       	brne	.+74     	; 0x6476 <twi_writeTo+0x9a>
    642c:	10 92 bc 0a 	sts	0x0ABC, r1	; 0x800abc <twi_inRepStart>
    6430:	80 91 be 0a 	lds	r24, 0x0ABE	; 0x800abe <twi_slarw>
    6434:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
    6438:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    643c:	83 fd       	sbrc	r24, 3
    643e:	f8 cf       	rjmp	.-16     	; 0x6430 <twi_writeTo+0x54>
    6440:	85 ec       	ldi	r24, 0xC5	; 197
    6442:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    6446:	22 23       	and	r18, r18
    6448:	21 f0       	breq	.+8      	; 0x6452 <twi_writeTo+0x76>
    644a:	80 91 bf 0a 	lds	r24, 0x0ABF	; 0x800abf <twi_state>
    644e:	82 30       	cpi	r24, 0x02	; 2
    6450:	d1 f3       	breq	.-12     	; 0x6446 <twi_writeTo+0x6a>
    6452:	80 91 52 0a 	lds	r24, 0x0A52	; 0x800a52 <twi_error>
    6456:	8f 3f       	cpi	r24, 0xFF	; 255
    6458:	91 f0       	breq	.+36     	; 0x647e <twi_writeTo+0xa2>
    645a:	80 91 52 0a 	lds	r24, 0x0A52	; 0x800a52 <twi_error>
    645e:	80 32       	cpi	r24, 0x20	; 32
    6460:	81 f0       	breq	.+32     	; 0x6482 <twi_writeTo+0xa6>
    6462:	80 91 52 0a 	lds	r24, 0x0A52	; 0x800a52 <twi_error>
    6466:	80 33       	cpi	r24, 0x30	; 48
    6468:	71 f0       	breq	.+28     	; 0x6486 <twi_writeTo+0xaa>
    646a:	84 e0       	ldi	r24, 0x04	; 4
    646c:	0f 91       	pop	r16
    646e:	08 95       	ret
    6470:	91 91       	ld	r25, Z+
    6472:	9d 93       	st	X+, r25
    6474:	cb cf       	rjmp	.-106    	; 0x640c <twi_writeTo+0x30>
    6476:	85 ee       	ldi	r24, 0xE5	; 229
    6478:	e4 cf       	rjmp	.-56     	; 0x6442 <twi_writeTo+0x66>
    647a:	81 e0       	ldi	r24, 0x01	; 1
    647c:	f7 cf       	rjmp	.-18     	; 0x646c <twi_writeTo+0x90>
    647e:	80 e0       	ldi	r24, 0x00	; 0
    6480:	f5 cf       	rjmp	.-22     	; 0x646c <twi_writeTo+0x90>
    6482:	82 e0       	ldi	r24, 0x02	; 2
    6484:	f3 cf       	rjmp	.-26     	; 0x646c <twi_writeTo+0x90>
    6486:	83 e0       	ldi	r24, 0x03	; 3
    6488:	f1 cf       	rjmp	.-30     	; 0x646c <twi_writeTo+0x90>

0000648a <twi_transmit>:
twi_transmit():
    648a:	20 91 74 0a 	lds	r18, 0x0A74	; 0x800a74 <twi_txBufferLength>
    648e:	26 0f       	add	r18, r22
    6490:	33 27       	eor	r19, r19
    6492:	33 1f       	adc	r19, r19
    6494:	21 32       	cpi	r18, 0x21	; 33
    6496:	31 05       	cpc	r19, r1
    6498:	ec f4       	brge	.+58     	; 0x64d4 <twi_transmit+0x4a>
    649a:	20 91 bf 0a 	lds	r18, 0x0ABF	; 0x800abf <twi_state>
    649e:	fc 01       	movw	r30, r24
    64a0:	90 e0       	ldi	r25, 0x00	; 0
    64a2:	80 e0       	ldi	r24, 0x00	; 0
    64a4:	24 30       	cpi	r18, 0x04	; 4
    64a6:	69 f0       	breq	.+26     	; 0x64c2 <twi_transmit+0x38>
    64a8:	82 e0       	ldi	r24, 0x02	; 2
    64aa:	08 95       	ret
    64ac:	a0 91 74 0a 	lds	r26, 0x0A74	; 0x800a74 <twi_txBufferLength>
    64b0:	21 91       	ld	r18, Z+
    64b2:	ac 01       	movw	r20, r24
    64b4:	4a 58       	subi	r20, 0x8A	; 138
    64b6:	55 4f       	sbci	r21, 0xF5	; 245
    64b8:	a4 0f       	add	r26, r20
    64ba:	b5 2f       	mov	r27, r21
    64bc:	b1 1d       	adc	r27, r1
    64be:	2c 93       	st	X, r18
    64c0:	01 96       	adiw	r24, 0x01	; 1
    64c2:	86 17       	cp	r24, r22
    64c4:	98 f3       	brcs	.-26     	; 0x64ac <twi_transmit+0x22>
    64c6:	80 91 74 0a 	lds	r24, 0x0A74	; 0x800a74 <twi_txBufferLength>
    64ca:	68 0f       	add	r22, r24
    64cc:	60 93 74 0a 	sts	0x0A74, r22	; 0x800a74 <twi_txBufferLength>
    64d0:	80 e0       	ldi	r24, 0x00	; 0
    64d2:	08 95       	ret
    64d4:	81 e0       	ldi	r24, 0x01	; 1
    64d6:	08 95       	ret

000064d8 <twi_attachSlaveRxEvent>:
twi_attachSlaveRxEvent():
    64d8:	90 93 b9 0a 	sts	0x0AB9, r25	; 0x800ab9 <twi_onSlaveReceive+0x1>
    64dc:	80 93 b8 0a 	sts	0x0AB8, r24	; 0x800ab8 <twi_onSlaveReceive>
    64e0:	08 95       	ret

000064e2 <twi_attachSlaveTxEvent>:
twi_attachSlaveTxEvent():
    64e2:	90 93 bb 0a 	sts	0x0ABB, r25	; 0x800abb <twi_onSlaveTransmit+0x1>
    64e6:	80 93 ba 0a 	sts	0x0ABA, r24	; 0x800aba <twi_onSlaveTransmit>
    64ea:	08 95       	ret

000064ec <twi_stop>:
twi_stop():
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/libraries/Wire/src/utility/twi.c:372
 * Output   none
 */
void twi_stop(void)
{
  // send stop condition
  TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWEA) | _BV(TWINT) | _BV(TWSTO);
    64ec:	85 ed       	ldi	r24, 0xD5	; 213
    64ee:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/libraries/Wire/src/utility/twi.c:376

  // wait for stop condition to be exectued on bus
  // TWINT is not set after a stop condition!
  while(TWCR & _BV(TWSTO)){
    64f2:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    64f6:	84 fd       	sbrc	r24, 4
    64f8:	fc cf       	rjmp	.-8      	; 0x64f2 <twi_stop+0x6>
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/libraries/Wire/src/utility/twi.c:381
    continue;
  }

  // update twi state
  twi_state = TWI_READY;
    64fa:	10 92 bf 0a 	sts	0x0ABF, r1	; 0x800abf <twi_state>
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/libraries/Wire/src/utility/twi.c:382
}
    64fe:	08 95       	ret

00006500 <twi_releaseBus>:
twi_releaseBus():
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/libraries/Wire/src/utility/twi.c:393
 * Output   none
 */
void twi_releaseBus(void)
{
  // release bus
  TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWEA) | _BV(TWINT);
    6500:	85 ec       	ldi	r24, 0xC5	; 197
    6502:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/libraries/Wire/src/utility/twi.c:396

  // update twi state
  twi_state = TWI_READY;
    6506:	10 92 bf 0a 	sts	0x0ABF, r1	; 0x800abf <twi_state>
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/libraries/Wire/src/utility/twi.c:397
}
    650a:	08 95       	ret

0000650c <__vector_26>:
__vector_26():
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/libraries/Wire/src/utility/twi.c:400

ISR(TWI_vect)
{
    650c:	1f 92       	push	r1
    650e:	0f 92       	push	r0
    6510:	0f b6       	in	r0, 0x3f	; 63
    6512:	0f 92       	push	r0
    6514:	11 24       	eor	r1, r1
    6516:	0b b6       	in	r0, 0x3b	; 59
    6518:	0f 92       	push	r0
    651a:	2f 93       	push	r18
    651c:	3f 93       	push	r19
    651e:	4f 93       	push	r20
    6520:	5f 93       	push	r21
    6522:	6f 93       	push	r22
    6524:	7f 93       	push	r23
    6526:	8f 93       	push	r24
    6528:	9f 93       	push	r25
    652a:	af 93       	push	r26
    652c:	bf 93       	push	r27
    652e:	ef 93       	push	r30
    6530:	ff 93       	push	r31
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/libraries/Wire/src/utility/twi.c:401
  switch(TW_STATUS){
    6532:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
    6536:	88 7f       	andi	r24, 0xF8	; 248
    6538:	80 36       	cpi	r24, 0x60	; 96
    653a:	09 f4       	brne	.+2      	; 0x653e <__vector_26+0x32>
    653c:	4e c0       	rjmp	.+156    	; 0x65da <__vector_26+0xce>
    653e:	08 f0       	brcs	.+2      	; 0x6542 <__vector_26+0x36>
    6540:	41 c0       	rjmp	.+130    	; 0x65c4 <__vector_26+0xb8>
    6542:	88 32       	cpi	r24, 0x28	; 40
    6544:	09 f4       	brne	.+2      	; 0x6548 <__vector_26+0x3c>
    6546:	aa c0       	rjmp	.+340    	; 0x669c <__vector_26+0x190>
    6548:	28 f5       	brcc	.+74     	; 0x6594 <__vector_26+0x88>
    654a:	80 31       	cpi	r24, 0x10	; 16
    654c:	09 f4       	brne	.+2      	; 0x6550 <__vector_26+0x44>
    654e:	9e c0       	rjmp	.+316    	; 0x668c <__vector_26+0x180>
    6550:	c8 f4       	brcc	.+50     	; 0x6584 <__vector_26+0x78>
    6552:	88 23       	and	r24, r24
    6554:	09 f4       	brne	.+2      	; 0x6558 <__vector_26+0x4c>
    6556:	fb c0       	rjmp	.+502    	; 0x674e <__vector_26+0x242>
    6558:	88 30       	cpi	r24, 0x08	; 8
    655a:	09 f4       	brne	.+2      	; 0x655e <__vector_26+0x52>
    655c:	97 c0       	rjmp	.+302    	; 0x668c <__vector_26+0x180>
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/libraries/Wire/src/utility/twi.c:562
    case TW_BUS_ERROR: // bus error, illegal stop/start
      twi_error = TW_BUS_ERROR;
      twi_stop();
      break;
  }
}
    655e:	ff 91       	pop	r31
    6560:	ef 91       	pop	r30
    6562:	bf 91       	pop	r27
    6564:	af 91       	pop	r26
    6566:	9f 91       	pop	r25
    6568:	8f 91       	pop	r24
    656a:	7f 91       	pop	r23
    656c:	6f 91       	pop	r22
    656e:	5f 91       	pop	r21
    6570:	4f 91       	pop	r20
    6572:	3f 91       	pop	r19
    6574:	2f 91       	pop	r18
    6576:	0f 90       	pop	r0
    6578:	0b be       	out	0x3b, r0	; 59
    657a:	0f 90       	pop	r0
    657c:	0f be       	out	0x3f, r0	; 63
    657e:	0f 90       	pop	r0
    6580:	1f 90       	pop	r1
    6582:	18 95       	reti
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/libraries/Wire/src/utility/twi.c:401
  twi_state = TWI_READY;
}

ISR(TWI_vect)
{
  switch(TW_STATUS){
    6584:	88 31       	cpi	r24, 0x18	; 24
    6586:	09 f4       	brne	.+2      	; 0x658a <__vector_26+0x7e>
    6588:	89 c0       	rjmp	.+274    	; 0x669c <__vector_26+0x190>
    658a:	80 32       	cpi	r24, 0x20	; 32
    658c:	41 f7       	brne	.-48     	; 0x655e <__vector_26+0x52>
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/libraries/Wire/src/utility/twi.c:436
    case TW_MT_SLA_NACK:  // address sent, nack received
      twi_error = TW_MT_SLA_NACK;
      twi_stop();
      break;
    case TW_MT_DATA_NACK: // data sent, nack received
      twi_error = TW_MT_DATA_NACK;
    658e:	80 93 52 0a 	sts	0x0A52, r24	; 0x800a52 <twi_error>
    6592:	15 c0       	rjmp	.+42     	; 0x65be <__vector_26+0xb2>
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/libraries/Wire/src/utility/twi.c:401
  twi_state = TWI_READY;
}

ISR(TWI_vect)
{
  switch(TW_STATUS){
    6594:	80 34       	cpi	r24, 0x40	; 64
    6596:	09 f4       	brne	.+2      	; 0x659a <__vector_26+0x8e>
    6598:	9e c0       	rjmp	.+316    	; 0x66d6 <__vector_26+0x1ca>
    659a:	48 f4       	brcc	.+18     	; 0x65ae <__vector_26+0xa2>
    659c:	80 33       	cpi	r24, 0x30	; 48
    659e:	b9 f3       	breq	.-18     	; 0x658e <__vector_26+0x82>
    65a0:	88 33       	cpi	r24, 0x38	; 56
    65a2:	e9 f6       	brne	.-70     	; 0x655e <__vector_26+0x52>
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/libraries/Wire/src/utility/twi.c:440
    case TW_MT_DATA_NACK: // data sent, nack received
      twi_error = TW_MT_DATA_NACK;
      twi_stop();
      break;
    case TW_MT_ARB_LOST: // lost bus arbitration
      twi_error = TW_MT_ARB_LOST;
    65a4:	80 93 52 0a 	sts	0x0A52, r24	; 0x800a52 <twi_error>
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/libraries/Wire/src/utility/twi.c:441
      twi_releaseBus();
    65a8:	0e 94 80 32 	call	0x6500	; 0x6500 <twi_releaseBus>
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/libraries/Wire/src/utility/twi.c:442
      break;
    65ac:	d8 cf       	rjmp	.-80     	; 0x655e <__vector_26+0x52>
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/libraries/Wire/src/utility/twi.c:401
  twi_state = TWI_READY;
}

ISR(TWI_vect)
{
  switch(TW_STATUS){
    65ae:	80 35       	cpi	r24, 0x50	; 80
    65b0:	09 f4       	brne	.+2      	; 0x65b4 <__vector_26+0xa8>
    65b2:	85 c0       	rjmp	.+266    	; 0x66be <__vector_26+0x1b2>
    65b4:	88 35       	cpi	r24, 0x58	; 88
    65b6:	09 f4       	brne	.+2      	; 0x65ba <__vector_26+0xae>
    65b8:	96 c0       	rjmp	.+300    	; 0x66e6 <__vector_26+0x1da>
    65ba:	88 34       	cpi	r24, 0x48	; 72
    65bc:	81 f6       	brne	.-96     	; 0x655e <__vector_26+0x52>
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/libraries/Wire/src/utility/twi.c:559
    // All
    case TW_NO_INFO:   // no state information
      break;
    case TW_BUS_ERROR: // bus error, illegal stop/start
      twi_error = TW_BUS_ERROR;
      twi_stop();
    65be:	0e 94 76 32 	call	0x64ec	; 0x64ec <twi_stop>
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/libraries/Wire/src/utility/twi.c:562
      break;
  }
}
    65c2:	cd cf       	rjmp	.-102    	; 0x655e <__vector_26+0x52>
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/libraries/Wire/src/utility/twi.c:401
  twi_state = TWI_READY;
}

ISR(TWI_vect)
{
  switch(TW_STATUS){
    65c4:	88 39       	cpi	r24, 0x98	; 152
    65c6:	09 f4       	brne	.+2      	; 0x65ca <__vector_26+0xbe>
    65c8:	8c c0       	rjmp	.+280    	; 0x66e2 <__vector_26+0x1d6>
    65ca:	38 f5       	brcc	.+78     	; 0x661a <__vector_26+0x10e>
    65cc:	88 37       	cpi	r24, 0x78	; 120
    65ce:	29 f0       	breq	.+10     	; 0x65da <__vector_26+0xce>
    65d0:	50 f4       	brcc	.+20     	; 0x65e6 <__vector_26+0xda>
    65d2:	88 36       	cpi	r24, 0x68	; 104
    65d4:	11 f0       	breq	.+4      	; 0x65da <__vector_26+0xce>
    65d6:	80 37       	cpi	r24, 0x70	; 112
    65d8:	11 f6       	brne	.-124    	; 0x655e <__vector_26+0x52>
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/libraries/Wire/src/utility/twi.c:482
    case TW_SR_SLA_ACK:   // addressed, returned ack
    case TW_SR_GCALL_ACK: // addressed generally, returned ack
    case TW_SR_ARB_LOST_SLA_ACK:   // lost arbitration, returned ack
    case TW_SR_ARB_LOST_GCALL_ACK: // lost arbitration, returned ack
      // enter slave receiver mode
      twi_state = TWI_SRX;
    65da:	83 e0       	ldi	r24, 0x03	; 3
    65dc:	80 93 bf 0a 	sts	0x0ABF, r24	; 0x800abf <twi_state>
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/libraries/Wire/src/utility/twi.c:484
      // indicate that rx buffer can be overwritten and ack
      twi_rxBufferIndex = 0;
    65e0:	10 92 53 0a 	sts	0x0A53, r1	; 0x800a53 <twi_rxBufferIndex>
    65e4:	57 c0       	rjmp	.+174    	; 0x6694 <__vector_26+0x188>
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/libraries/Wire/src/utility/twi.c:401
  twi_state = TWI_READY;
}

ISR(TWI_vect)
{
  switch(TW_STATUS){
    65e6:	88 38       	cpi	r24, 0x88	; 136
    65e8:	09 f4       	brne	.+2      	; 0x65ec <__vector_26+0xe0>
    65ea:	7b c0       	rjmp	.+246    	; 0x66e2 <__vector_26+0x1d6>
    65ec:	80 39       	cpi	r24, 0x90	; 144
    65ee:	19 f0       	breq	.+6      	; 0x65f6 <__vector_26+0xea>
    65f0:	80 38       	cpi	r24, 0x80	; 128
    65f2:	09 f0       	breq	.+2      	; 0x65f6 <__vector_26+0xea>
    65f4:	b4 cf       	rjmp	.-152    	; 0x655e <__vector_26+0x52>
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/libraries/Wire/src/utility/twi.c:490
      twi_reply(1);
      break;
    case TW_SR_DATA_ACK:       // data received, returned ack
    case TW_SR_GCALL_DATA_ACK: // data received generally, returned ack
      // if there is still room in the rx buffer
      if(twi_rxBufferIndex < TWI_BUFFER_SIZE){
    65f6:	80 91 53 0a 	lds	r24, 0x0A53	; 0x800a53 <twi_rxBufferIndex>
    65fa:	80 32       	cpi	r24, 0x20	; 32
    65fc:	08 f0       	brcs	.+2      	; 0x6600 <__vector_26+0xf4>
    65fe:	71 c0       	rjmp	.+226    	; 0x66e2 <__vector_26+0x1d6>
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/libraries/Wire/src/utility/twi.c:492
        // put byte in buffer and ack
        twi_rxBuffer[twi_rxBufferIndex++] = TWDR;
    6600:	e0 91 53 0a 	lds	r30, 0x0A53	; 0x800a53 <twi_rxBufferIndex>
    6604:	81 e0       	ldi	r24, 0x01	; 1
    6606:	8e 0f       	add	r24, r30
    6608:	80 93 53 0a 	sts	0x0A53, r24	; 0x800a53 <twi_rxBufferIndex>
    660c:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
    6610:	f0 e0       	ldi	r31, 0x00	; 0
    6612:	ec 5a       	subi	r30, 0xAC	; 172
    6614:	f5 4f       	sbci	r31, 0xF5	; 245
    6616:	80 83       	st	Z, r24
    6618:	3d c0       	rjmp	.+122    	; 0x6694 <__vector_26+0x188>
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/libraries/Wire/src/utility/twi.c:401
  twi_state = TWI_READY;
}

ISR(TWI_vect)
{
  switch(TW_STATUS){
    661a:	80 3b       	cpi	r24, 0xB0	; 176
    661c:	39 f0       	breq	.+14     	; 0x662c <__vector_26+0x120>
    661e:	e0 f4       	brcc	.+56     	; 0x6658 <__vector_26+0x14c>
    6620:	80 3a       	cpi	r24, 0xA0	; 160
    6622:	09 f4       	brne	.+2      	; 0x6626 <__vector_26+0x11a>
    6624:	79 c0       	rjmp	.+242    	; 0x6718 <__vector_26+0x20c>
    6626:	88 3a       	cpi	r24, 0xA8	; 168
    6628:	09 f0       	breq	.+2      	; 0x662c <__vector_26+0x120>
    662a:	99 cf       	rjmp	.-206    	; 0x655e <__vector_26+0x52>
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/libraries/Wire/src/utility/twi.c:521
    
    // Slave Transmitter
    case TW_ST_SLA_ACK:          // addressed, returned ack
    case TW_ST_ARB_LOST_SLA_ACK: // arbitration lost, returned ack
      // enter slave transmitter mode
      twi_state = TWI_STX;
    662c:	84 e0       	ldi	r24, 0x04	; 4
    662e:	80 93 bf 0a 	sts	0x0ABF, r24	; 0x800abf <twi_state>
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/libraries/Wire/src/utility/twi.c:523
      // ready the tx buffer index for iteration
      twi_txBufferIndex = 0;
    6632:	10 92 75 0a 	sts	0x0A75, r1	; 0x800a75 <twi_txBufferIndex>
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/libraries/Wire/src/utility/twi.c:525
      // set tx buffer length to be zero, to verify if user changes it
      twi_txBufferLength = 0;
    6636:	10 92 74 0a 	sts	0x0A74, r1	; 0x800a74 <twi_txBufferLength>
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/libraries/Wire/src/utility/twi.c:528
      // request for txBuffer to be filled and length to be set
      // note: user must call twi_transmit(bytes, length) to do this
      twi_onSlaveTransmit();
    663a:	e0 91 ba 0a 	lds	r30, 0x0ABA	; 0x800aba <twi_onSlaveTransmit>
    663e:	f0 91 bb 0a 	lds	r31, 0x0ABB	; 0x800abb <twi_onSlaveTransmit+0x1>
    6642:	09 95       	icall
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/libraries/Wire/src/utility/twi.c:530
      // if they didn't change buffer & length, initialize it
      if(0 == twi_txBufferLength){
    6644:	80 91 74 0a 	lds	r24, 0x0A74	; 0x800a74 <twi_txBufferLength>
    6648:	81 11       	cpse	r24, r1
    664a:	0f c0       	rjmp	.+30     	; 0x666a <__vector_26+0x15e>
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/libraries/Wire/src/utility/twi.c:531
        twi_txBufferLength = 1;
    664c:	81 e0       	ldi	r24, 0x01	; 1
    664e:	80 93 74 0a 	sts	0x0A74, r24	; 0x800a74 <twi_txBufferLength>
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/libraries/Wire/src/utility/twi.c:532
        twi_txBuffer[0] = 0x00;
    6652:	10 92 76 0a 	sts	0x0A76, r1	; 0x800a76 <twi_txBuffer>
    6656:	09 c0       	rjmp	.+18     	; 0x666a <__vector_26+0x15e>
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/libraries/Wire/src/utility/twi.c:401
  twi_state = TWI_READY;
}

ISR(TWI_vect)
{
  switch(TW_STATUS){
    6658:	80 3c       	cpi	r24, 0xC0	; 192
    665a:	09 f4       	brne	.+2      	; 0x665e <__vector_26+0x152>
    665c:	76 c0       	rjmp	.+236    	; 0x674a <__vector_26+0x23e>
    665e:	88 3c       	cpi	r24, 0xC8	; 200
    6660:	09 f4       	brne	.+2      	; 0x6664 <__vector_26+0x158>
    6662:	73 c0       	rjmp	.+230    	; 0x674a <__vector_26+0x23e>
    6664:	88 3b       	cpi	r24, 0xB8	; 184
    6666:	09 f0       	breq	.+2      	; 0x666a <__vector_26+0x15e>
    6668:	7a cf       	rjmp	.-268    	; 0x655e <__vector_26+0x52>
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/libraries/Wire/src/utility/twi.c:538
      }
      // transmit first byte from buffer, fall
      /* fall through */
    case TW_ST_DATA_ACK: // byte sent, ack returned
      // copy data to output register
      TWDR = twi_txBuffer[twi_txBufferIndex++];
    666a:	e0 91 75 0a 	lds	r30, 0x0A75	; 0x800a75 <twi_txBufferIndex>
    666e:	81 e0       	ldi	r24, 0x01	; 1
    6670:	8e 0f       	add	r24, r30
    6672:	80 93 75 0a 	sts	0x0A75, r24	; 0x800a75 <twi_txBufferIndex>
    6676:	f0 e0       	ldi	r31, 0x00	; 0
    6678:	ea 58       	subi	r30, 0x8A	; 138
    667a:	f5 4f       	sbci	r31, 0xF5	; 245
    667c:	80 81       	ld	r24, Z
    667e:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/libraries/Wire/src/utility/twi.c:540
      // if there is more to send, ack, otherwise nack
      if(twi_txBufferIndex < twi_txBufferLength){
    6682:	90 91 75 0a 	lds	r25, 0x0A75	; 0x800a75 <twi_txBufferIndex>
    6686:	80 91 74 0a 	lds	r24, 0x0A74	; 0x800a74 <twi_txBufferLength>
    668a:	29 c0       	rjmp	.+82     	; 0x66de <__vector_26+0x1d2>
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/libraries/Wire/src/utility/twi.c:406
  switch(TW_STATUS){
    // All Master
    case TW_START:     // sent start condition
    case TW_REP_START: // sent repeated start condition
      // copy device address and r/w bit to output register and ack
      TWDR = twi_slarw;
    668c:	80 91 be 0a 	lds	r24, 0x0ABE	; 0x800abe <twi_slarw>
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/libraries/Wire/src/utility/twi.c:416
    case TW_MT_SLA_ACK:  // slave receiver acked address
    case TW_MT_DATA_ACK: // slave receiver acked data
      // if there is data to send, send it, otherwise stop 
      if(twi_masterBufferIndex < twi_masterBufferLength){
        // copy data to output register and ack
        TWDR = twi_masterBuffer[twi_masterBufferIndex++];
    6690:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
twi_reply():
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/libraries/Wire/src/utility/twi.c:357
 */
void twi_reply(uint8_t ack)
{
  // transmit master read ready signal, with or without ack
  if(ack){
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT) | _BV(TWEA);
    6694:	85 ec       	ldi	r24, 0xC5	; 197
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/libraries/Wire/src/utility/twi.c:359
  }else{
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT);
    6696:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    669a:	61 cf       	rjmp	.-318    	; 0x655e <__vector_26+0x52>
__vector_26():
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/libraries/Wire/src/utility/twi.c:414

    // Master Transmitter
    case TW_MT_SLA_ACK:  // slave receiver acked address
    case TW_MT_DATA_ACK: // slave receiver acked data
      // if there is data to send, send it, otherwise stop 
      if(twi_masterBufferIndex < twi_masterBufferLength){
    669c:	90 91 97 0a 	lds	r25, 0x0A97	; 0x800a97 <twi_masterBufferIndex>
    66a0:	80 91 96 0a 	lds	r24, 0x0A96	; 0x800a96 <twi_masterBufferLength>
    66a4:	98 17       	cp	r25, r24
    66a6:	58 f5       	brcc	.+86     	; 0x66fe <__vector_26+0x1f2>
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/libraries/Wire/src/utility/twi.c:416
        // copy data to output register and ack
        TWDR = twi_masterBuffer[twi_masterBufferIndex++];
    66a8:	e0 91 97 0a 	lds	r30, 0x0A97	; 0x800a97 <twi_masterBufferIndex>
    66ac:	81 e0       	ldi	r24, 0x01	; 1
    66ae:	8e 0f       	add	r24, r30
    66b0:	80 93 97 0a 	sts	0x0A97, r24	; 0x800a97 <twi_masterBufferIndex>
    66b4:	f0 e0       	ldi	r31, 0x00	; 0
    66b6:	e8 56       	subi	r30, 0x68	; 104
    66b8:	f5 4f       	sbci	r31, 0xF5	; 245
    66ba:	80 81       	ld	r24, Z
    66bc:	e9 cf       	rjmp	.-46     	; 0x6690 <__vector_26+0x184>
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/libraries/Wire/src/utility/twi.c:447
      break;

    // Master Receiver
    case TW_MR_DATA_ACK: // data received, ack sent
      // put byte into buffer
      twi_masterBuffer[twi_masterBufferIndex++] = TWDR;
    66be:	e0 91 97 0a 	lds	r30, 0x0A97	; 0x800a97 <twi_masterBufferIndex>
    66c2:	81 e0       	ldi	r24, 0x01	; 1
    66c4:	8e 0f       	add	r24, r30
    66c6:	80 93 97 0a 	sts	0x0A97, r24	; 0x800a97 <twi_masterBufferIndex>
    66ca:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
    66ce:	f0 e0       	ldi	r31, 0x00	; 0
    66d0:	e8 56       	subi	r30, 0x68	; 104
    66d2:	f5 4f       	sbci	r31, 0xF5	; 245
    66d4:	80 83       	st	Z, r24
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/libraries/Wire/src/utility/twi.c:451
      /* fall through */
    case TW_MR_SLA_ACK:  // address sent, ack received
      // ack if more bytes are expected, otherwise nack
      if(twi_masterBufferIndex < twi_masterBufferLength){
    66d6:	90 91 97 0a 	lds	r25, 0x0A97	; 0x800a97 <twi_masterBufferIndex>
    66da:	80 91 96 0a 	lds	r24, 0x0A96	; 0x800a96 <twi_masterBufferLength>
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/libraries/Wire/src/utility/twi.c:540
      /* fall through */
    case TW_ST_DATA_ACK: // byte sent, ack returned
      // copy data to output register
      TWDR = twi_txBuffer[twi_txBufferIndex++];
      // if there is more to send, ack, otherwise nack
      if(twi_txBufferIndex < twi_txBufferLength){
    66de:	98 17       	cp	r25, r24
    66e0:	c8 f2       	brcs	.-78     	; 0x6694 <__vector_26+0x188>
twi_reply():
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/libraries/Wire/src/utility/twi.c:359
{
  // transmit master read ready signal, with or without ack
  if(ack){
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT) | _BV(TWEA);
  }else{
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT);
    66e2:	85 e8       	ldi	r24, 0x85	; 133
    66e4:	d8 cf       	rjmp	.-80     	; 0x6696 <__vector_26+0x18a>
__vector_26():
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/libraries/Wire/src/utility/twi.c:459
        twi_reply(0);
      }
      break;
    case TW_MR_DATA_NACK: // data received, nack sent
      // put final byte into buffer
      twi_masterBuffer[twi_masterBufferIndex++] = TWDR;
    66e6:	e0 91 97 0a 	lds	r30, 0x0A97	; 0x800a97 <twi_masterBufferIndex>
    66ea:	81 e0       	ldi	r24, 0x01	; 1
    66ec:	8e 0f       	add	r24, r30
    66ee:	80 93 97 0a 	sts	0x0A97, r24	; 0x800a97 <twi_masterBufferIndex>
    66f2:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
    66f6:	f0 e0       	ldi	r31, 0x00	; 0
    66f8:	e8 56       	subi	r30, 0x68	; 104
    66fa:	f5 4f       	sbci	r31, 0xF5	; 245
    66fc:	80 83       	st	Z, r24
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/libraries/Wire/src/utility/twi.c:460
  if (twi_sendStop)
    66fe:	80 91 bd 0a 	lds	r24, 0x0ABD	; 0x800abd <twi_sendStop>
    6702:	81 11       	cpse	r24, r1
    6704:	5c cf       	rjmp	.-328    	; 0x65be <__vector_26+0xb2>
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/libraries/Wire/src/utility/twi.c:463
          twi_stop();
  else {
    twi_inRepStart = true;  // we're gonna send the START
    6706:	81 e0       	ldi	r24, 0x01	; 1
    6708:	80 93 bc 0a 	sts	0x0ABC, r24	; 0x800abc <twi_inRepStart>
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/libraries/Wire/src/utility/twi.c:467
    // don't enable the interrupt. We'll generate the start, but we 
    // avoid handling the interrupt until we're in the next transaction,
    // at the point where we would normally issue the start.
    TWCR = _BV(TWINT) | _BV(TWSTA)| _BV(TWEN) ;
    670c:	84 ea       	ldi	r24, 0xA4	; 164
twi_reply():
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/libraries/Wire/src/utility/twi.c:357
 */
void twi_reply(uint8_t ack)
{
  // transmit master read ready signal, with or without ack
  if(ack){
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT) | _BV(TWEA);
    670e:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
__vector_26():
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/libraries/Wire/src/utility/twi.c:551
    case TW_ST_DATA_NACK: // received nack, we are done 
    case TW_ST_LAST_DATA: // received ack, but we are done already!
      // ack future responses
      twi_reply(1);
      // leave slave receiver state
      twi_state = TWI_READY;
    6712:	10 92 bf 0a 	sts	0x0ABF, r1	; 0x800abf <twi_state>
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/libraries/Wire/src/utility/twi.c:552
      break;
    6716:	23 cf       	rjmp	.-442    	; 0x655e <__vector_26+0x52>
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/libraries/Wire/src/utility/twi.c:501
        twi_reply(0);
      }
      break;
    case TW_SR_STOP: // stop or repeated start condition received
      // ack future responses and leave slave receiver state
      twi_releaseBus();
    6718:	0e 94 80 32 	call	0x6500	; 0x6500 <twi_releaseBus>
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/libraries/Wire/src/utility/twi.c:503
      // put a null char after data if there's room
      if(twi_rxBufferIndex < TWI_BUFFER_SIZE){
    671c:	80 91 53 0a 	lds	r24, 0x0A53	; 0x800a53 <twi_rxBufferIndex>
    6720:	80 32       	cpi	r24, 0x20	; 32
    6722:	30 f4       	brcc	.+12     	; 0x6730 <__vector_26+0x224>
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/libraries/Wire/src/utility/twi.c:504
        twi_rxBuffer[twi_rxBufferIndex] = '\0';
    6724:	e0 91 53 0a 	lds	r30, 0x0A53	; 0x800a53 <twi_rxBufferIndex>
    6728:	f0 e0       	ldi	r31, 0x00	; 0
    672a:	ec 5a       	subi	r30, 0xAC	; 172
    672c:	f5 4f       	sbci	r31, 0xF5	; 245
    672e:	10 82       	st	Z, r1
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/libraries/Wire/src/utility/twi.c:507
      }
      // callback to user defined callback
      twi_onSlaveReceive(twi_rxBuffer, twi_rxBufferIndex);
    6730:	60 91 53 0a 	lds	r22, 0x0A53	; 0x800a53 <twi_rxBufferIndex>
    6734:	70 e0       	ldi	r23, 0x00	; 0
    6736:	e0 91 b8 0a 	lds	r30, 0x0AB8	; 0x800ab8 <twi_onSlaveReceive>
    673a:	f0 91 b9 0a 	lds	r31, 0x0AB9	; 0x800ab9 <twi_onSlaveReceive+0x1>
    673e:	84 e5       	ldi	r24, 0x54	; 84
    6740:	9a e0       	ldi	r25, 0x0A	; 10
    6742:	09 95       	icall
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/libraries/Wire/src/utility/twi.c:509
      // since we submit rx buffer to "wire" library, we can reset it
      twi_rxBufferIndex = 0;
    6744:	10 92 53 0a 	sts	0x0A53, r1	; 0x800a53 <twi_rxBufferIndex>
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/libraries/Wire/src/utility/twi.c:510
      break;
    6748:	0a cf       	rjmp	.-492    	; 0x655e <__vector_26+0x52>
twi_reply():
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/libraries/Wire/src/utility/twi.c:357
 */
void twi_reply(uint8_t ack)
{
  // transmit master read ready signal, with or without ack
  if(ack){
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT) | _BV(TWEA);
    674a:	85 ec       	ldi	r24, 0xC5	; 197
    674c:	e0 cf       	rjmp	.-64     	; 0x670e <__vector_26+0x202>
__vector_26():
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/libraries/Wire/src/utility/twi.c:558

    // All
    case TW_NO_INFO:   // no state information
      break;
    case TW_BUS_ERROR: // bus error, illegal stop/start
      twi_error = TW_BUS_ERROR;
    674e:	10 92 52 0a 	sts	0x0A52, r1	; 0x800a52 <twi_error>
    6752:	35 cf       	rjmp	.-406    	; 0x65be <__vector_26+0xb2>

00006754 <MD_DS1307::init()>:
_ZN9MD_DS13074initEv():
/Users/DS 1/Documents/Arduino/libraries/MD_DS1307/src/MD_DS1307.cpp:196
{
  static int t[] = {0, 3, 2, 5, 0, 3, 5, 1, 4, 6, 2, 4};
    
  yyyy -= mm < 3;
  return ((yyyy + yyyy/4 - yyyy/100 + yyyy/400 + t[mm-1] + dd) % 7) + 1;
}
    6754:	fc 01       	movw	r30, r24
    6756:	13 82       	std	Z+3, r1	; 0x03
    6758:	12 82       	std	Z+2, r1	; 0x02
    675a:	11 82       	std	Z+1, r1	; 0x01
    675c:	10 82       	st	Z, r1
    675e:	16 82       	std	Z+6, r1	; 0x06
    6760:	15 82       	std	Z+5, r1	; 0x05
    6762:	14 82       	std	Z+4, r1	; 0x04
    6764:	17 82       	std	Z+7, r1	; 0x07
    6766:	08 95       	ret

00006768 <MD_DS1307::MD_DS1307()>:
_ZN9MD_DS1307C2Ev():
    6768:	0e 94 aa 33 	call	0x6754	; 0x6754 <MD_DS1307::init()>
    676c:	8c ef       	ldi	r24, 0xFC	; 252
    676e:	99 e0       	ldi	r25, 0x09	; 9
    6770:	0c 94 74 31 	jmp	0x62e8	; 0x62e8 <TwoWire::begin()>

00006774 <_GLOBAL__sub_I_RTC>:
_GLOBAL__sub_I_RTC():
/Users/DS 1/Documents/Arduino/libraries/MD_DS1307/src/MD_DS1307.cpp:14
  version 2.1 of the License, or (at your option) any later version.
 */
#include "MD_DS1307.h"
#include <Wire.h>

class MD_DS1307 RTC;  // one instance created when library is included
    6774:	80 ec       	ldi	r24, 0xC0	; 192
    6776:	9a e0       	ldi	r25, 0x0A	; 10
    6778:	0c 94 b4 33 	jmp	0x6768	; 0x6768 <MD_DS1307::MD_DS1307()>

0000677c <MD_DS1307::writeDevice(unsigned char, unsigned char*, unsigned char)>:
_ZN9MD_DS130711writeDeviceEhPhh():
/Users/DS 1/Documents/Arduino/libraries/MD_DS1307/src/MD_DS1307.cpp:75

  return(len);
}

uint8_t MD_DS1307::writeDevice(uint8_t addr, uint8_t* buf, uint8_t len)
{
    677c:	ef 92       	push	r14
    677e:	ff 92       	push	r15
    6780:	1f 93       	push	r17
    6782:	cf 93       	push	r28
    6784:	df 93       	push	r29
    6786:	c6 2f       	mov	r28, r22
    6788:	7a 01       	movw	r14, r20
    678a:	12 2f       	mov	r17, r18
/Users/DS 1/Documents/Arduino/libraries/MD_DS1307/src/MD_DS1307.cpp:76
  Wire.beginTransmission(DS1307_ID);
    678c:	68 e6       	ldi	r22, 0x68	; 104
    678e:	70 e0       	ldi	r23, 0x00	; 0
    6790:	8c ef       	ldi	r24, 0xFC	; 252
    6792:	99 e0       	ldi	r25, 0x09	; 9
    6794:	0e 94 94 31 	call	0x6328	; 0x6328 <TwoWire::beginTransmission(int)>
/Users/DS 1/Documents/Arduino/libraries/MD_DS1307/src/MD_DS1307.cpp:77
  Wire.write(addr);             // set register address                  
    6798:	6c 2f       	mov	r22, r28
    679a:	8c ef       	ldi	r24, 0xFC	; 252
    679c:	99 e0       	ldi	r25, 0x09	; 9
    679e:	0e 94 18 31 	call	0x6230	; 0x6230 <TwoWire::write(unsigned char)>
    67a2:	e7 01       	movw	r28, r14
    67a4:	e1 0e       	add	r14, r17
    67a6:	f1 1c       	adc	r15, r1
/Users/DS 1/Documents/Arduino/libraries/MD_DS1307/src/MD_DS1307.cpp:78 (discriminator 3)
  for (uint8_t i=0; i<len; i++) // Send x data from given address upwards...
    67a8:	ce 15       	cp	r28, r14
    67aa:	df 05       	cpc	r29, r15
    67ac:	31 f0       	breq	.+12     	; 0x67ba <MD_DS1307::writeDevice(unsigned char, unsigned char*, unsigned char)+0x3e>
/Users/DS 1/Documents/Arduino/libraries/MD_DS1307/src/MD_DS1307.cpp:80 (discriminator 2)
  {
    Wire.write(buf[i]);         // ... and send it from buffer
    67ae:	69 91       	ld	r22, Y+
    67b0:	8c ef       	ldi	r24, 0xFC	; 252
    67b2:	99 e0       	ldi	r25, 0x09	; 9
    67b4:	0e 94 18 31 	call	0x6230	; 0x6230 <TwoWire::write(unsigned char)>
/Users/DS 1/Documents/Arduino/libraries/MD_DS1307/src/MD_DS1307.cpp:78 (discriminator 2)

uint8_t MD_DS1307::writeDevice(uint8_t addr, uint8_t* buf, uint8_t len)
{
  Wire.beginTransmission(DS1307_ID);
  Wire.write(addr);             // set register address                  
  for (uint8_t i=0; i<len; i++) // Send x data from given address upwards...
    67b8:	f7 cf       	rjmp	.-18     	; 0x67a8 <MD_DS1307::writeDevice(unsigned char, unsigned char*, unsigned char)+0x2c>
/Users/DS 1/Documents/Arduino/libraries/MD_DS1307/src/MD_DS1307.cpp:82
  {
    Wire.write(buf[i]);         // ... and send it from buffer
  }
  Wire.endTransmission();
    67ba:	8c ef       	ldi	r24, 0xFC	; 252
    67bc:	99 e0       	ldi	r25, 0x09	; 9
    67be:	0e 94 a9 31 	call	0x6352	; 0x6352 <TwoWire::endTransmission()>
/Users/DS 1/Documents/Arduino/libraries/MD_DS1307/src/MD_DS1307.cpp:85

  return(len);
}
    67c2:	81 2f       	mov	r24, r17
    67c4:	df 91       	pop	r29
    67c6:	cf 91       	pop	r28
    67c8:	1f 91       	pop	r17
    67ca:	ff 90       	pop	r15
    67cc:	ef 90       	pop	r14
    67ce:	08 95       	ret

000067d0 <MD_DS1307::writeRAM(unsigned char, unsigned char*, unsigned char)>:
_ZN9MD_DS13078writeRAMEhPhh():
/Users/DS 1/Documents/Arduino/libraries/MD_DS1307/src/MD_DS1307.cpp:181
uint8_t MD_DS1307::writeRAM(uint8_t addr, uint8_t* buf, uint8_t len)
// Write len bytes from buffer buf to the RTC, starting at address addr
// Writing addresses excludes the RTC registers, so valid addresses are 
// RAM_BASE_WRITE to DS1307_RAM_MAX
{
  if ((NULL == buf) || (addr < RAM_BASE_WRITE) || (len == 0) || (addr + len - 1 >= DS1307_RAM_MAX))
    67d0:	41 15       	cp	r20, r1
    67d2:	51 05       	cpc	r21, r1
    67d4:	69 f0       	breq	.+26     	; 0x67f0 <MD_DS1307::writeRAM(unsigned char, unsigned char*, unsigned char)+0x20>
/Users/DS 1/Documents/Arduino/libraries/MD_DS1307/src/MD_DS1307.cpp:181 (discriminator 1)
    67d6:	68 30       	cpi	r22, 0x08	; 8
    67d8:	58 f0       	brcs	.+22     	; 0x67f0 <MD_DS1307::writeRAM(unsigned char, unsigned char*, unsigned char)+0x20>
/Users/DS 1/Documents/Arduino/libraries/MD_DS1307/src/MD_DS1307.cpp:181 (discriminator 2)
    67da:	22 23       	and	r18, r18
    67dc:	49 f0       	breq	.+18     	; 0x67f0 <MD_DS1307::writeRAM(unsigned char, unsigned char*, unsigned char)+0x20>
/Users/DS 1/Documents/Arduino/libraries/MD_DS1307/src/MD_DS1307.cpp:181 (discriminator 3)
    67de:	a6 2f       	mov	r26, r22
    67e0:	a2 0f       	add	r26, r18
    67e2:	bb 27       	eor	r27, r27
    67e4:	bb 1f       	adc	r27, r27
    67e6:	a1 34       	cpi	r26, 0x41	; 65
    67e8:	b1 05       	cpc	r27, r1
    67ea:	14 f4       	brge	.+4      	; 0x67f0 <MD_DS1307::writeRAM(unsigned char, unsigned char*, unsigned char)+0x20>
/Users/DS 1/Documents/Arduino/libraries/MD_DS1307/src/MD_DS1307.cpp:184
    return(0);

  return(writeDevice(addr, buf, len));  // write all the data at once
    67ec:	0c 94 be 33 	jmp	0x677c	; 0x677c <MD_DS1307::writeDevice(unsigned char, unsigned char*, unsigned char)>
/Users/DS 1/Documents/Arduino/libraries/MD_DS1307/src/MD_DS1307.cpp:185
}
    67f0:	80 e0       	ldi	r24, 0x00	; 0
    67f2:	08 95       	ret

000067f4 <__vector_18>:
__vector_18():
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/wiring.c:939
    "   brne 1b"                     // 2 cycles
    : /* no outputs */
    : "w" (us)
  );
  // return = 4 cycles
}
    67f4:	1f 92       	push	r1
    67f6:	0f 92       	push	r0
    67f8:	0f b6       	in	r0, 0x3f	; 63
    67fa:	0f 92       	push	r0
    67fc:	11 24       	eor	r1, r1
    67fe:	2f 93       	push	r18
    6800:	3f 93       	push	r19
    6802:	8f 93       	push	r24
    6804:	9f 93       	push	r25
    6806:	af 93       	push	r26
    6808:	bf 93       	push	r27
    680a:	80 91 ce 0a 	lds	r24, 0x0ACE	; 0x800ace <timer0_millis>
    680e:	90 91 cf 0a 	lds	r25, 0x0ACF	; 0x800acf <timer0_millis+0x1>
    6812:	a0 91 d0 0a 	lds	r26, 0x0AD0	; 0x800ad0 <timer0_millis+0x2>
    6816:	b0 91 d1 0a 	lds	r27, 0x0AD1	; 0x800ad1 <timer0_millis+0x3>
    681a:	30 91 cd 0a 	lds	r19, 0x0ACD	; 0x800acd <timer0_fract>
    681e:	23 e0       	ldi	r18, 0x03	; 3
    6820:	23 0f       	add	r18, r19
    6822:	2d 37       	cpi	r18, 0x7D	; 125
    6824:	68 f1       	brcs	.+90     	; 0x6880 <__vector_18+0x8c>
    6826:	26 e8       	ldi	r18, 0x86	; 134
    6828:	23 0f       	add	r18, r19
    682a:	02 96       	adiw	r24, 0x02	; 2
    682c:	a1 1d       	adc	r26, r1
    682e:	b1 1d       	adc	r27, r1
    6830:	20 93 cd 0a 	sts	0x0ACD, r18	; 0x800acd <timer0_fract>
    6834:	80 93 ce 0a 	sts	0x0ACE, r24	; 0x800ace <timer0_millis>
    6838:	90 93 cf 0a 	sts	0x0ACF, r25	; 0x800acf <timer0_millis+0x1>
    683c:	a0 93 d0 0a 	sts	0x0AD0, r26	; 0x800ad0 <timer0_millis+0x2>
    6840:	b0 93 d1 0a 	sts	0x0AD1, r27	; 0x800ad1 <timer0_millis+0x3>
    6844:	80 91 c9 0a 	lds	r24, 0x0AC9	; 0x800ac9 <timer0_overflow_count>
    6848:	90 91 ca 0a 	lds	r25, 0x0ACA	; 0x800aca <timer0_overflow_count+0x1>
    684c:	a0 91 cb 0a 	lds	r26, 0x0ACB	; 0x800acb <timer0_overflow_count+0x2>
    6850:	b0 91 cc 0a 	lds	r27, 0x0ACC	; 0x800acc <timer0_overflow_count+0x3>
    6854:	01 96       	adiw	r24, 0x01	; 1
    6856:	a1 1d       	adc	r26, r1
    6858:	b1 1d       	adc	r27, r1
    685a:	80 93 c9 0a 	sts	0x0AC9, r24	; 0x800ac9 <timer0_overflow_count>
    685e:	90 93 ca 0a 	sts	0x0ACA, r25	; 0x800aca <timer0_overflow_count+0x1>
    6862:	a0 93 cb 0a 	sts	0x0ACB, r26	; 0x800acb <timer0_overflow_count+0x2>
    6866:	b0 93 cc 0a 	sts	0x0ACC, r27	; 0x800acc <timer0_overflow_count+0x3>
    686a:	bf 91       	pop	r27
    686c:	af 91       	pop	r26
    686e:	9f 91       	pop	r25
    6870:	8f 91       	pop	r24
    6872:	3f 91       	pop	r19
    6874:	2f 91       	pop	r18
    6876:	0f 90       	pop	r0
    6878:	0f be       	out	0x3f, r0	; 63
    687a:	0f 90       	pop	r0
    687c:	1f 90       	pop	r1
    687e:	18 95       	reti
    6880:	01 96       	adiw	r24, 0x01	; 1
    6882:	a1 1d       	adc	r26, r1
    6884:	b1 1d       	adc	r27, r1
    6886:	d4 cf       	rjmp	.-88     	; 0x6830 <__vector_18+0x3c>

00006888 <millis>:
millis():
    6888:	2f b7       	in	r18, 0x3f	; 63
    688a:	f8 94       	cli
    688c:	60 91 ce 0a 	lds	r22, 0x0ACE	; 0x800ace <timer0_millis>
    6890:	70 91 cf 0a 	lds	r23, 0x0ACF	; 0x800acf <timer0_millis+0x1>
    6894:	80 91 d0 0a 	lds	r24, 0x0AD0	; 0x800ad0 <timer0_millis+0x2>
    6898:	90 91 d1 0a 	lds	r25, 0x0AD1	; 0x800ad1 <timer0_millis+0x3>
    689c:	2f bf       	out	0x3f, r18	; 63
    689e:	08 95       	ret

000068a0 <micros>:
micros():
    68a0:	3f b7       	in	r19, 0x3f	; 63
    68a2:	f8 94       	cli
    68a4:	80 91 c9 0a 	lds	r24, 0x0AC9	; 0x800ac9 <timer0_overflow_count>
    68a8:	90 91 ca 0a 	lds	r25, 0x0ACA	; 0x800aca <timer0_overflow_count+0x1>
    68ac:	a0 91 cb 0a 	lds	r26, 0x0ACB	; 0x800acb <timer0_overflow_count+0x2>
    68b0:	b0 91 cc 0a 	lds	r27, 0x0ACC	; 0x800acc <timer0_overflow_count+0x3>
    68b4:	26 b5       	in	r18, 0x26	; 38
    68b6:	a8 9b       	sbis	0x15, 0	; 21
    68b8:	05 c0       	rjmp	.+10     	; 0x68c4 <micros+0x24>
    68ba:	2f 3f       	cpi	r18, 0xFF	; 255
    68bc:	19 f0       	breq	.+6      	; 0x68c4 <micros+0x24>
    68be:	01 96       	adiw	r24, 0x01	; 1
    68c0:	a1 1d       	adc	r26, r1
    68c2:	b1 1d       	adc	r27, r1
    68c4:	3f bf       	out	0x3f, r19	; 63
    68c6:	ba 2f       	mov	r27, r26
    68c8:	a9 2f       	mov	r26, r25
    68ca:	98 2f       	mov	r25, r24
    68cc:	88 27       	eor	r24, r24
    68ce:	bc 01       	movw	r22, r24
    68d0:	cd 01       	movw	r24, r26
    68d2:	62 0f       	add	r22, r18
    68d4:	71 1d       	adc	r23, r1
    68d6:	81 1d       	adc	r24, r1
    68d8:	91 1d       	adc	r25, r1
    68da:	42 e0       	ldi	r20, 0x02	; 2
    68dc:	66 0f       	add	r22, r22
    68de:	77 1f       	adc	r23, r23
    68e0:	88 1f       	adc	r24, r24
    68e2:	99 1f       	adc	r25, r25
    68e4:	4a 95       	dec	r20
    68e6:	d1 f7       	brne	.-12     	; 0x68dc <micros+0x3c>
    68e8:	08 95       	ret

000068ea <delay>:
delay():
    68ea:	8f 92       	push	r8
    68ec:	9f 92       	push	r9
    68ee:	af 92       	push	r10
    68f0:	bf 92       	push	r11
    68f2:	cf 92       	push	r12
    68f4:	df 92       	push	r13
    68f6:	ef 92       	push	r14
    68f8:	ff 92       	push	r15
    68fa:	6b 01       	movw	r12, r22
    68fc:	7c 01       	movw	r14, r24
    68fe:	0e 94 50 34 	call	0x68a0	; 0x68a0 <micros>
    6902:	4b 01       	movw	r8, r22
    6904:	5c 01       	movw	r10, r24
    6906:	c1 14       	cp	r12, r1
    6908:	d1 04       	cpc	r13, r1
    690a:	e1 04       	cpc	r14, r1
    690c:	f1 04       	cpc	r15, r1
    690e:	e9 f0       	breq	.+58     	; 0x694a <delay+0x60>
    6910:	0e 94 01 3a 	call	0x7402	; 0x7402 <yield>
    6914:	0e 94 50 34 	call	0x68a0	; 0x68a0 <micros>
    6918:	68 19       	sub	r22, r8
    691a:	79 09       	sbc	r23, r9
    691c:	8a 09       	sbc	r24, r10
    691e:	9b 09       	sbc	r25, r11
    6920:	68 3e       	cpi	r22, 0xE8	; 232
    6922:	73 40       	sbci	r23, 0x03	; 3
    6924:	81 05       	cpc	r24, r1
    6926:	91 05       	cpc	r25, r1
    6928:	70 f3       	brcs	.-36     	; 0x6906 <delay+0x1c>
    692a:	21 e0       	ldi	r18, 0x01	; 1
    692c:	c2 1a       	sub	r12, r18
    692e:	d1 08       	sbc	r13, r1
    6930:	e1 08       	sbc	r14, r1
    6932:	f1 08       	sbc	r15, r1
    6934:	88 ee       	ldi	r24, 0xE8	; 232
    6936:	88 0e       	add	r8, r24
    6938:	83 e0       	ldi	r24, 0x03	; 3
    693a:	98 1e       	adc	r9, r24
    693c:	a1 1c       	adc	r10, r1
    693e:	b1 1c       	adc	r11, r1
    6940:	c1 14       	cp	r12, r1
    6942:	d1 04       	cpc	r13, r1
    6944:	e1 04       	cpc	r14, r1
    6946:	f1 04       	cpc	r15, r1
    6948:	29 f7       	brne	.-54     	; 0x6914 <delay+0x2a>
    694a:	ff 90       	pop	r15
    694c:	ef 90       	pop	r14
    694e:	df 90       	pop	r13
    6950:	cf 90       	pop	r12
    6952:	bf 90       	pop	r11
    6954:	af 90       	pop	r10
    6956:	9f 90       	pop	r9
    6958:	8f 90       	pop	r8
    695a:	08 95       	ret

0000695c <init>:
init():
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/wiring.c:945

void init()
{
  // this needs to be called before setup() or some functions won't
  // work there
  sei();
    695c:	78 94       	sei
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/wiring.c:957

  // On the ATmega168, timer 0 is also used for fast hardware pwm
  // (using phase-correct PWM would mean that timer 0 overflowed half as often
  // resulting in different millis() behavior on the ATmega8 and ATmega168)
#if defined(TCCR0A) && defined(WGM01)
  TCCR0A |= _BV(WGM01) | _BV(WGM00);
    695e:	84 b5       	in	r24, 0x24	; 36
    6960:	83 60       	ori	r24, 0x03	; 3
    6962:	84 bd       	out	0x24, r24	; 36
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/wiring.c:972
  #if defined(WGM00) && defined(WGM01) // The ATmega8 doesn't have WGM00 and WGM01
    TCCR0 |= _BV(WGM01) | _BV(WGM00);
  #endif
#elif defined(TCCR0B) && defined(CS01) && defined(CS00)
  // This combination is for the standard 168/328/640/1280/1281/2560/2561
  TCCR0B |= _BV(CS01) | _BV(CS00);
    6964:	85 b5       	in	r24, 0x25	; 37
    6966:	83 60       	ori	r24, 0x03	; 3
    6968:	85 bd       	out	0x25, r24	; 37
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/wiring.c:984

// Enable timer 0 overflow interrupt
#if defined(TIMSK) && defined(TOIE0)
  TIMSK |= _BV(TOIE0);
#elif defined(TIMSK0) && defined(TOIE0)
  TIMSK0 |= _BV(TOIE0);
    696a:	ee e6       	ldi	r30, 0x6E	; 110
    696c:	f0 e0       	ldi	r31, 0x00	; 0
    696e:	80 81       	ld	r24, Z
    6970:	81 60       	ori	r24, 0x01	; 1
    6972:	80 83       	st	Z, r24
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/wiring.c:995
// this is better for motors as it ensures an even waveform
// note, however, that fast pwm mode can achieve a frequency of up
// 8 MHz (with a 16 MHz clock) at 50% duty cycle

#if defined(TCCR1B) && defined(CS11) && defined(CS10)
  TCCR1B = _BV(CS11); // Set timer 1 prescale factor to 64
    6974:	e1 e8       	ldi	r30, 0x81	; 129
    6976:	f0 e0       	ldi	r31, 0x00	; 0
    6978:	82 e0       	ldi	r24, 0x02	; 2
    697a:	80 83       	st	Z, r24
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/wiring.c:997
#if F_CPU >= 8000000L
  TCCR1B |= _BV(CS10);
    697c:	80 81       	ld	r24, Z
    697e:	81 60       	ori	r24, 0x01	; 1
    6980:	80 83       	st	Z, r24
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/wiring.c:1006
#if F_CPU >= 8000000L
  TCCR1 |= _BV(CS10);
#endif
#endif
#if defined(TCCR1A) && defined(WGM10)
  TCCR1A |= _BV(WGM10); // Put timer 1 in 8-bit phase correct pwm mode
    6982:	e0 e8       	ldi	r30, 0x80	; 128
    6984:	f0 e0       	ldi	r31, 0x00	; 0
    6986:	80 81       	ld	r24, Z
    6988:	81 60       	ori	r24, 0x01	; 1
    698a:	80 83       	st	Z, r24
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/wiring.c:1013

// Set timer 2 prescale factor to 64
#if defined(TCCR2) && defined(CS22)
  TCCR2 |= _BV(CS22);
#elif defined(TCCR2B) && defined(CS22)
  TCCR2B |= _BV(CS22);
    698c:	e1 eb       	ldi	r30, 0xB1	; 177
    698e:	f0 e0       	ldi	r31, 0x00	; 0
    6990:	80 81       	ld	r24, Z
    6992:	84 60       	ori	r24, 0x04	; 4
    6994:	80 83       	st	Z, r24
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/wiring.c:1022

// Configure timer 2 for phase correct pwm (8-bit)
#if defined(TCCR2) && defined(WGM20)
  TCCR2 |= _BV(WGM20);
#elif defined(TCCR2A) && defined(WGM20)
  TCCR2A |= _BV(WGM20);
    6996:	e0 eb       	ldi	r30, 0xB0	; 176
    6998:	f0 e0       	ldi	r31, 0x00	; 0
    699a:	80 81       	ld	r24, Z
    699c:	81 60       	ori	r24, 0x01	; 1
    699e:	80 83       	st	Z, r24
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/wiring.c:1028
//#else
  // Timer 2 not finished (may not be present on this CPU)
#endif

#if defined(TCCR3B) && defined(CS31) && defined(WGM30)
  TCCR3B |= _BV(CS31) | _BV(CS30); // Set timer 3 prescale factor to 64
    69a0:	e1 e9       	ldi	r30, 0x91	; 145
    69a2:	f0 e0       	ldi	r31, 0x00	; 0
    69a4:	80 81       	ld	r24, Z
    69a6:	83 60       	ori	r24, 0x03	; 3
    69a8:	80 83       	st	Z, r24
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/wiring.c:1029
  TCCR3A |= _BV(WGM30);            // Put timer 3 in 8-bit phase correct pwm mode
    69aa:	e0 e9       	ldi	r30, 0x90	; 144
    69ac:	f0 e0       	ldi	r31, 0x00	; 0
    69ae:	80 81       	ld	r24, Z
    69b0:	81 60       	ori	r24, 0x01	; 1
    69b2:	80 83       	st	Z, r24
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/wiring.c:1050
#endif

#if defined(ADCSRA)
  // set a2d prescaler so we are inside the desired 50-200 KHz range.
  #if F_CPU >= 16000000 // 16 MHz / 128 = 125 KHz
    ADCSRA = _BV(ADPS2) | _BV(ADPS1) | _BV(ADPS0) | _BV(ADEN);
    69b4:	87 e8       	ldi	r24, 0x87	; 135
    69b6:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/wiring.c:1070
  // here so they can be used as normal digital i/o; they will be
  // reconnected in Serial.begin()
#if defined(UCSRB)
  UCSRB = 0;
#elif defined(UCSR0B)
  UCSR0B = 0;
    69ba:	10 92 c1 00 	sts	0x00C1, r1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/wiring.c:1072
#endif
}
    69be:	08 95       	ret

000069c0 <turnOffPWM>:
turnOffPWM():
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/wiring_digital.c:77
//
//static inline void turnOffPWM(uint8_t timer) __attribute__ ((always_inline));
//static inline void turnOffPWM(uint8_t timer)
static void turnOffPWM(uint8_t timer)
{
  switch (timer)
    69c0:	82 50       	subi	r24, 0x02	; 2
    69c2:	8a 30       	cpi	r24, 0x0A	; 10
    69c4:	88 f5       	brcc	.+98     	; 0x6a28 <turnOffPWM+0x68>
    69c6:	e8 2f       	mov	r30, r24
    69c8:	f0 e0       	ldi	r31, 0x00	; 0
    69ca:	e7 51       	subi	r30, 0x17	; 23
    69cc:	fb 4c       	sbci	r31, 0xCB	; 203
    69ce:	0c 94 43 3a 	jmp	0x7486	; 0x7486 <__tablejump2__>
    69d2:	11 35       	cpi	r17, 0x51	; 81
    69d4:	15 35       	cpi	r17, 0x55	; 85
    69d6:	f3 34       	cpi	r31, 0x43	; 67
    69d8:	f9 34       	cpi	r31, 0x49	; 73
    69da:	14 35       	cpi	r17, 0x54	; 84
    69dc:	14 35       	cpi	r17, 0x54	; 84
    69de:	fd 34       	cpi	r31, 0x4D	; 77
    69e0:	03 35       	cpi	r16, 0x53	; 83
    69e2:	07 35       	cpi	r16, 0x57	; 87
    69e4:	0d 35       	cpi	r16, 0x5D	; 93
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/wiring_digital.c:82
  {
    // Timer1
    #if defined(TCCR1A) && defined(COM1A1)
      case TIMER1A:
        TCCR1A &= ~_BV(COM1A1);
    69e6:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
    69ea:	8f 77       	andi	r24, 0x7F	; 127
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/wiring_digital.c:87
        break;
    #endif
    #if defined(TCCR1A) && defined(COM1B1)
      case TIMER1B:
        TCCR1A &= ~_BV(COM1B1);
    69ec:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/wiring_digital.c:88
        break;
    69f0:	08 95       	ret
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/wiring_digital.c:87
        TCCR1A &= ~_BV(COM1A1);
        break;
    #endif
    #if defined(TCCR1A) && defined(COM1B1)
      case TIMER1B:
        TCCR1A &= ~_BV(COM1B1);
    69f2:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
    69f6:	8f 7d       	andi	r24, 0xDF	; 223
    69f8:	f9 cf       	rjmp	.-14     	; 0x69ec <turnOffPWM+0x2c>
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/wiring_digital.c:104
        TCCR2 &= ~_BV(COM21);
        break;
    #endif
    #if defined(TCCR2A) && defined(COM2A1)
      case TIMER2A:
        TCCR2A &= ~_BV(COM2A1);
    69fa:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
    69fe:	8f 77       	andi	r24, 0x7F	; 127
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/wiring_digital.c:109
        break;
    #endif
    #if defined(TCCR2A) && defined(COM2B1)
      case TIMER2B:
        TCCR2A &= ~_BV(COM2B1);
    6a00:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/wiring_digital.c:110
        break;
    6a04:	08 95       	ret
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/wiring_digital.c:109
        TCCR2A &= ~_BV(COM2A1);
        break;
    #endif
    #if defined(TCCR2A) && defined(COM2B1)
      case TIMER2B:
        TCCR2A &= ~_BV(COM2B1);
    6a06:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
    6a0a:	8f 7d       	andi	r24, 0xDF	; 223
    6a0c:	f9 cf       	rjmp	.-14     	; 0x6a00 <turnOffPWM+0x40>
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/wiring_digital.c:116
    #endif

    // Timer3
    #if defined(TCCR3A) && defined(COM3A1)
      case TIMER3A:
        TCCR3A &= ~_BV(COM3A1);
    6a0e:	80 91 90 00 	lds	r24, 0x0090	; 0x800090 <__TEXT_REGION_LENGTH__+0x7e0090>
    6a12:	8f 77       	andi	r24, 0x7F	; 127
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/wiring_digital.c:121
        break;
    #endif
    #if defined(TCCR3A) && defined(COM3B1)
      case TIMER3B:
        TCCR3A &= ~_BV(COM3B1);
    6a14:	80 93 90 00 	sts	0x0090, r24	; 0x800090 <__TEXT_REGION_LENGTH__+0x7e0090>
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/wiring_digital.c:122
        break;
    6a18:	08 95       	ret
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/wiring_digital.c:121
        TCCR3A &= ~_BV(COM3A1);
        break;
    #endif
    #if defined(TCCR3A) && defined(COM3B1)
      case TIMER3B:
        TCCR3A &= ~_BV(COM3B1);
    6a1a:	80 91 90 00 	lds	r24, 0x0090	; 0x800090 <__TEXT_REGION_LENGTH__+0x7e0090>
    6a1e:	8f 7d       	andi	r24, 0xDF	; 223
    6a20:	f9 cf       	rjmp	.-14     	; 0x6a14 <turnOffPWM+0x54>
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/wiring_digital.c:176
        TCCR0 &= ~_BV(COM01);
        break;
    #endif
    #if defined(TCCR0A) && defined(COM0A1)
      case TIMER0A:
        TCCR0A &= ~_BV(COM0A1);
    6a22:	84 b5       	in	r24, 0x24	; 36
    6a24:	8f 77       	andi	r24, 0x7F	; 127
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/wiring_digital.c:181
        break;
    #endif
    #if defined(TCCR0A) && defined(COM0B1)
      case TIMER0B:
        TCCR0A &= ~_BV(COM0B1);
    6a26:	84 bd       	out	0x24, r24	; 36
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/wiring_digital.c:185
        break;
    #endif
  }
}
    6a28:	08 95       	ret
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/wiring_digital.c:181
        TCCR0A &= ~_BV(COM0A1);
        break;
    #endif
    #if defined(TCCR0A) && defined(COM0B1)
      case TIMER0B:
        TCCR0A &= ~_BV(COM0B1);
    6a2a:	84 b5       	in	r24, 0x24	; 36
    6a2c:	8f 7d       	andi	r24, 0xDF	; 223
    6a2e:	fb cf       	rjmp	.-10     	; 0x6a26 <turnOffPWM+0x66>

00006a30 <pinMode>:
pinMode():
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/wiring_digital.c:30
#define ARDUINO_MAIN
#include "wiring_private.h"
#include "pins_arduino.h"

void pinMode(uint8_t pin, uint8_t mode)
{
    6a30:	cf 93       	push	r28
    6a32:	df 93       	push	r29
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/wiring_digital.c:31
  uint8_t bit = digitalPinToBitMask(pin);
    6a34:	90 e0       	ldi	r25, 0x00	; 0
    6a36:	fc 01       	movw	r30, r24
    6a38:	e4 54       	subi	r30, 0x44	; 68
    6a3a:	fa 4f       	sbci	r31, 0xFA	; 250
    6a3c:	24 91       	lpm	r18, Z
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/wiring_digital.c:32
  uint8_t port = digitalPinToPort(pin);
    6a3e:	84 52       	subi	r24, 0x24	; 36
    6a40:	9a 4f       	sbci	r25, 0xFA	; 250
    6a42:	fc 01       	movw	r30, r24
    6a44:	84 91       	lpm	r24, Z
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/wiring_digital.c:35
  volatile uint8_t *reg, *out;

  if (port == NOT_A_PIN) return;
    6a46:	88 23       	and	r24, r24
    6a48:	c9 f0       	breq	.+50     	; 0x6a7c <pinMode+0x4c>
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/wiring_digital.c:38

  // JWS: can I let the optimizer do this?
  reg = portModeRegister(port);
    6a4a:	90 e0       	ldi	r25, 0x00	; 0
    6a4c:	88 0f       	add	r24, r24
    6a4e:	99 1f       	adc	r25, r25
    6a50:	fc 01       	movw	r30, r24
    6a52:	e0 5f       	subi	r30, 0xF0	; 240
    6a54:	f9 4f       	sbci	r31, 0xF9	; 249
    6a56:	a5 91       	lpm	r26, Z+
    6a58:	b4 91       	lpm	r27, Z
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/wiring_digital.c:39
  out = portOutputRegister(port);
    6a5a:	fc 01       	movw	r30, r24
    6a5c:	ea 5f       	subi	r30, 0xFA	; 250
    6a5e:	f9 4f       	sbci	r31, 0xF9	; 249
    6a60:	c5 91       	lpm	r28, Z+
    6a62:	d4 91       	lpm	r29, Z
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/wiring_digital.c:41

  if (mode == INPUT) { 
    6a64:	61 11       	cpse	r22, r1
    6a66:	0d c0       	rjmp	.+26     	; 0x6a82 <pinMode+0x52>
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/wiring_digital.c:42
    uint8_t oldSREG = SREG;
    6a68:	9f b7       	in	r25, 0x3f	; 63
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/wiring_digital.c:43
    cli();
    6a6a:	f8 94       	cli
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/wiring_digital.c:44
    *reg &= ~bit;
    6a6c:	8c 91       	ld	r24, X
    6a6e:	20 95       	com	r18
    6a70:	82 23       	and	r24, r18
    6a72:	8c 93       	st	X, r24
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/wiring_digital.c:45
    *out &= ~bit;
    6a74:	88 81       	ld	r24, Y
    6a76:	28 23       	and	r18, r24
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/wiring_digital.c:51
    SREG = oldSREG;
  } else if (mode == INPUT_PULLUP) {
    uint8_t oldSREG = SREG;
    cli();
    *reg &= ~bit;
    *out |= bit;
    6a78:	28 83       	st	Y, r18
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/wiring_digital.c:52
    SREG = oldSREG;
    6a7a:	9f bf       	out	0x3f, r25	; 63
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/wiring_digital.c:59
    uint8_t oldSREG = SREG;
    cli();
    *reg |= bit;
    SREG = oldSREG;
  }
}
    6a7c:	df 91       	pop	r29
    6a7e:	cf 91       	pop	r28
    6a80:	08 95       	ret
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/wiring_digital.c:47
    uint8_t oldSREG = SREG;
    cli();
    *reg &= ~bit;
    *out &= ~bit;
    SREG = oldSREG;
  } else if (mode == INPUT_PULLUP) {
    6a82:	62 30       	cpi	r22, 0x02	; 2
    6a84:	51 f4       	brne	.+20     	; 0x6a9a <pinMode+0x6a>
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/wiring_digital.c:48
    uint8_t oldSREG = SREG;
    6a86:	9f b7       	in	r25, 0x3f	; 63
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/wiring_digital.c:49
    cli();
    6a88:	f8 94       	cli
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/wiring_digital.c:50
    *reg &= ~bit;
    6a8a:	3c 91       	ld	r19, X
    6a8c:	82 2f       	mov	r24, r18
    6a8e:	80 95       	com	r24
    6a90:	83 23       	and	r24, r19
    6a92:	8c 93       	st	X, r24
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/wiring_digital.c:51
    *out |= bit;
    6a94:	e8 81       	ld	r30, Y
    6a96:	2e 2b       	or	r18, r30
    6a98:	ef cf       	rjmp	.-34     	; 0x6a78 <pinMode+0x48>
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/wiring_digital.c:54
    SREG = oldSREG;
  } else {
    uint8_t oldSREG = SREG;
    6a9a:	8f b7       	in	r24, 0x3f	; 63
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/wiring_digital.c:55
    cli();
    6a9c:	f8 94       	cli
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/wiring_digital.c:56
    *reg |= bit;
    6a9e:	ec 91       	ld	r30, X
    6aa0:	2e 2b       	or	r18, r30
    6aa2:	2c 93       	st	X, r18
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/wiring_digital.c:57
    SREG = oldSREG;
    6aa4:	8f bf       	out	0x3f, r24	; 63
    6aa6:	ea cf       	rjmp	.-44     	; 0x6a7c <pinMode+0x4c>

00006aa8 <digitalWrite>:
digitalWrite():
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/wiring_digital.c:188
    #endif
  }
}

void digitalWrite(uint8_t pin, uint8_t val)
{
    6aa8:	1f 93       	push	r17
    6aaa:	cf 93       	push	r28
    6aac:	df 93       	push	r29
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/wiring_digital.c:189
  uint8_t timer = digitalPinToTimer(pin);
    6aae:	28 2f       	mov	r18, r24
    6ab0:	30 e0       	ldi	r19, 0x00	; 0
    6ab2:	f9 01       	movw	r30, r18
    6ab4:	e4 56       	subi	r30, 0x64	; 100
    6ab6:	fa 4f       	sbci	r31, 0xFA	; 250
    6ab8:	84 91       	lpm	r24, Z
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/wiring_digital.c:190
  uint8_t bit = digitalPinToBitMask(pin);
    6aba:	f9 01       	movw	r30, r18
    6abc:	e4 54       	subi	r30, 0x44	; 68
    6abe:	fa 4f       	sbci	r31, 0xFA	; 250
    6ac0:	d4 91       	lpm	r29, Z
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/wiring_digital.c:191
  uint8_t port = digitalPinToPort(pin);
    6ac2:	f9 01       	movw	r30, r18
    6ac4:	e4 52       	subi	r30, 0x24	; 36
    6ac6:	fa 4f       	sbci	r31, 0xFA	; 250
    6ac8:	c4 91       	lpm	r28, Z
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/wiring_digital.c:194
  volatile uint8_t *out;

  if (port == NOT_A_PIN) return;
    6aca:	cc 23       	and	r28, r28
    6acc:	a9 f0       	breq	.+42     	; 0x6af8 <digitalWrite+0x50>
    6ace:	16 2f       	mov	r17, r22
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/wiring_digital.c:198

  // If the pin that support PWM output, we need to turn it off
  // before doing a digital write.
  if (timer != NOT_ON_TIMER) turnOffPWM(timer);
    6ad0:	81 11       	cpse	r24, r1
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/wiring_digital.c:198 (discriminator 1)
    6ad2:	0e 94 e0 34 	call	0x69c0	; 0x69c0 <turnOffPWM>
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/wiring_digital.c:200

  out = portOutputRegister(port);
    6ad6:	ec 2f       	mov	r30, r28
    6ad8:	f0 e0       	ldi	r31, 0x00	; 0
    6ada:	ee 0f       	add	r30, r30
    6adc:	ff 1f       	adc	r31, r31
    6ade:	ea 5f       	subi	r30, 0xFA	; 250
    6ae0:	f9 4f       	sbci	r31, 0xF9	; 249
    6ae2:	a5 91       	lpm	r26, Z+
    6ae4:	b4 91       	lpm	r27, Z
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/wiring_digital.c:202

  uint8_t oldSREG = SREG;
    6ae6:	8f b7       	in	r24, 0x3f	; 63
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/wiring_digital.c:203
  cli();
    6ae8:	f8 94       	cli
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/wiring_digital.c:206

  if (val == LOW) {
    *out &= ~bit;
    6aea:	ec 91       	ld	r30, X
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/wiring_digital.c:205
  out = portOutputRegister(port);

  uint8_t oldSREG = SREG;
  cli();

  if (val == LOW) {
    6aec:	11 11       	cpse	r17, r1
    6aee:	08 c0       	rjmp	.+16     	; 0x6b00 <digitalWrite+0x58>
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/wiring_digital.c:206
    *out &= ~bit;
    6af0:	d0 95       	com	r29
    6af2:	de 23       	and	r29, r30
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/wiring_digital.c:208
  } else {
    *out |= bit;
    6af4:	dc 93       	st	X, r29
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/wiring_digital.c:211
  }

  SREG = oldSREG;
    6af6:	8f bf       	out	0x3f, r24	; 63
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/wiring_digital.c:212
}
    6af8:	df 91       	pop	r29
    6afa:	cf 91       	pop	r28
    6afc:	1f 91       	pop	r17
    6afe:	08 95       	ret
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/wiring_digital.c:208
  cli();

  if (val == LOW) {
    *out &= ~bit;
  } else {
    *out |= bit;
    6b00:	de 2b       	or	r29, r30
    6b02:	f8 cf       	rjmp	.-16     	; 0x6af4 <digitalWrite+0x4c>

00006b04 <digitalRead>:
digitalRead():
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/wiring_digital.c:215

  SREG = oldSREG;
}

int digitalRead(uint8_t pin)
{
    6b04:	cf 93       	push	r28
    6b06:	df 93       	push	r29
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/wiring_digital.c:216
  uint8_t timer = digitalPinToTimer(pin);
    6b08:	28 2f       	mov	r18, r24
    6b0a:	30 e0       	ldi	r19, 0x00	; 0
    6b0c:	f9 01       	movw	r30, r18
    6b0e:	e4 56       	subi	r30, 0x64	; 100
    6b10:	fa 4f       	sbci	r31, 0xFA	; 250
    6b12:	84 91       	lpm	r24, Z
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/wiring_digital.c:217
  uint8_t bit = digitalPinToBitMask(pin);
    6b14:	f9 01       	movw	r30, r18
    6b16:	e4 54       	subi	r30, 0x44	; 68
    6b18:	fa 4f       	sbci	r31, 0xFA	; 250
    6b1a:	d4 91       	lpm	r29, Z
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/wiring_digital.c:218
  uint8_t port = digitalPinToPort(pin);
    6b1c:	f9 01       	movw	r30, r18
    6b1e:	e4 52       	subi	r30, 0x24	; 36
    6b20:	fa 4f       	sbci	r31, 0xFA	; 250
    6b22:	c4 91       	lpm	r28, Z
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/wiring_digital.c:220

  if (port == NOT_A_PIN) return LOW;
    6b24:	cc 23       	and	r28, r28
    6b26:	a1 f0       	breq	.+40     	; 0x6b50 <digitalRead+0x4c>
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/wiring_digital.c:224

  // If the pin that support PWM output, we need to turn it off
  // before getting a digital reading.
  if (timer != NOT_ON_TIMER) turnOffPWM(timer);
    6b28:	81 11       	cpse	r24, r1
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/wiring_digital.c:224 (discriminator 1)
    6b2a:	0e 94 e0 34 	call	0x69c0	; 0x69c0 <turnOffPWM>
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/wiring_digital.c:226

  if (*portInputRegister(port) & bit) return HIGH;
    6b2e:	ec 2f       	mov	r30, r28
    6b30:	f0 e0       	ldi	r31, 0x00	; 0
    6b32:	ee 0f       	add	r30, r30
    6b34:	ff 1f       	adc	r31, r31
    6b36:	e4 50       	subi	r30, 0x04	; 4
    6b38:	fa 4f       	sbci	r31, 0xFA	; 250
    6b3a:	a5 91       	lpm	r26, Z+
    6b3c:	b4 91       	lpm	r27, Z
    6b3e:	ec 91       	ld	r30, X
    6b40:	ed 23       	and	r30, r29
    6b42:	81 e0       	ldi	r24, 0x01	; 1
    6b44:	90 e0       	ldi	r25, 0x00	; 0
    6b46:	09 f4       	brne	.+2      	; 0x6b4a <digitalRead+0x46>
    6b48:	80 e0       	ldi	r24, 0x00	; 0
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/wiring_digital.c:228
  return LOW;
}
    6b4a:	df 91       	pop	r29
    6b4c:	cf 91       	pop	r28
    6b4e:	08 95       	ret
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/wiring_digital.c:220
{
  uint8_t timer = digitalPinToTimer(pin);
  uint8_t bit = digitalPinToBitMask(pin);
  uint8_t port = digitalPinToPort(pin);

  if (port == NOT_A_PIN) return LOW;
    6b50:	80 e0       	ldi	r24, 0x00	; 0
    6b52:	90 e0       	ldi	r25, 0x00	; 0
    6b54:	fa cf       	rjmp	.-12     	; 0x6b4a <digitalRead+0x46>

00006b56 <HardwareSerial::available()>:
_ZN14HardwareSerial9availableEv():
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/HardwareSerial.cpp:150
  // clear any received data
  _rx_buffer_head = _rx_buffer_tail;
}

int HardwareSerial::available(void)
{
    6b56:	fc 01       	movw	r30, r24
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/HardwareSerial.cpp:151
  return ((unsigned int)(SERIAL_RX_BUFFER_SIZE + _rx_buffer_head - _rx_buffer_tail)) % SERIAL_RX_BUFFER_SIZE;
    6b58:	91 8d       	ldd	r25, Z+25	; 0x19
    6b5a:	22 8d       	ldd	r18, Z+26	; 0x1a
    6b5c:	89 2f       	mov	r24, r25
    6b5e:	90 e0       	ldi	r25, 0x00	; 0
    6b60:	80 5c       	subi	r24, 0xC0	; 192
    6b62:	9f 4f       	sbci	r25, 0xFF	; 255
    6b64:	82 1b       	sub	r24, r18
    6b66:	91 09       	sbc	r25, r1
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/HardwareSerial.cpp:152
}
    6b68:	8f 73       	andi	r24, 0x3F	; 63
    6b6a:	99 27       	eor	r25, r25
    6b6c:	08 95       	ret

00006b6e <HardwareSerial::peek()>:
_ZN14HardwareSerial4peekEv():
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/HardwareSerial.cpp:155

int HardwareSerial::peek(void)
{
    6b6e:	fc 01       	movw	r30, r24
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/HardwareSerial.cpp:156
  if (_rx_buffer_head == _rx_buffer_tail) {
    6b70:	91 8d       	ldd	r25, Z+25	; 0x19
    6b72:	82 8d       	ldd	r24, Z+26	; 0x1a
    6b74:	98 17       	cp	r25, r24
    6b76:	31 f0       	breq	.+12     	; 0x6b84 <HardwareSerial::peek()+0x16>
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/HardwareSerial.cpp:159
    return -1;
  } else {
    return _rx_buffer[_rx_buffer_tail];
    6b78:	82 8d       	ldd	r24, Z+26	; 0x1a
    6b7a:	e8 0f       	add	r30, r24
    6b7c:	f1 1d       	adc	r31, r1
    6b7e:	85 8d       	ldd	r24, Z+29	; 0x1d
    6b80:	90 e0       	ldi	r25, 0x00	; 0
    6b82:	08 95       	ret
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/HardwareSerial.cpp:157
}

int HardwareSerial::peek(void)
{
  if (_rx_buffer_head == _rx_buffer_tail) {
    return -1;
    6b84:	8f ef       	ldi	r24, 0xFF	; 255
    6b86:	9f ef       	ldi	r25, 0xFF	; 255
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/HardwareSerial.cpp:161
  } else {
    return _rx_buffer[_rx_buffer_tail];
  }
}
    6b88:	08 95       	ret

00006b8a <HardwareSerial::read()>:
_ZN14HardwareSerial4readEv():
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/HardwareSerial.cpp:164

int HardwareSerial::read(void)
{
    6b8a:	fc 01       	movw	r30, r24
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/HardwareSerial.cpp:166
  // if the head isn't ahead of the tail, we don't have any characters
  if (_rx_buffer_head == _rx_buffer_tail) {
    6b8c:	91 8d       	ldd	r25, Z+25	; 0x19
    6b8e:	82 8d       	ldd	r24, Z+26	; 0x1a
    6b90:	98 17       	cp	r25, r24
    6b92:	61 f0       	breq	.+24     	; 0x6bac <HardwareSerial::read()+0x22>
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/HardwareSerial.cpp:169
    return -1;
  } else {
    unsigned char c = _rx_buffer[_rx_buffer_tail];
    6b94:	a2 8d       	ldd	r26, Z+26	; 0x1a
    6b96:	ae 0f       	add	r26, r30
    6b98:	bf 2f       	mov	r27, r31
    6b9a:	b1 1d       	adc	r27, r1
    6b9c:	5d 96       	adiw	r26, 0x1d	; 29
    6b9e:	8c 91       	ld	r24, X
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/HardwareSerial.cpp:170
    _rx_buffer_tail = (rx_buffer_index_t)(_rx_buffer_tail + 1) % SERIAL_RX_BUFFER_SIZE;
    6ba0:	92 8d       	ldd	r25, Z+26	; 0x1a
    6ba2:	9f 5f       	subi	r25, 0xFF	; 255
    6ba4:	9f 73       	andi	r25, 0x3F	; 63
    6ba6:	92 8f       	std	Z+26, r25	; 0x1a
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/HardwareSerial.cpp:171
    return c;
    6ba8:	90 e0       	ldi	r25, 0x00	; 0
    6baa:	08 95       	ret
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/HardwareSerial.cpp:167

int HardwareSerial::read(void)
{
  // if the head isn't ahead of the tail, we don't have any characters
  if (_rx_buffer_head == _rx_buffer_tail) {
    return -1;
    6bac:	8f ef       	ldi	r24, 0xFF	; 255
    6bae:	9f ef       	ldi	r25, 0xFF	; 255
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/HardwareSerial.cpp:173
  } else {
    unsigned char c = _rx_buffer[_rx_buffer_tail];
    _rx_buffer_tail = (rx_buffer_index_t)(_rx_buffer_tail + 1) % SERIAL_RX_BUFFER_SIZE;
    return c;
  }
}
    6bb0:	08 95       	ret

00006bb2 <HardwareSerial::availableForWrite()>:
_ZN14HardwareSerial17availableForWriteEv():
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/HardwareSerial.cpp:181
{
#if (SERIAL_TX_BUFFER_SIZE>256)
  uint8_t oldSREG = SREG;
  cli();
#endif
  tx_buffer_index_t head = _tx_buffer_head;
    6bb2:	fc 01       	movw	r30, r24
    6bb4:	53 8d       	ldd	r21, Z+27	; 0x1b
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/HardwareSerial.cpp:182
  tx_buffer_index_t tail = _tx_buffer_tail;
    6bb6:	44 8d       	ldd	r20, Z+28	; 0x1c
    6bb8:	25 2f       	mov	r18, r21
    6bba:	30 e0       	ldi	r19, 0x00	; 0
    6bbc:	84 2f       	mov	r24, r20
    6bbe:	90 e0       	ldi	r25, 0x00	; 0
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/HardwareSerial.cpp:186
#if (SERIAL_TX_BUFFER_SIZE>256)
  SREG = oldSREG;
#endif
  if (head >= tail) return SERIAL_TX_BUFFER_SIZE - 1 - head + tail;
    6bc0:	82 1b       	sub	r24, r18
    6bc2:	93 0b       	sbc	r25, r19
    6bc4:	54 17       	cp	r21, r20
    6bc6:	10 f0       	brcs	.+4      	; 0x6bcc <HardwareSerial::availableForWrite()+0x1a>
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/HardwareSerial.cpp:186 (discriminator 1)
    6bc8:	cf 96       	adiw	r24, 0x3f	; 63
    6bca:	08 95       	ret
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/HardwareSerial.cpp:187
  return tail - head - 1;
    6bcc:	01 97       	sbiw	r24, 0x01	; 1
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/HardwareSerial.cpp:188
}
    6bce:	08 95       	ret

00006bd0 <serialEventRun()>:
_Z14serialEventRunv():
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/HardwareSerial.cpp:66
#endif

void serialEventRun(void)
{
#if defined(HAVE_HWSERIAL0)
  if (Serial0_available && serialEvent && Serial0_available()) serialEvent();
    6bd0:	83 e4       	ldi	r24, 0x43	; 67
    6bd2:	97 e3       	ldi	r25, 0x37	; 55
    6bd4:	89 2b       	or	r24, r25
    6bd6:	49 f0       	breq	.+18     	; 0x6bea <serialEventRun()+0x1a>
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/HardwareSerial.cpp:66 (discriminator 1)
    6bd8:	80 e0       	ldi	r24, 0x00	; 0
    6bda:	90 e0       	ldi	r25, 0x00	; 0
    6bdc:	89 2b       	or	r24, r25
    6bde:	29 f0       	breq	.+10     	; 0x6bea <serialEventRun()+0x1a>
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/HardwareSerial.cpp:66 (discriminator 3)
    6be0:	0e 94 43 37 	call	0x6e86	; 0x6e86 <Serial0_available()>
    6be4:	81 11       	cpse	r24, r1
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/HardwareSerial.cpp:66
    6be6:	0e 94 00 00 	call	0	; 0x0 <__vectors>
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/HardwareSerial.cpp:69
#endif
#if defined(HAVE_HWSERIAL1)
  if (Serial1_available && serialEvent1 && Serial1_available()) serialEvent1();
    6bea:	80 e0       	ldi	r24, 0x00	; 0
    6bec:	90 e0       	ldi	r25, 0x00	; 0
    6bee:	89 2b       	or	r24, r25
    6bf0:	49 f0       	breq	.+18     	; 0x6c04 <serialEventRun()+0x34>
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/HardwareSerial.cpp:69 (discriminator 1)
    6bf2:	80 e0       	ldi	r24, 0x00	; 0
    6bf4:	90 e0       	ldi	r25, 0x00	; 0
    6bf6:	89 2b       	or	r24, r25
    6bf8:	29 f0       	breq	.+10     	; 0x6c04 <serialEventRun()+0x34>
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/HardwareSerial.cpp:69 (discriminator 3)
    6bfa:	0e 94 00 00 	call	0	; 0x0 <__vectors>
    6bfe:	81 11       	cpse	r24, r1
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/HardwareSerial.cpp:69
    6c00:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/HardwareSerial.cpp:77
  if (Serial2_available && serialEvent2 && Serial2_available()) serialEvent2();
#endif
#if defined(HAVE_HWSERIAL3)
  if (Serial3_available && serialEvent3 && Serial3_available()) serialEvent3();
#endif
}
    6c04:	08 95       	ret

00006c06 <HardwareSerial::_tx_udr_empty_irq()>:
_ZN14HardwareSerial17_tx_udr_empty_irqEv():
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/HardwareSerial.cpp:82

// Actual interrupt handlers //////////////////////////////////////////////////////////////

void HardwareSerial::_tx_udr_empty_irq(void)
{
    6c06:	fc 01       	movw	r30, r24
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/HardwareSerial.cpp:85
  // If interrupts are enabled, there must be more data in the output
  // buffer. Send the next byte
  unsigned char c = _tx_buffer[_tx_buffer_tail];
    6c08:	a4 8d       	ldd	r26, Z+28	; 0x1c
    6c0a:	a8 0f       	add	r26, r24
    6c0c:	b9 2f       	mov	r27, r25
    6c0e:	b1 1d       	adc	r27, r1
    6c10:	a3 5a       	subi	r26, 0xA3	; 163
    6c12:	bf 4f       	sbci	r27, 0xFF	; 255
    6c14:	2c 91       	ld	r18, X
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/HardwareSerial.cpp:86
  _tx_buffer_tail = (_tx_buffer_tail + 1) % SERIAL_TX_BUFFER_SIZE;
    6c16:	84 8d       	ldd	r24, Z+28	; 0x1c
    6c18:	90 e0       	ldi	r25, 0x00	; 0
    6c1a:	01 96       	adiw	r24, 0x01	; 1
    6c1c:	8f 73       	andi	r24, 0x3F	; 63
    6c1e:	99 27       	eor	r25, r25
    6c20:	84 8f       	std	Z+28, r24	; 0x1c
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/HardwareSerial.cpp:88

  *_udr = c;
    6c22:	a6 89       	ldd	r26, Z+22	; 0x16
    6c24:	b7 89       	ldd	r27, Z+23	; 0x17
    6c26:	2c 93       	st	X, r18
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/HardwareSerial.cpp:93

  // clear the TXC bit -- "can be cleared by writing a one to its bit
  // location". This makes sure flush() won't return until the bytes
  // actually got written
  *_ucsra |= _BV(TXC0);
    6c28:	a0 89       	ldd	r26, Z+16	; 0x10
    6c2a:	b1 89       	ldd	r27, Z+17	; 0x11
    6c2c:	8c 91       	ld	r24, X
    6c2e:	80 64       	ori	r24, 0x40	; 64
    6c30:	8c 93       	st	X, r24
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/HardwareSerial.cpp:95

  if (_tx_buffer_head == _tx_buffer_tail) {
    6c32:	93 8d       	ldd	r25, Z+27	; 0x1b
    6c34:	84 8d       	ldd	r24, Z+28	; 0x1c
    6c36:	98 13       	cpse	r25, r24
    6c38:	06 c0       	rjmp	.+12     	; 0x6c46 <HardwareSerial::_tx_udr_empty_irq()+0x40>
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/HardwareSerial.cpp:97
    // Buffer empty, so disable interrupts
    *_ucsrb &= ~_BV(UDRIE0);
    6c3a:	02 88       	ldd	r0, Z+18	; 0x12
    6c3c:	f3 89       	ldd	r31, Z+19	; 0x13
    6c3e:	e0 2d       	mov	r30, r0
    6c40:	80 81       	ld	r24, Z
    6c42:	8f 7d       	andi	r24, 0xDF	; 223
    6c44:	80 83       	st	Z, r24
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/HardwareSerial.cpp:99
  }
}
    6c46:	08 95       	ret

00006c48 <HardwareSerial::flush()>:
_ZN14HardwareSerial5flushEv():
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/HardwareSerial.cpp:191
  if (head >= tail) return SERIAL_TX_BUFFER_SIZE - 1 - head + tail;
  return tail - head - 1;
}

void HardwareSerial::flush()
{
    6c48:	cf 93       	push	r28
    6c4a:	df 93       	push	r29
    6c4c:	ec 01       	movw	r28, r24
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/HardwareSerial.cpp:195
  // If we have never written a byte, no need to flush. This special
  // case is needed since there is no way to force the TXC (transmit
  // complete) bit to 1 during initialization
  if (!_written)
    6c4e:	88 8d       	ldd	r24, Y+24	; 0x18
    6c50:	88 23       	and	r24, r24
    6c52:	b9 f0       	breq	.+46     	; 0x6c82 <HardwareSerial::flush()+0x3a>
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/HardwareSerial.cpp:198
    return;

  while (bit_is_set(*_ucsrb, UDRIE0) || bit_is_clear(*_ucsra, TXC0)) {
    6c54:	aa 89       	ldd	r26, Y+18	; 0x12
    6c56:	bb 89       	ldd	r27, Y+19	; 0x13
    6c58:	e8 89       	ldd	r30, Y+16	; 0x10
    6c5a:	f9 89       	ldd	r31, Y+17	; 0x11
    6c5c:	8c 91       	ld	r24, X
    6c5e:	85 fd       	sbrc	r24, 5
    6c60:	03 c0       	rjmp	.+6      	; 0x6c68 <HardwareSerial::flush()+0x20>
    6c62:	80 81       	ld	r24, Z
    6c64:	86 fd       	sbrc	r24, 6
    6c66:	0d c0       	rjmp	.+26     	; 0x6c82 <HardwareSerial::flush()+0x3a>
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/HardwareSerial.cpp:199
    if (bit_is_clear(SREG, SREG_I) && bit_is_set(*_ucsrb, UDRIE0))
    6c68:	0f b6       	in	r0, 0x3f	; 63
    6c6a:	07 fc       	sbrc	r0, 7
    6c6c:	f7 cf       	rjmp	.-18     	; 0x6c5c <HardwareSerial::flush()+0x14>
    6c6e:	8c 91       	ld	r24, X
    6c70:	85 ff       	sbrs	r24, 5
    6c72:	f2 cf       	rjmp	.-28     	; 0x6c58 <HardwareSerial::flush()+0x10>
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/HardwareSerial.cpp:203
      // Interrupts are globally disabled, but the DR empty
      // interrupt should be enabled, so poll the DR empty flag to
      // prevent deadlock
      if (bit_is_set(*_ucsra, UDRE0))
    6c74:	80 81       	ld	r24, Z
    6c76:	85 ff       	sbrs	r24, 5
    6c78:	ed cf       	rjmp	.-38     	; 0x6c54 <HardwareSerial::flush()+0xc>
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/HardwareSerial.cpp:204
        _tx_udr_empty_irq();
    6c7a:	ce 01       	movw	r24, r28
    6c7c:	0e 94 03 36 	call	0x6c06	; 0x6c06 <HardwareSerial::_tx_udr_empty_irq()>
    6c80:	e9 cf       	rjmp	.-46     	; 0x6c54 <HardwareSerial::flush()+0xc>
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/HardwareSerial.cpp:208
  }
  // If we get here, nothing is queued anymore (DRIE is disabled) and
  // the hardware finished tranmission (TXC is set).
}
    6c82:	df 91       	pop	r29
    6c84:	cf 91       	pop	r28
    6c86:	08 95       	ret

00006c88 <HardwareSerial::write(unsigned char)>:
_ZN14HardwareSerial5writeEh():
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/HardwareSerial.cpp:211

size_t HardwareSerial::write(uint8_t c)
{
    6c88:	ef 92       	push	r14
    6c8a:	ff 92       	push	r15
    6c8c:	0f 93       	push	r16
    6c8e:	1f 93       	push	r17
    6c90:	cf 93       	push	r28
    6c92:	df 93       	push	r29
    6c94:	ec 01       	movw	r28, r24
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/HardwareSerial.cpp:212
  _written = true;
    6c96:	81 e0       	ldi	r24, 0x01	; 1
    6c98:	88 8f       	std	Y+24, r24	; 0x18
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/HardwareSerial.cpp:217
  // If the buffer and the data register is empty, just write the byte
  // to the data register and be done. This shortcut helps
  // significantly improve the effective datarate at high (>
  // 500kbit/s) bitrates, where interrupt overhead becomes a slowdown.
  if (_tx_buffer_head == _tx_buffer_tail && bit_is_set(*_ucsra, UDRE0)) {
    6c9a:	9b 8d       	ldd	r25, Y+27	; 0x1b
    6c9c:	8c 8d       	ldd	r24, Y+28	; 0x1c
    6c9e:	98 13       	cpse	r25, r24
    6ca0:	16 c0       	rjmp	.+44     	; 0x6cce <HardwareSerial::write(unsigned char)+0x46>
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/HardwareSerial.cpp:217 (discriminator 1)
    6ca2:	e8 89       	ldd	r30, Y+16	; 0x10
    6ca4:	f9 89       	ldd	r31, Y+17	; 0x11
    6ca6:	80 81       	ld	r24, Z
    6ca8:	85 ff       	sbrs	r24, 5
    6caa:	11 c0       	rjmp	.+34     	; 0x6cce <HardwareSerial::write(unsigned char)+0x46>
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/HardwareSerial.cpp:218
    *_udr = c;
    6cac:	ee 89       	ldd	r30, Y+22	; 0x16
    6cae:	ff 89       	ldd	r31, Y+23	; 0x17
    6cb0:	60 83       	st	Z, r22
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/HardwareSerial.cpp:219
    *_ucsra |= _BV(TXC0);
    6cb2:	e8 89       	ldd	r30, Y+16	; 0x10
    6cb4:	f9 89       	ldd	r31, Y+17	; 0x11
    6cb6:	80 81       	ld	r24, Z
    6cb8:	80 64       	ori	r24, 0x40	; 64
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/HardwareSerial.cpp:242
  }

  _tx_buffer[_tx_buffer_head] = c;
  _tx_buffer_head = i;

  *_ucsrb |= _BV(UDRIE0);
    6cba:	80 83       	st	Z, r24
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/HardwareSerial.cpp:245
  
  return 1;
}
    6cbc:	81 e0       	ldi	r24, 0x01	; 1
    6cbe:	90 e0       	ldi	r25, 0x00	; 0
    6cc0:	df 91       	pop	r29
    6cc2:	cf 91       	pop	r28
    6cc4:	1f 91       	pop	r17
    6cc6:	0f 91       	pop	r16
    6cc8:	ff 90       	pop	r15
    6cca:	ef 90       	pop	r14
    6ccc:	08 95       	ret
    6cce:	f6 2e       	mov	r15, r22
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/HardwareSerial.cpp:222
  if (_tx_buffer_head == _tx_buffer_tail && bit_is_set(*_ucsra, UDRE0)) {
    *_udr = c;
    *_ucsra |= _BV(TXC0);
    return 1;
  }
  tx_buffer_index_t i = (_tx_buffer_head + 1) % SERIAL_TX_BUFFER_SIZE;
    6cd0:	0b 8d       	ldd	r16, Y+27	; 0x1b
    6cd2:	10 e0       	ldi	r17, 0x00	; 0
    6cd4:	0f 5f       	subi	r16, 0xFF	; 255
    6cd6:	1f 4f       	sbci	r17, 0xFF	; 255
    6cd8:	0f 73       	andi	r16, 0x3F	; 63
    6cda:	11 27       	eor	r17, r17
    6cdc:	e0 2e       	mov	r14, r16
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/HardwareSerial.cpp:226

  // If the output buffer is full, there's nothing for it other than to 
  // wait for the interrupt handler to empty it a bit
  while (i == _tx_buffer_tail) {
    6cde:	8c 8d       	ldd	r24, Y+28	; 0x1c
    6ce0:	8e 11       	cpse	r24, r14
    6ce2:	0c c0       	rjmp	.+24     	; 0x6cfc <HardwareSerial::write(unsigned char)+0x74>
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/HardwareSerial.cpp:227
    if (bit_is_clear(SREG, SREG_I)) {
    6ce4:	0f b6       	in	r0, 0x3f	; 63
    6ce6:	07 fc       	sbrc	r0, 7
    6ce8:	fa cf       	rjmp	.-12     	; 0x6cde <HardwareSerial::write(unsigned char)+0x56>
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/HardwareSerial.cpp:232
      // Interrupts are disabled, so we'll have to poll the data
      // register empty flag ourselves. If it is set, pretend an
      // interrupt has happened and call the handler to free up
      // space for us.
      if(bit_is_set(*_ucsra, UDRE0))
    6cea:	e8 89       	ldd	r30, Y+16	; 0x10
    6cec:	f9 89       	ldd	r31, Y+17	; 0x11
    6cee:	80 81       	ld	r24, Z
    6cf0:	85 ff       	sbrs	r24, 5
    6cf2:	f5 cf       	rjmp	.-22     	; 0x6cde <HardwareSerial::write(unsigned char)+0x56>
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/HardwareSerial.cpp:233
        _tx_udr_empty_irq();
    6cf4:	ce 01       	movw	r24, r28
    6cf6:	0e 94 03 36 	call	0x6c06	; 0x6c06 <HardwareSerial::_tx_udr_empty_irq()>
    6cfa:	f1 cf       	rjmp	.-30     	; 0x6cde <HardwareSerial::write(unsigned char)+0x56>
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/HardwareSerial.cpp:239
    } else {
      // nop, the interrupt handler will free up space for us
    }
  }

  _tx_buffer[_tx_buffer_head] = c;
    6cfc:	eb 8d       	ldd	r30, Y+27	; 0x1b
    6cfe:	ec 0f       	add	r30, r28
    6d00:	fd 2f       	mov	r31, r29
    6d02:	f1 1d       	adc	r31, r1
    6d04:	e3 5a       	subi	r30, 0xA3	; 163
    6d06:	ff 4f       	sbci	r31, 0xFF	; 255
    6d08:	f0 82       	st	Z, r15
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/HardwareSerial.cpp:240
  _tx_buffer_head = i;
    6d0a:	0b 8f       	std	Y+27, r16	; 0x1b
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/HardwareSerial.cpp:242

  *_ucsrb |= _BV(UDRIE0);
    6d0c:	ea 89       	ldd	r30, Y+18	; 0x12
    6d0e:	fb 89       	ldd	r31, Y+19	; 0x13
    6d10:	80 81       	ld	r24, Z
    6d12:	80 62       	ori	r24, 0x20	; 32
    6d14:	d2 cf       	rjmp	.-92     	; 0x6cba <HardwareSerial::write(unsigned char)+0x32>

00006d16 <HardwareSerial::begin(unsigned long, unsigned char)>:
_ZN14HardwareSerial5beginEmh():
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/HardwareSerial.cpp:104
}

// Public Methods //////////////////////////////////////////////////////////////

void HardwareSerial::begin(unsigned long baud, byte config)
{
    6d16:	cf 92       	push	r12
    6d18:	df 92       	push	r13
    6d1a:	ef 92       	push	r14
    6d1c:	ff 92       	push	r15
    6d1e:	1f 93       	push	r17
    6d20:	cf 93       	push	r28
    6d22:	df 93       	push	r29
    6d24:	ec 01       	movw	r28, r24
    6d26:	6a 01       	movw	r12, r20
    6d28:	7b 01       	movw	r14, r22
    6d2a:	12 2f       	mov	r17, r18
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/HardwareSerial.cpp:107
  // Try u2x mode first
  uint16_t baud_setting = (F_CPU / 4 / baud - 1) / 2;
  *_ucsra = 1 << U2X0;
    6d2c:	e8 89       	ldd	r30, Y+16	; 0x10
    6d2e:	f9 89       	ldd	r31, Y+17	; 0x11
    6d30:	82 e0       	ldi	r24, 0x02	; 2
    6d32:	80 83       	st	Z, r24
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/HardwareSerial.cpp:114
  // hardcoded exception for 57600 for compatibility with the bootloader
  // shipped with the Duemilanove and previous boards and the firmware
  // on the 8U2 on the Uno and Mega 2560. Also, The baud_setting cannot
  // be > 4095, so switch back to non-u2x mode if the baud rate is too
  // low.
  if (((F_CPU == 16000000UL) && (baud == 57600)) || (baud_setting >4095))
    6d34:	c1 14       	cp	r12, r1
    6d36:	81 ee       	ldi	r24, 0xE1	; 225
    6d38:	d8 06       	cpc	r13, r24
    6d3a:	e1 04       	cpc	r14, r1
    6d3c:	f1 04       	cpc	r15, r1
    6d3e:	a1 f0       	breq	.+40     	; 0x6d68 <HardwareSerial::begin(unsigned long, unsigned char)+0x52>
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/HardwareSerial.cpp:106 (discriminator 1)
// Public Methods //////////////////////////////////////////////////////////////

void HardwareSerial::begin(unsigned long baud, byte config)
{
  // Try u2x mode first
  uint16_t baud_setting = (F_CPU / 4 / baud - 1) / 2;
    6d40:	60 e0       	ldi	r22, 0x00	; 0
    6d42:	79 e0       	ldi	r23, 0x09	; 9
    6d44:	8d e3       	ldi	r24, 0x3D	; 61
    6d46:	90 e0       	ldi	r25, 0x00	; 0
    6d48:	a7 01       	movw	r20, r14
    6d4a:	96 01       	movw	r18, r12
    6d4c:	0e 94 02 3a 	call	0x7404	; 0x7404 <__udivmodsi4>
    6d50:	21 50       	subi	r18, 0x01	; 1
    6d52:	31 09       	sbc	r19, r1
    6d54:	41 09       	sbc	r20, r1
    6d56:	51 09       	sbc	r21, r1
    6d58:	56 95       	lsr	r21
    6d5a:	47 95       	ror	r20
    6d5c:	37 95       	ror	r19
    6d5e:	27 95       	ror	r18
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/HardwareSerial.cpp:114 (discriminator 1)
  // hardcoded exception for 57600 for compatibility with the bootloader
  // shipped with the Duemilanove and previous boards and the firmware
  // on the 8U2 on the Uno and Mega 2560. Also, The baud_setting cannot
  // be > 4095, so switch back to non-u2x mode if the baud rate is too
  // low.
  if (((F_CPU == 16000000UL) && (baud == 57600)) || (baud_setting >4095))
    6d60:	21 15       	cp	r18, r1
    6d62:	80 e1       	ldi	r24, 0x10	; 16
    6d64:	38 07       	cpc	r19, r24
    6d66:	98 f0       	brcs	.+38     	; 0x6d8e <HardwareSerial::begin(unsigned long, unsigned char)+0x78>
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/HardwareSerial.cpp:116
  {
    *_ucsra = 0;
    6d68:	e8 89       	ldd	r30, Y+16	; 0x10
    6d6a:	f9 89       	ldd	r31, Y+17	; 0x11
    6d6c:	10 82       	st	Z, r1
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/HardwareSerial.cpp:117
    baud_setting = (F_CPU / 8 / baud - 1) / 2;
    6d6e:	60 e8       	ldi	r22, 0x80	; 128
    6d70:	74 e8       	ldi	r23, 0x84	; 132
    6d72:	8e e1       	ldi	r24, 0x1E	; 30
    6d74:	90 e0       	ldi	r25, 0x00	; 0
    6d76:	a7 01       	movw	r20, r14
    6d78:	96 01       	movw	r18, r12
    6d7a:	0e 94 02 3a 	call	0x7404	; 0x7404 <__udivmodsi4>
    6d7e:	21 50       	subi	r18, 0x01	; 1
    6d80:	31 09       	sbc	r19, r1
    6d82:	41 09       	sbc	r20, r1
    6d84:	51 09       	sbc	r21, r1
    6d86:	56 95       	lsr	r21
    6d88:	47 95       	ror	r20
    6d8a:	37 95       	ror	r19
    6d8c:	27 95       	ror	r18
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/HardwareSerial.cpp:121
  }

  // assign the baud_setting, a.k.a. ubrr (USART Baud Rate Register)
  *_ubrrh = baud_setting >> 8;
    6d8e:	ec 85       	ldd	r30, Y+12	; 0x0c
    6d90:	fd 85       	ldd	r31, Y+13	; 0x0d
    6d92:	30 83       	st	Z, r19
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/HardwareSerial.cpp:122
  *_ubrrl = baud_setting;
    6d94:	ee 85       	ldd	r30, Y+14	; 0x0e
    6d96:	ff 85       	ldd	r31, Y+15	; 0x0f
    6d98:	20 83       	st	Z, r18
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/HardwareSerial.cpp:124

  _written = false;
    6d9a:	18 8e       	std	Y+24, r1	; 0x18
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/HardwareSerial.cpp:132
#if defined(__AVR_ATmega8__) || defined(__AVR_ATmega8515__) || defined(__AVR_ATmega162__) \
|| defined(__AVR_ATmega8535__) || defined(__AVR_ATmega16__)|| defined(__AVR_ATmega32__)   \
|| defined(__AVR_ATmega162__)
  config |= 0x80; // select UCSRC register (shared with UBRRH)
#endif
  *_ucsrc = config;
    6d9c:	ec 89       	ldd	r30, Y+20	; 0x14
    6d9e:	fd 89       	ldd	r31, Y+21	; 0x15
    6da0:	10 83       	st	Z, r17
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/HardwareSerial.cpp:134
  
  *_ucsrb |= _BV(RXEN0) | _BV(TXEN0) | _BV(RXCIE0);
    6da2:	ea 89       	ldd	r30, Y+18	; 0x12
    6da4:	fb 89       	ldd	r31, Y+19	; 0x13
    6da6:	80 81       	ld	r24, Z
    6da8:	88 69       	ori	r24, 0x98	; 152
    6daa:	80 83       	st	Z, r24
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/HardwareSerial.cpp:135
  *_ucsrb &= ~_BV(UDRIE0);
    6dac:	ea 89       	ldd	r30, Y+18	; 0x12
    6dae:	fb 89       	ldd	r31, Y+19	; 0x13
    6db0:	80 81       	ld	r24, Z
    6db2:	8f 7d       	andi	r24, 0xDF	; 223
    6db4:	80 83       	st	Z, r24
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/HardwareSerial.cpp:136
}
    6db6:	df 91       	pop	r29
    6db8:	cf 91       	pop	r28
    6dba:	1f 91       	pop	r17
    6dbc:	ff 90       	pop	r15
    6dbe:	ef 90       	pop	r14
    6dc0:	df 90       	pop	r13
    6dc2:	cf 90       	pop	r12
    6dc4:	08 95       	ret

00006dc6 <__vector_20>:
__vector_20():
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/HardwareSerial0.cpp:50
#elif defined(USART_RXC_vect)
  ISR(USART_RXC_vect)
#else
  #error "Don't know what the Data Received vector is called for Serial"
#endif
  {
    6dc6:	1f 92       	push	r1
    6dc8:	0f 92       	push	r0
    6dca:	0f b6       	in	r0, 0x3f	; 63
    6dcc:	0f 92       	push	r0
    6dce:	11 24       	eor	r1, r1
    6dd0:	0b b6       	in	r0, 0x3b	; 59
    6dd2:	0f 92       	push	r0
    6dd4:	2f 93       	push	r18
    6dd6:	8f 93       	push	r24
    6dd8:	9f 93       	push	r25
    6dda:	ef 93       	push	r30
    6ddc:	ff 93       	push	r31
_ZN14HardwareSerial16_rx_complete_irqEv():
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/HardwareSerial_private.h:103

// Actual interrupt handlers //////////////////////////////////////////////////////////////

void HardwareSerial::_rx_complete_irq(void)
{
  if (bit_is_clear(*_ucsra, UPE0)) {
    6dde:	e0 91 e2 0a 	lds	r30, 0x0AE2	; 0x800ae2 <Serial+0x10>
    6de2:	f0 91 e3 0a 	lds	r31, 0x0AE3	; 0x800ae3 <Serial+0x11>
    6de6:	80 81       	ld	r24, Z
    6de8:	e0 91 e8 0a 	lds	r30, 0x0AE8	; 0x800ae8 <Serial+0x16>
    6dec:	f0 91 e9 0a 	lds	r31, 0x0AE9	; 0x800ae9 <Serial+0x17>
    6df0:	82 fd       	sbrc	r24, 2
    6df2:	1d c0       	rjmp	.+58     	; 0x6e2e <__vector_20+0x68>
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/HardwareSerial_private.h:106
    // No Parity error, read byte and store it in the buffer if there is
    // room
    unsigned char c = *_udr;
    6df4:	90 81       	ld	r25, Z
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/HardwareSerial_private.h:107
    rx_buffer_index_t i = (unsigned int)(_rx_buffer_head + 1) % SERIAL_RX_BUFFER_SIZE;
    6df6:	80 91 eb 0a 	lds	r24, 0x0AEB	; 0x800aeb <Serial+0x19>
    6dfa:	8f 5f       	subi	r24, 0xFF	; 255
    6dfc:	8f 73       	andi	r24, 0x3F	; 63
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/HardwareSerial_private.h:113

    // if we should be storing the received character into the location
    // just before the tail (meaning that the head would advance to the
    // current location of the tail), we're about to overflow the buffer
    // and so we don't write the character or advance the head.
    if (i != _rx_buffer_tail) {
    6dfe:	20 91 ec 0a 	lds	r18, 0x0AEC	; 0x800aec <Serial+0x1a>
    6e02:	82 17       	cp	r24, r18
    6e04:	41 f0       	breq	.+16     	; 0x6e16 <__vector_20+0x50>
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/HardwareSerial_private.h:114
      _rx_buffer[_rx_buffer_head] = c;
    6e06:	e0 91 eb 0a 	lds	r30, 0x0AEB	; 0x800aeb <Serial+0x19>
    6e0a:	f0 e0       	ldi	r31, 0x00	; 0
    6e0c:	ee 52       	subi	r30, 0x2E	; 46
    6e0e:	f5 4f       	sbci	r31, 0xF5	; 245
    6e10:	95 8f       	std	Z+29, r25	; 0x1d
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/HardwareSerial_private.h:115
      _rx_buffer_head = i;
    6e12:	80 93 eb 0a 	sts	0x0AEB, r24	; 0x800aeb <Serial+0x19>
__vector_20():
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/HardwareSerial0.cpp:52
    Serial._rx_complete_irq();
  }
    6e16:	ff 91       	pop	r31
    6e18:	ef 91       	pop	r30
    6e1a:	9f 91       	pop	r25
    6e1c:	8f 91       	pop	r24
    6e1e:	2f 91       	pop	r18
    6e20:	0f 90       	pop	r0
    6e22:	0b be       	out	0x3b, r0	; 59
    6e24:	0f 90       	pop	r0
    6e26:	0f be       	out	0x3f, r0	; 63
    6e28:	0f 90       	pop	r0
    6e2a:	1f 90       	pop	r1
    6e2c:	18 95       	reti
_ZN14HardwareSerial16_rx_complete_irqEv():
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/HardwareSerial_private.h:119
    }
  } else {
    // Parity error, read byte but discard it
    *_udr;
    6e2e:	80 81       	ld	r24, Z
__vector_20():
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/HardwareSerial0.cpp:52
    6e30:	f2 cf       	rjmp	.-28     	; 0x6e16 <__vector_20+0x50>

00006e32 <__vector_21>:
__vector_21():
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/HardwareSerial0.cpp:63
#elif defined(USART0_UDRE_vect)
ISR(USART0_UDRE_vect)
#else
  #error "Don't know what the Data Register Empty vector is called for Serial"
#endif
{
    6e32:	1f 92       	push	r1
    6e34:	0f 92       	push	r0
    6e36:	0f b6       	in	r0, 0x3f	; 63
    6e38:	0f 92       	push	r0
    6e3a:	11 24       	eor	r1, r1
    6e3c:	0b b6       	in	r0, 0x3b	; 59
    6e3e:	0f 92       	push	r0
    6e40:	2f 93       	push	r18
    6e42:	3f 93       	push	r19
    6e44:	4f 93       	push	r20
    6e46:	5f 93       	push	r21
    6e48:	6f 93       	push	r22
    6e4a:	7f 93       	push	r23
    6e4c:	8f 93       	push	r24
    6e4e:	9f 93       	push	r25
    6e50:	af 93       	push	r26
    6e52:	bf 93       	push	r27
    6e54:	ef 93       	push	r30
    6e56:	ff 93       	push	r31
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/HardwareSerial0.cpp:64
  Serial._tx_udr_empty_irq();
    6e58:	82 ed       	ldi	r24, 0xD2	; 210
    6e5a:	9a e0       	ldi	r25, 0x0A	; 10
    6e5c:	0e 94 03 36 	call	0x6c06	; 0x6c06 <HardwareSerial::_tx_udr_empty_irq()>
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/HardwareSerial0.cpp:65
}
    6e60:	ff 91       	pop	r31
    6e62:	ef 91       	pop	r30
    6e64:	bf 91       	pop	r27
    6e66:	af 91       	pop	r26
    6e68:	9f 91       	pop	r25
    6e6a:	8f 91       	pop	r24
    6e6c:	7f 91       	pop	r23
    6e6e:	6f 91       	pop	r22
    6e70:	5f 91       	pop	r21
    6e72:	4f 91       	pop	r20
    6e74:	3f 91       	pop	r19
    6e76:	2f 91       	pop	r18
    6e78:	0f 90       	pop	r0
    6e7a:	0b be       	out	0x3b, r0	; 59
    6e7c:	0f 90       	pop	r0
    6e7e:	0f be       	out	0x3f, r0	; 63
    6e80:	0f 90       	pop	r0
    6e82:	1f 90       	pop	r1
    6e84:	18 95       	reti

00006e86 <Serial0_available()>:
_Z17Serial0_availablev():
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/HardwareSerial0.cpp:76
#endif

// Function that can be weakly referenced by serialEventRun to prevent
// pulling in this file if it's not otherwise used.
bool Serial0_available() {
  return Serial.available();
    6e86:	82 ed       	ldi	r24, 0xD2	; 210
    6e88:	9a e0       	ldi	r25, 0x0A	; 10
    6e8a:	0e 94 ab 35 	call	0x6b56	; 0x6b56 <HardwareSerial::available()>
    6e8e:	21 e0       	ldi	r18, 0x01	; 1
    6e90:	89 2b       	or	r24, r25
    6e92:	09 f4       	brne	.+2      	; 0x6e96 <Serial0_available()+0x10>
    6e94:	20 e0       	ldi	r18, 0x00	; 0
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/HardwareSerial0.cpp:77
}
    6e96:	82 2f       	mov	r24, r18
    6e98:	08 95       	ret

00006e9a <_GLOBAL__sub_I___vector_20>:
_ZN5PrintC4Ev():
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/Print.h:46
    6e9a:	e2 ed       	ldi	r30, 0xD2	; 210
    6e9c:	fa e0       	ldi	r31, 0x0A	; 10
    6e9e:	13 82       	std	Z+3, r1	; 0x03
    6ea0:	12 82       	std	Z+2, r1	; 0x02
_ZN6StreamC4Ev():
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/Stream.h:63
    6ea2:	88 ee       	ldi	r24, 0xE8	; 232
    6ea4:	93 e0       	ldi	r25, 0x03	; 3
    6ea6:	a0 e0       	ldi	r26, 0x00	; 0
    6ea8:	b0 e0       	ldi	r27, 0x00	; 0
    6eaa:	84 83       	std	Z+4, r24	; 0x04
    6eac:	95 83       	std	Z+5, r25	; 0x05
    6eae:	a6 83       	std	Z+6, r26	; 0x06
    6eb0:	b7 83       	std	Z+7, r27	; 0x07
_ZN14HardwareSerialC4EPVhS1_S1_S1_S1_S1_():
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/HardwareSerial_private.h:95
  volatile uint8_t *ucsrc, volatile uint8_t *udr) :
    _ubrrh(ubrrh), _ubrrl(ubrrl),
    _ucsra(ucsra), _ucsrb(ucsrb), _ucsrc(ucsrc),
    _udr(udr),
    _rx_buffer_head(0), _rx_buffer_tail(0),
    _tx_buffer_head(0), _tx_buffer_tail(0)
    6eb2:	8b e7       	ldi	r24, 0x7B	; 123
    6eb4:	97 e0       	ldi	r25, 0x07	; 7
    6eb6:	91 83       	std	Z+1, r25	; 0x01
    6eb8:	80 83       	st	Z, r24
    6eba:	85 ec       	ldi	r24, 0xC5	; 197
    6ebc:	90 e0       	ldi	r25, 0x00	; 0
    6ebe:	95 87       	std	Z+13, r25	; 0x0d
    6ec0:	84 87       	std	Z+12, r24	; 0x0c
    6ec2:	84 ec       	ldi	r24, 0xC4	; 196
    6ec4:	90 e0       	ldi	r25, 0x00	; 0
    6ec6:	97 87       	std	Z+15, r25	; 0x0f
    6ec8:	86 87       	std	Z+14, r24	; 0x0e
    6eca:	80 ec       	ldi	r24, 0xC0	; 192
    6ecc:	90 e0       	ldi	r25, 0x00	; 0
    6ece:	91 8b       	std	Z+17, r25	; 0x11
    6ed0:	80 8b       	std	Z+16, r24	; 0x10
    6ed2:	81 ec       	ldi	r24, 0xC1	; 193
    6ed4:	90 e0       	ldi	r25, 0x00	; 0
    6ed6:	93 8b       	std	Z+19, r25	; 0x13
    6ed8:	82 8b       	std	Z+18, r24	; 0x12
    6eda:	82 ec       	ldi	r24, 0xC2	; 194
    6edc:	90 e0       	ldi	r25, 0x00	; 0
    6ede:	95 8b       	std	Z+21, r25	; 0x15
    6ee0:	84 8b       	std	Z+20, r24	; 0x14
    6ee2:	86 ec       	ldi	r24, 0xC6	; 198
    6ee4:	90 e0       	ldi	r25, 0x00	; 0
    6ee6:	97 8b       	std	Z+23, r25	; 0x17
    6ee8:	86 8b       	std	Z+22, r24	; 0x16
    6eea:	11 8e       	std	Z+25, r1	; 0x19
    6eec:	12 8e       	std	Z+26, r1	; 0x1a
    6eee:	13 8e       	std	Z+27, r1	; 0x1b
    6ef0:	14 8e       	std	Z+28, r1	; 0x1c
_GLOBAL__sub_I___vector_20():
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/HardwareSerial0.cpp:77
    6ef2:	08 95       	ret

00006ef4 <Print::write(unsigned char const*, unsigned int)>:
_ZN5Print5writeEPKhj():
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/Print.cpp:228

  fdev_setup_stream(&f, printf_putchar, NULL, _FDEV_SETUP_WRITE);
  fdev_set_udata(&f, this);
  va_start(ap, format);
  return vfprintf_P(&f, (const char *)format, ap);
}
    6ef4:	af 92       	push	r10
    6ef6:	bf 92       	push	r11
    6ef8:	cf 92       	push	r12
    6efa:	df 92       	push	r13
    6efc:	ef 92       	push	r14
    6efe:	ff 92       	push	r15
    6f00:	0f 93       	push	r16
    6f02:	1f 93       	push	r17
    6f04:	cf 93       	push	r28
    6f06:	df 93       	push	r29
    6f08:	6c 01       	movw	r12, r24
    6f0a:	7b 01       	movw	r14, r22
    6f0c:	8b 01       	movw	r16, r22
    6f0e:	04 0f       	add	r16, r20
    6f10:	15 1f       	adc	r17, r21
    6f12:	eb 01       	movw	r28, r22
    6f14:	5e 01       	movw	r10, r28
    6f16:	ae 18       	sub	r10, r14
    6f18:	bf 08       	sbc	r11, r15
    6f1a:	c0 17       	cp	r28, r16
    6f1c:	d1 07       	cpc	r29, r17
    6f1e:	59 f0       	breq	.+22     	; 0x6f36 <Print::write(unsigned char const*, unsigned int)+0x42>
    6f20:	69 91       	ld	r22, Y+
    6f22:	d6 01       	movw	r26, r12
    6f24:	ed 91       	ld	r30, X+
    6f26:	fc 91       	ld	r31, X
    6f28:	01 90       	ld	r0, Z+
    6f2a:	f0 81       	ld	r31, Z
    6f2c:	e0 2d       	mov	r30, r0
    6f2e:	c6 01       	movw	r24, r12
    6f30:	09 95       	icall
    6f32:	89 2b       	or	r24, r25
    6f34:	79 f7       	brne	.-34     	; 0x6f14 <Print::write(unsigned char const*, unsigned int)+0x20>
    6f36:	c5 01       	movw	r24, r10
    6f38:	df 91       	pop	r29
    6f3a:	cf 91       	pop	r28
    6f3c:	1f 91       	pop	r17
    6f3e:	0f 91       	pop	r16
    6f40:	ff 90       	pop	r15
    6f42:	ef 90       	pop	r14
    6f44:	df 90       	pop	r13
    6f46:	cf 90       	pop	r12
    6f48:	bf 90       	pop	r11
    6f4a:	af 90       	pop	r10
    6f4c:	08 95       	ret

00006f4e <Print::write(char const*) [clone .part.2]>:
_ZN5Print5writeEPKc():
    6f4e:	fb 01       	movw	r30, r22
    6f50:	01 90       	ld	r0, Z+
    6f52:	00 20       	and	r0, r0
    6f54:	e9 f7       	brne	.-6      	; 0x6f50 <Print::write(char const*) [clone .part.2]+0x2>
    6f56:	31 97       	sbiw	r30, 0x01	; 1
    6f58:	af 01       	movw	r20, r30
    6f5a:	46 1b       	sub	r20, r22
    6f5c:	57 0b       	sbc	r21, r23
    6f5e:	dc 01       	movw	r26, r24
    6f60:	ed 91       	ld	r30, X+
    6f62:	fc 91       	ld	r31, X
    6f64:	02 80       	ldd	r0, Z+2	; 0x02
    6f66:	f3 81       	ldd	r31, Z+3	; 0x03
    6f68:	e0 2d       	mov	r30, r0
    6f6a:	09 94       	ijmp

00006f6c <Print::print(String const&)>:
_ZN5Print5writeEPKcj():
    6f6c:	db 01       	movw	r26, r22
    6f6e:	14 96       	adiw	r26, 0x04	; 4
    6f70:	4d 91       	ld	r20, X+
    6f72:	5c 91       	ld	r21, X
    6f74:	15 97       	sbiw	r26, 0x05	; 5
    6f76:	6d 91       	ld	r22, X+
    6f78:	7c 91       	ld	r23, X
    6f7a:	dc 01       	movw	r26, r24
    6f7c:	ed 91       	ld	r30, X+
    6f7e:	fc 91       	ld	r31, X
    6f80:	02 80       	ldd	r0, Z+2	; 0x02
    6f82:	f3 81       	ldd	r31, Z+3	; 0x03
    6f84:	e0 2d       	mov	r30, r0
    6f86:	09 94       	ijmp

00006f88 <Print::print(char const*)>:
_ZN5Print5writeEPKc():
    6f88:	61 15       	cp	r22, r1
    6f8a:	71 05       	cpc	r23, r1
    6f8c:	11 f0       	breq	.+4      	; 0x6f92 <Print::print(char const*)+0xa>
    6f8e:	0c 94 a7 37 	jmp	0x6f4e	; 0x6f4e <Print::write(char const*) [clone .part.2]>
_ZN5Print5printEPKc():
    6f92:	90 e0       	ldi	r25, 0x00	; 0
    6f94:	80 e0       	ldi	r24, 0x00	; 0
    6f96:	08 95       	ret

00006f98 <Print::print(char)>:
_ZN5Print5printEc():
    6f98:	dc 01       	movw	r26, r24
    6f9a:	ed 91       	ld	r30, X+
    6f9c:	fc 91       	ld	r31, X
    6f9e:	01 90       	ld	r0, Z+
    6fa0:	f0 81       	ld	r31, Z
    6fa2:	e0 2d       	mov	r30, r0
    6fa4:	09 94       	ijmp

00006fa6 <Print::println()>:
_ZN5Print5writeEPKc():
    6fa6:	69 e8       	ldi	r22, 0x89	; 137
    6fa8:	77 e0       	ldi	r23, 0x07	; 7
    6faa:	0c 94 a7 37 	jmp	0x6f4e	; 0x6f4e <Print::write(char const*) [clone .part.2]>

00006fae <Print::println(String const&)>:
_ZN5Print7printlnERK6String():
    6fae:	0f 93       	push	r16
    6fb0:	1f 93       	push	r17
    6fb2:	cf 93       	push	r28
    6fb4:	df 93       	push	r29
    6fb6:	ec 01       	movw	r28, r24
    6fb8:	0e 94 b6 37 	call	0x6f6c	; 0x6f6c <Print::print(String const&)>
    6fbc:	8c 01       	movw	r16, r24
    6fbe:	ce 01       	movw	r24, r28
    6fc0:	0e 94 d3 37 	call	0x6fa6	; 0x6fa6 <Print::println()>
    6fc4:	80 0f       	add	r24, r16
    6fc6:	91 1f       	adc	r25, r17
    6fc8:	df 91       	pop	r29
    6fca:	cf 91       	pop	r28
    6fcc:	1f 91       	pop	r17
    6fce:	0f 91       	pop	r16
    6fd0:	08 95       	ret

00006fd2 <Print::println(char const*)>:
_ZN5Print7printlnEPKc():
    6fd2:	0f 93       	push	r16
    6fd4:	1f 93       	push	r17
    6fd6:	cf 93       	push	r28
    6fd8:	df 93       	push	r29
    6fda:	8c 01       	movw	r16, r24
_ZN5Print5writeEPKc():
    6fdc:	d0 e0       	ldi	r29, 0x00	; 0
    6fde:	c0 e0       	ldi	r28, 0x00	; 0
    6fe0:	61 15       	cp	r22, r1
    6fe2:	71 05       	cpc	r23, r1
    6fe4:	19 f0       	breq	.+6      	; 0x6fec <Print::println(char const*)+0x1a>
    6fe6:	0e 94 a7 37 	call	0x6f4e	; 0x6f4e <Print::write(char const*) [clone .part.2]>
    6fea:	ec 01       	movw	r28, r24
_ZN5Print7printlnEPKc():
    6fec:	c8 01       	movw	r24, r16
    6fee:	0e 94 d3 37 	call	0x6fa6	; 0x6fa6 <Print::println()>
    6ff2:	8c 0f       	add	r24, r28
    6ff4:	9d 1f       	adc	r25, r29
    6ff6:	df 91       	pop	r29
    6ff8:	cf 91       	pop	r28
    6ffa:	1f 91       	pop	r17
    6ffc:	0f 91       	pop	r16
    6ffe:	08 95       	ret

00007000 <Print::printNumber(unsigned long, unsigned char)>:
_ZN5Print11printNumberEmh():
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/Print.cpp:233

// Private Methods /////////////////////////////////////////////////////////////

size_t Print::printNumber(unsigned long n, uint8_t base)
{
    7000:	8f 92       	push	r8
    7002:	9f 92       	push	r9
    7004:	af 92       	push	r10
    7006:	bf 92       	push	r11
    7008:	ef 92       	push	r14
    700a:	ff 92       	push	r15
    700c:	0f 93       	push	r16
    700e:	1f 93       	push	r17
    7010:	cf 93       	push	r28
    7012:	df 93       	push	r29
    7014:	cd b7       	in	r28, 0x3d	; 61
    7016:	de b7       	in	r29, 0x3e	; 62
    7018:	a1 97       	sbiw	r28, 0x21	; 33
    701a:	0f b6       	in	r0, 0x3f	; 63
    701c:	f8 94       	cli
    701e:	de bf       	out	0x3e, r29	; 62
    7020:	0f be       	out	0x3f, r0	; 63
    7022:	cd bf       	out	0x3d, r28	; 61
    7024:	7c 01       	movw	r14, r24
    7026:	fa 01       	movw	r30, r20
    7028:	cb 01       	movw	r24, r22
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/Print.cpp:237
  char buf[8 * sizeof(long) + 1]; // Assumes 8-bit chars plus zero byte.
  char *str = &buf[sizeof(buf) - 1];

  *str = '\0';
    702a:	19 a2       	std	Y+33, r1	; 0x21
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/Print.cpp:240

  // prevent crash if called with base == 1
  if (base < 2) base = 10;
    702c:	22 30       	cpi	r18, 0x02	; 2
    702e:	08 f4       	brcc	.+2      	; 0x7032 <Print::printNumber(unsigned long, unsigned char)+0x32>
    7030:	2a e0       	ldi	r18, 0x0A	; 10
    7032:	8e 01       	movw	r16, r28
    7034:	0f 5d       	subi	r16, 0xDF	; 223
    7036:	1f 4f       	sbci	r17, 0xFF	; 255
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/Print.cpp:243

  do {
    char c = n % base;
    7038:	82 2e       	mov	r8, r18
    703a:	91 2c       	mov	r9, r1
    703c:	b1 2c       	mov	r11, r1
    703e:	a1 2c       	mov	r10, r1
    7040:	bf 01       	movw	r22, r30
    7042:	a5 01       	movw	r20, r10
    7044:	94 01       	movw	r18, r8
    7046:	0e 94 02 3a 	call	0x7404	; 0x7404 <__udivmodsi4>
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/Print.cpp:244
    n /= base;
    704a:	f9 01       	movw	r30, r18
    704c:	ca 01       	movw	r24, r20
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/Print.cpp:246

    *--str = c < 10 ? c + '0' : c + 'A' - 10;
    704e:	6a 30       	cpi	r22, 0x0A	; 10
    7050:	0c f5       	brge	.+66     	; 0x7094 <Print::printNumber(unsigned long, unsigned char)+0x94>
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/Print.cpp:246 (discriminator 1)
    7052:	60 5d       	subi	r22, 0xD0	; 208
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/Print.cpp:246 (discriminator 4)
    7054:	d8 01       	movw	r26, r16
    7056:	6e 93       	st	-X, r22
    7058:	8d 01       	movw	r16, r26
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/Print.cpp:247 (discriminator 4)
  } while(n);
    705a:	23 2b       	or	r18, r19
    705c:	24 2b       	or	r18, r20
    705e:	25 2b       	or	r18, r21
    7060:	79 f7       	brne	.-34     	; 0x7040 <Print::printNumber(unsigned long, unsigned char)+0x40>
_ZN5Print5writeEPKc():
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/Print.h:53
    int getWriteError() { return write_error; }
    void clearWriteError() { setWriteError(0); }
  
    virtual size_t write(uint8_t) = 0;
    size_t write(const char *str) {
      if (str == NULL) return 0;
    7062:	90 e0       	ldi	r25, 0x00	; 0
    7064:	80 e0       	ldi	r24, 0x00	; 0
    7066:	10 97       	sbiw	r26, 0x00	; 0
    7068:	21 f0       	breq	.+8      	; 0x7072 <Print::printNumber(unsigned long, unsigned char)+0x72>
    706a:	bd 01       	movw	r22, r26
    706c:	c7 01       	movw	r24, r14
    706e:	0e 94 a7 37 	call	0x6f4e	; 0x6f4e <Print::write(char const*) [clone .part.2]>
_ZN5Print11printNumberEmh():
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/Print.cpp:250

  return write(str);
}
    7072:	a1 96       	adiw	r28, 0x21	; 33
    7074:	0f b6       	in	r0, 0x3f	; 63
    7076:	f8 94       	cli
    7078:	de bf       	out	0x3e, r29	; 62
    707a:	0f be       	out	0x3f, r0	; 63
    707c:	cd bf       	out	0x3d, r28	; 61
    707e:	df 91       	pop	r29
    7080:	cf 91       	pop	r28
    7082:	1f 91       	pop	r17
    7084:	0f 91       	pop	r16
    7086:	ff 90       	pop	r15
    7088:	ef 90       	pop	r14
    708a:	bf 90       	pop	r11
    708c:	af 90       	pop	r10
    708e:	9f 90       	pop	r9
    7090:	8f 90       	pop	r8
    7092:	08 95       	ret
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/Print.cpp:246 (discriminator 2)

  do {
    char c = n % base;
    n /= base;

    *--str = c < 10 ? c + '0' : c + 'A' - 10;
    7094:	69 5c       	subi	r22, 0xC9	; 201
    7096:	de cf       	rjmp	.-68     	; 0x7054 <Print::printNumber(unsigned long, unsigned char)+0x54>

00007098 <Print::print(long, int)>:
_ZN5Print5printEli():
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/Print.cpp:88
{
  return print((unsigned long) n, base);
}

size_t Print::print(long n, int base)
{
    7098:	cf 92       	push	r12
    709a:	df 92       	push	r13
    709c:	ef 92       	push	r14
    709e:	ff 92       	push	r15
    70a0:	0f 93       	push	r16
    70a2:	1f 93       	push	r17
    70a4:	cf 93       	push	r28
    70a6:	df 93       	push	r29
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/Print.cpp:89
  if (base == 0) {
    70a8:	21 15       	cp	r18, r1
    70aa:	31 05       	cpc	r19, r1
    70ac:	81 f4       	brne	.+32     	; 0x70ce <Print::print(long, int)+0x36>
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/Print.cpp:90
    return write(n);
    70ae:	dc 01       	movw	r26, r24
    70b0:	ed 91       	ld	r30, X+
    70b2:	fc 91       	ld	r31, X
    70b4:	01 90       	ld	r0, Z+
    70b6:	f0 81       	ld	r31, Z
    70b8:	e0 2d       	mov	r30, r0
    70ba:	64 2f       	mov	r22, r20
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/Print.cpp:101
    }
    return printNumber(n, 10);
  } else {
    return printNumber(n, base);
  }
}
    70bc:	df 91       	pop	r29
    70be:	cf 91       	pop	r28
    70c0:	1f 91       	pop	r17
    70c2:	0f 91       	pop	r16
    70c4:	ff 90       	pop	r15
    70c6:	ef 90       	pop	r14
    70c8:	df 90       	pop	r13
    70ca:	cf 90       	pop	r12
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/Print.cpp:90
}

size_t Print::print(long n, int base)
{
  if (base == 0) {
    return write(n);
    70cc:	09 94       	ijmp
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/Print.cpp:91
  } else if (base == 10) {
    70ce:	2a 30       	cpi	r18, 0x0A	; 10
    70d0:	31 05       	cpc	r19, r1
    70d2:	01 f5       	brne	.+64     	; 0x7114 <Print::print(long, int)+0x7c>
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/Print.cpp:97
    if (n < 0) {
      int t = print('-');
      n = -n;
      return printNumber(n, 10) + t;
    }
    return printNumber(n, 10);
    70d4:	2a e0       	ldi	r18, 0x0A	; 10
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/Print.cpp:92
size_t Print::print(long n, int base)
{
  if (base == 0) {
    return write(n);
  } else if (base == 10) {
    if (n < 0) {
    70d6:	77 ff       	sbrs	r23, 7
    70d8:	1d c0       	rjmp	.+58     	; 0x7114 <Print::print(long, int)+0x7c>
    70da:	6a 01       	movw	r12, r20
    70dc:	7b 01       	movw	r14, r22
    70de:	ec 01       	movw	r28, r24
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/Print.cpp:93
      int t = print('-');
    70e0:	6d e2       	ldi	r22, 0x2D	; 45
    70e2:	0e 94 cc 37 	call	0x6f98	; 0x6f98 <Print::print(char)>
    70e6:	8c 01       	movw	r16, r24
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/Print.cpp:94
      n = -n;
    70e8:	44 27       	eor	r20, r20
    70ea:	55 27       	eor	r21, r21
    70ec:	ba 01       	movw	r22, r20
    70ee:	4c 19       	sub	r20, r12
    70f0:	5d 09       	sbc	r21, r13
    70f2:	6e 09       	sbc	r22, r14
    70f4:	7f 09       	sbc	r23, r15
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/Print.cpp:95
      return printNumber(n, 10) + t;
    70f6:	2a e0       	ldi	r18, 0x0A	; 10
    70f8:	ce 01       	movw	r24, r28
    70fa:	0e 94 00 38 	call	0x7000	; 0x7000 <Print::printNumber(unsigned long, unsigned char)>
    70fe:	80 0f       	add	r24, r16
    7100:	91 1f       	adc	r25, r17
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/Print.cpp:101
    }
    return printNumber(n, 10);
  } else {
    return printNumber(n, base);
  }
}
    7102:	df 91       	pop	r29
    7104:	cf 91       	pop	r28
    7106:	1f 91       	pop	r17
    7108:	0f 91       	pop	r16
    710a:	ff 90       	pop	r15
    710c:	ef 90       	pop	r14
    710e:	df 90       	pop	r13
    7110:	cf 90       	pop	r12
    7112:	08 95       	ret
    7114:	df 91       	pop	r29
    7116:	cf 91       	pop	r28
    7118:	1f 91       	pop	r17
    711a:	0f 91       	pop	r16
    711c:	ff 90       	pop	r15
    711e:	ef 90       	pop	r14
    7120:	df 90       	pop	r13
    7122:	cf 90       	pop	r12
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/Print.cpp:99
      n = -n;
      return printNumber(n, 10) + t;
    }
    return printNumber(n, 10);
  } else {
    return printNumber(n, base);
    7124:	0c 94 00 38 	jmp	0x7000	; 0x7000 <Print::printNumber(unsigned long, unsigned char)>

00007128 <Print::print(int, int)>:
_ZN5Print5printEii():
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/Print.cpp:78
{
  return print((unsigned long) b, base);
}

size_t Print::print(int n, int base)
{
    7128:	9a 01       	movw	r18, r20
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/Print.cpp:79
  return print((long) n, base);
    712a:	ab 01       	movw	r20, r22
    712c:	77 0f       	add	r23, r23
    712e:	66 0b       	sbc	r22, r22
    7130:	77 0b       	sbc	r23, r23
    7132:	0c 94 4c 38 	jmp	0x7098	; 0x7098 <Print::print(long, int)>

00007136 <Print::println(int, int)>:
_ZN5Print7printlnEii():
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/Print.cpp:160
  n += println();
  return n;
}

size_t Print::println(int num, int base)
{
    7136:	0f 93       	push	r16
    7138:	1f 93       	push	r17
    713a:	cf 93       	push	r28
    713c:	df 93       	push	r29
    713e:	ec 01       	movw	r28, r24
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/Print.cpp:161
  size_t n = print(num, base);
    7140:	0e 94 94 38 	call	0x7128	; 0x7128 <Print::print(int, int)>
    7144:	8c 01       	movw	r16, r24
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/Print.cpp:162
  n += println();
    7146:	ce 01       	movw	r24, r28
    7148:	0e 94 d3 37 	call	0x6fa6	; 0x6fa6 <Print::println()>
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/Print.cpp:164
  return n;
}
    714c:	80 0f       	add	r24, r16
    714e:	91 1f       	adc	r25, r17
    7150:	df 91       	pop	r29
    7152:	cf 91       	pop	r28
    7154:	1f 91       	pop	r17
    7156:	0f 91       	pop	r16
    7158:	08 95       	ret

0000715a <String::~String()>:
_ZN6StringD2Ev():
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/WString.cpp:341

unsigned char String::concat(const __FlashStringHelper * str)
{
  if (!str) return 0;
  int length = strlen_P((const char *) str);
  if (length == 0) return 1;
    715a:	fc 01       	movw	r30, r24
    715c:	80 81       	ld	r24, Z
    715e:	91 81       	ldd	r25, Z+1	; 0x01
    7160:	0c 94 e8 3a 	jmp	0x75d0	; 0x75d0 <free>

00007164 <String::invalidate()>:
_ZN6String10invalidateEv():
    7164:	cf 93       	push	r28
    7166:	df 93       	push	r29
    7168:	ec 01       	movw	r28, r24
    716a:	88 81       	ld	r24, Y
    716c:	99 81       	ldd	r25, Y+1	; 0x01
    716e:	00 97       	sbiw	r24, 0x00	; 0
    7170:	11 f0       	breq	.+4      	; 0x7176 <String::invalidate()+0x12>
    7172:	0e 94 e8 3a 	call	0x75d0	; 0x75d0 <free>
    7176:	19 82       	std	Y+1, r1	; 0x01
    7178:	18 82       	st	Y, r1
    717a:	1d 82       	std	Y+5, r1	; 0x05
    717c:	1c 82       	std	Y+4, r1	; 0x04
    717e:	1b 82       	std	Y+3, r1	; 0x03
    7180:	1a 82       	std	Y+2, r1	; 0x02
    7182:	df 91       	pop	r29
    7184:	cf 91       	pop	r28
    7186:	08 95       	ret

00007188 <String::changeBuffer(unsigned int)>:
_ZN6String12changeBufferEj():
    7188:	0f 93       	push	r16
    718a:	1f 93       	push	r17
    718c:	cf 93       	push	r28
    718e:	df 93       	push	r29
    7190:	ec 01       	movw	r28, r24
    7192:	8b 01       	movw	r16, r22
    7194:	6f 5f       	subi	r22, 0xFF	; 255
    7196:	7f 4f       	sbci	r23, 0xFF	; 255
    7198:	88 81       	ld	r24, Y
    719a:	99 81       	ldd	r25, Y+1	; 0x01
    719c:	0e 94 71 3b 	call	0x76e2	; 0x76e2 <realloc>
    71a0:	00 97       	sbiw	r24, 0x00	; 0
    71a2:	51 f0       	breq	.+20     	; 0x71b8 <String::changeBuffer(unsigned int)+0x30>
    71a4:	99 83       	std	Y+1, r25	; 0x01
    71a6:	88 83       	st	Y, r24
    71a8:	1b 83       	std	Y+3, r17	; 0x03
    71aa:	0a 83       	std	Y+2, r16	; 0x02
    71ac:	81 e0       	ldi	r24, 0x01	; 1
    71ae:	df 91       	pop	r29
    71b0:	cf 91       	pop	r28
    71b2:	1f 91       	pop	r17
    71b4:	0f 91       	pop	r16
    71b6:	08 95       	ret
    71b8:	80 e0       	ldi	r24, 0x00	; 0
    71ba:	f9 cf       	rjmp	.-14     	; 0x71ae <String::changeBuffer(unsigned int)+0x26>

000071bc <String::reserve(unsigned int)>:
_ZN6String7reserveEj():
    71bc:	cf 93       	push	r28
    71be:	df 93       	push	r29
    71c0:	ec 01       	movw	r28, r24
    71c2:	88 81       	ld	r24, Y
    71c4:	99 81       	ldd	r25, Y+1	; 0x01
    71c6:	89 2b       	or	r24, r25
    71c8:	49 f0       	breq	.+18     	; 0x71dc <String::reserve(unsigned int)+0x20>
    71ca:	8a 81       	ldd	r24, Y+2	; 0x02
    71cc:	9b 81       	ldd	r25, Y+3	; 0x03
    71ce:	86 17       	cp	r24, r22
    71d0:	97 07       	cpc	r25, r23
    71d2:	20 f0       	brcs	.+8      	; 0x71dc <String::reserve(unsigned int)+0x20>
    71d4:	81 e0       	ldi	r24, 0x01	; 1
    71d6:	df 91       	pop	r29
    71d8:	cf 91       	pop	r28
    71da:	08 95       	ret
    71dc:	ce 01       	movw	r24, r28
    71de:	0e 94 c4 38 	call	0x7188	; 0x7188 <String::changeBuffer(unsigned int)>
    71e2:	88 23       	and	r24, r24
    71e4:	c1 f3       	breq	.-16     	; 0x71d6 <String::reserve(unsigned int)+0x1a>
    71e6:	8c 81       	ldd	r24, Y+4	; 0x04
    71e8:	9d 81       	ldd	r25, Y+5	; 0x05
    71ea:	89 2b       	or	r24, r25
    71ec:	99 f7       	brne	.-26     	; 0x71d4 <String::reserve(unsigned int)+0x18>
    71ee:	e8 81       	ld	r30, Y
    71f0:	f9 81       	ldd	r31, Y+1	; 0x01
    71f2:	10 82       	st	Z, r1
    71f4:	ef cf       	rjmp	.-34     	; 0x71d4 <String::reserve(unsigned int)+0x18>

000071f6 <String::copy(char const*, unsigned int)>:
_ZN6String4copyEPKcj():
    71f6:	ef 92       	push	r14
    71f8:	ff 92       	push	r15
    71fa:	0f 93       	push	r16
    71fc:	1f 93       	push	r17
    71fe:	cf 93       	push	r28
    7200:	df 93       	push	r29
    7202:	ec 01       	movw	r28, r24
    7204:	7b 01       	movw	r14, r22
    7206:	8a 01       	movw	r16, r20
    7208:	ba 01       	movw	r22, r20
    720a:	0e 94 de 38 	call	0x71bc	; 0x71bc <String::reserve(unsigned int)>
    720e:	81 11       	cpse	r24, r1
    7210:	0b c0       	rjmp	.+22     	; 0x7228 <String::copy(char const*, unsigned int)+0x32>
    7212:	ce 01       	movw	r24, r28
    7214:	0e 94 b2 38 	call	0x7164	; 0x7164 <String::invalidate()>
    7218:	ce 01       	movw	r24, r28
    721a:	df 91       	pop	r29
    721c:	cf 91       	pop	r28
    721e:	1f 91       	pop	r17
    7220:	0f 91       	pop	r16
    7222:	ff 90       	pop	r15
    7224:	ef 90       	pop	r14
    7226:	08 95       	ret
    7228:	1d 83       	std	Y+5, r17	; 0x05
    722a:	0c 83       	std	Y+4, r16	; 0x04
    722c:	b7 01       	movw	r22, r14
    722e:	88 81       	ld	r24, Y
    7230:	99 81       	ldd	r25, Y+1	; 0x01
    7232:	0e 94 60 3c 	call	0x78c0	; 0x78c0 <strcpy>
    7236:	f0 cf       	rjmp	.-32     	; 0x7218 <String::copy(char const*, unsigned int)+0x22>

00007238 <String::String(char const*)>:
_ZN6String4initEv():
    7238:	fc 01       	movw	r30, r24
    723a:	11 82       	std	Z+1, r1	; 0x01
    723c:	10 82       	st	Z, r1
    723e:	13 82       	std	Z+3, r1	; 0x03
    7240:	12 82       	std	Z+2, r1	; 0x02
    7242:	15 82       	std	Z+5, r1	; 0x05
    7244:	14 82       	std	Z+4, r1	; 0x04
_ZN6StringC2EPKc():
    7246:	61 15       	cp	r22, r1
    7248:	71 05       	cpc	r23, r1
    724a:	51 f0       	breq	.+20     	; 0x7260 <String::String(char const*)+0x28>
    724c:	fb 01       	movw	r30, r22
    724e:	01 90       	ld	r0, Z+
    7250:	00 20       	and	r0, r0
    7252:	e9 f7       	brne	.-6      	; 0x724e <String::String(char const*)+0x16>
    7254:	31 97       	sbiw	r30, 0x01	; 1
    7256:	af 01       	movw	r20, r30
    7258:	46 1b       	sub	r20, r22
    725a:	57 0b       	sbc	r21, r23
    725c:	0c 94 fb 38 	jmp	0x71f6	; 0x71f6 <String::copy(char const*, unsigned int)>
    7260:	08 95       	ret

00007262 <String::operator=(char const*) [clone .part.3]>:
_ZN6StringaSEPKc():
    7262:	fb 01       	movw	r30, r22
    7264:	01 90       	ld	r0, Z+
    7266:	00 20       	and	r0, r0
    7268:	e9 f7       	brne	.-6      	; 0x7264 <String::operator=(char const*) [clone .part.3]+0x2>
    726a:	31 97       	sbiw	r30, 0x01	; 1
    726c:	af 01       	movw	r20, r30
    726e:	46 1b       	sub	r20, r22
    7270:	57 0b       	sbc	r21, r23
    7272:	0c 94 fb 38 	jmp	0x71f6	; 0x71f6 <String::copy(char const*, unsigned int)>

00007276 <String::String(int, unsigned char)>:
_ZN6StringC2Eih():
    7276:	0f 93       	push	r16
    7278:	1f 93       	push	r17
    727a:	cf 93       	push	r28
    727c:	df 93       	push	r29
    727e:	cd b7       	in	r28, 0x3d	; 61
    7280:	de b7       	in	r29, 0x3e	; 62
    7282:	62 97       	sbiw	r28, 0x12	; 18
    7284:	0f b6       	in	r0, 0x3f	; 63
    7286:	f8 94       	cli
    7288:	de bf       	out	0x3e, r29	; 62
    728a:	0f be       	out	0x3f, r0	; 63
    728c:	cd bf       	out	0x3d, r28	; 61
    728e:	8c 01       	movw	r16, r24
    7290:	cb 01       	movw	r24, r22
_ZN6String4initEv():
    7292:	f8 01       	movw	r30, r16
    7294:	11 82       	std	Z+1, r1	; 0x01
    7296:	10 82       	st	Z, r1
    7298:	13 82       	std	Z+3, r1	; 0x03
    729a:	12 82       	std	Z+2, r1	; 0x02
    729c:	15 82       	std	Z+5, r1	; 0x05
    729e:	14 82       	std	Z+4, r1	; 0x04
_ZN6StringC2Eih():
    72a0:	50 e0       	ldi	r21, 0x00	; 0
itoa():
    72a2:	be 01       	movw	r22, r28
    72a4:	6f 5f       	subi	r22, 0xFF	; 255
    72a6:	7f 4f       	sbci	r23, 0xFF	; 255
    72a8:	0e 94 67 3c 	call	0x78ce	; 0x78ce <itoa>
_ZN6StringaSEPKc():
    72ac:	be 01       	movw	r22, r28
    72ae:	6f 5f       	subi	r22, 0xFF	; 255
    72b0:	7f 4f       	sbci	r23, 0xFF	; 255
    72b2:	c8 01       	movw	r24, r16
    72b4:	0e 94 31 39 	call	0x7262	; 0x7262 <String::operator=(char const*) [clone .part.3]>
_ZN6StringC2Eih():
    72b8:	62 96       	adiw	r28, 0x12	; 18
    72ba:	0f b6       	in	r0, 0x3f	; 63
    72bc:	f8 94       	cli
    72be:	de bf       	out	0x3e, r29	; 62
    72c0:	0f be       	out	0x3f, r0	; 63
    72c2:	cd bf       	out	0x3d, r28	; 61
    72c4:	df 91       	pop	r29
    72c6:	cf 91       	pop	r28
    72c8:	1f 91       	pop	r17
    72ca:	0f 91       	pop	r16
    72cc:	08 95       	ret

000072ce <String::operator=(String const&)>:
_ZN6StringaSERKS_():
    72ce:	cf 93       	push	r28
    72d0:	df 93       	push	r29
    72d2:	ec 01       	movw	r28, r24
    72d4:	fb 01       	movw	r30, r22
    72d6:	86 17       	cp	r24, r22
    72d8:	97 07       	cpc	r25, r23
    72da:	49 f0       	breq	.+18     	; 0x72ee <String::operator=(String const&)+0x20>
    72dc:	60 81       	ld	r22, Z
    72de:	71 81       	ldd	r23, Z+1	; 0x01
    72e0:	61 15       	cp	r22, r1
    72e2:	71 05       	cpc	r23, r1
    72e4:	41 f0       	breq	.+16     	; 0x72f6 <String::operator=(String const&)+0x28>
    72e6:	44 81       	ldd	r20, Z+4	; 0x04
    72e8:	55 81       	ldd	r21, Z+5	; 0x05
    72ea:	0e 94 fb 38 	call	0x71f6	; 0x71f6 <String::copy(char const*, unsigned int)>
    72ee:	ce 01       	movw	r24, r28
    72f0:	df 91       	pop	r29
    72f2:	cf 91       	pop	r28
    72f4:	08 95       	ret
    72f6:	0e 94 b2 38 	call	0x7164	; 0x7164 <String::invalidate()>
    72fa:	f9 cf       	rjmp	.-14     	; 0x72ee <String::operator=(String const&)+0x20>

000072fc <String::String(String const&)>:
_ZN6String4initEv():
    72fc:	fc 01       	movw	r30, r24
    72fe:	11 82       	std	Z+1, r1	; 0x01
    7300:	10 82       	st	Z, r1
    7302:	13 82       	std	Z+3, r1	; 0x03
    7304:	12 82       	std	Z+2, r1	; 0x02
    7306:	15 82       	std	Z+5, r1	; 0x05
    7308:	14 82       	std	Z+4, r1	; 0x04
_ZN6StringC2ERKS_():
    730a:	0c 94 67 39 	jmp	0x72ce	; 0x72ce <String::operator=(String const&)>

0000730e <String::concat(char const*, unsigned int)>:
_ZN6String6concatEPKcj():
    730e:	ef 92       	push	r14
    7310:	ff 92       	push	r15
    7312:	0f 93       	push	r16
    7314:	1f 93       	push	r17
    7316:	cf 93       	push	r28
    7318:	df 93       	push	r29
    731a:	61 15       	cp	r22, r1
    731c:	71 05       	cpc	r23, r1
    731e:	41 f4       	brne	.+16     	; 0x7330 <String::concat(char const*, unsigned int)+0x22>
    7320:	80 e0       	ldi	r24, 0x00	; 0
    7322:	df 91       	pop	r29
    7324:	cf 91       	pop	r28
    7326:	1f 91       	pop	r17
    7328:	0f 91       	pop	r16
    732a:	ff 90       	pop	r15
    732c:	ef 90       	pop	r14
    732e:	08 95       	ret
    7330:	41 15       	cp	r20, r1
    7332:	51 05       	cpc	r21, r1
    7334:	b1 f0       	breq	.+44     	; 0x7362 <String::concat(char const*, unsigned int)+0x54>
    7336:	7b 01       	movw	r14, r22
    7338:	ec 01       	movw	r28, r24
    733a:	0c 81       	ldd	r16, Y+4	; 0x04
    733c:	1d 81       	ldd	r17, Y+5	; 0x05
    733e:	04 0f       	add	r16, r20
    7340:	15 1f       	adc	r17, r21
    7342:	b8 01       	movw	r22, r16
    7344:	0e 94 de 38 	call	0x71bc	; 0x71bc <String::reserve(unsigned int)>
    7348:	88 23       	and	r24, r24
    734a:	51 f3       	breq	.-44     	; 0x7320 <String::concat(char const*, unsigned int)+0x12>
    734c:	28 81       	ld	r18, Y
    734e:	39 81       	ldd	r19, Y+1	; 0x01
    7350:	8c 81       	ldd	r24, Y+4	; 0x04
    7352:	9d 81       	ldd	r25, Y+5	; 0x05
    7354:	b7 01       	movw	r22, r14
    7356:	82 0f       	add	r24, r18
    7358:	93 1f       	adc	r25, r19
    735a:	0e 94 60 3c 	call	0x78c0	; 0x78c0 <strcpy>
    735e:	1d 83       	std	Y+5, r17	; 0x05
    7360:	0c 83       	std	Y+4, r16	; 0x04
    7362:	81 e0       	ldi	r24, 0x01	; 1
    7364:	de cf       	rjmp	.-68     	; 0x7322 <String::concat(char const*, unsigned int)+0x14>

00007366 <String::concat(char const*)>:
_ZN6String6concatEPKc():
    7366:	61 15       	cp	r22, r1
    7368:	71 05       	cpc	r23, r1
    736a:	51 f0       	breq	.+20     	; 0x7380 <String::concat(char const*)+0x1a>
    736c:	fb 01       	movw	r30, r22
    736e:	01 90       	ld	r0, Z+
    7370:	00 20       	and	r0, r0
    7372:	e9 f7       	brne	.-6      	; 0x736e <String::concat(char const*)+0x8>
    7374:	31 97       	sbiw	r30, 0x01	; 1
    7376:	af 01       	movw	r20, r30
    7378:	46 1b       	sub	r20, r22
    737a:	57 0b       	sbc	r21, r23
    737c:	0c 94 87 39 	jmp	0x730e	; 0x730e <String::concat(char const*, unsigned int)>
    7380:	80 e0       	ldi	r24, 0x00	; 0
    7382:	08 95       	ret

00007384 <operator+(StringSumHelper const&, String const&)>:
_ZplRK15StringSumHelperRK6String():
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/WString.cpp:354
/*********************************************/
/*  Concatenate                              */
/*********************************************/

StringSumHelper & operator + (const StringSumHelper &lhs, const String &rhs)
{
    7384:	cf 93       	push	r28
    7386:	df 93       	push	r29
    7388:	ec 01       	movw	r28, r24
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/WString.cpp:356
  StringSumHelper &a = const_cast<StringSumHelper&>(lhs);
  if (!a.concat(rhs.buffer, rhs.len)) a.invalidate();
    738a:	fb 01       	movw	r30, r22
    738c:	44 81       	ldd	r20, Z+4	; 0x04
    738e:	55 81       	ldd	r21, Z+5	; 0x05
    7390:	60 81       	ld	r22, Z
    7392:	71 81       	ldd	r23, Z+1	; 0x01
    7394:	0e 94 87 39 	call	0x730e	; 0x730e <String::concat(char const*, unsigned int)>
    7398:	81 11       	cpse	r24, r1
    739a:	03 c0       	rjmp	.+6      	; 0x73a2 <operator+(StringSumHelper const&, String const&)+0x1e>
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/WString.cpp:356 (discriminator 1)
    739c:	ce 01       	movw	r24, r28
    739e:	0e 94 b2 38 	call	0x7164	; 0x7164 <String::invalidate()>
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/WString.cpp:358
  return a;
}
    73a2:	ce 01       	movw	r24, r28
    73a4:	df 91       	pop	r29
    73a6:	cf 91       	pop	r28
    73a8:	08 95       	ret

000073aa <operator+(StringSumHelper const&, char const*)>:
_ZplRK15StringSumHelperPKc():
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/WString.cpp:361

StringSumHelper & operator + (const StringSumHelper &lhs, const char *cstr)
{
    73aa:	cf 93       	push	r28
    73ac:	df 93       	push	r29
    73ae:	ec 01       	movw	r28, r24
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/WString.cpp:363
  StringSumHelper &a = const_cast<StringSumHelper&>(lhs);
  if (!cstr || !a.concat(cstr, strlen(cstr))) a.invalidate();
    73b0:	61 15       	cp	r22, r1
    73b2:	71 05       	cpc	r23, r1
    73b4:	39 f4       	brne	.+14     	; 0x73c4 <operator+(StringSumHelper const&, char const*)+0x1a>
    73b6:	ce 01       	movw	r24, r28
    73b8:	0e 94 b2 38 	call	0x7164	; 0x7164 <String::invalidate()>
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/WString.cpp:365
  return a;
}
    73bc:	ce 01       	movw	r24, r28
    73be:	df 91       	pop	r29
    73c0:	cf 91       	pop	r28
    73c2:	08 95       	ret
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/WString.cpp:363 (discriminator 2)
}

StringSumHelper & operator + (const StringSumHelper &lhs, const char *cstr)
{
  StringSumHelper &a = const_cast<StringSumHelper&>(lhs);
  if (!cstr || !a.concat(cstr, strlen(cstr))) a.invalidate();
    73c4:	fb 01       	movw	r30, r22
    73c6:	01 90       	ld	r0, Z+
    73c8:	00 20       	and	r0, r0
    73ca:	e9 f7       	brne	.-6      	; 0x73c6 <operator+(StringSumHelper const&, char const*)+0x1c>
    73cc:	31 97       	sbiw	r30, 0x01	; 1
    73ce:	af 01       	movw	r20, r30
    73d0:	46 1b       	sub	r20, r22
    73d2:	57 0b       	sbc	r21, r23
    73d4:	0e 94 87 39 	call	0x730e	; 0x730e <String::concat(char const*, unsigned int)>
    73d8:	88 23       	and	r24, r24
    73da:	69 f3       	breq	.-38     	; 0x73b6 <operator+(StringSumHelper const&, char const*)+0xc>
    73dc:	ef cf       	rjmp	.-34     	; 0x73bc <operator+(StringSumHelper const&, char const*)+0x12>

000073de <__cxa_pure_virtual>:
__cxa_pure_virtual():
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/abi.cpp:27
extern "C" void __cxa_deleted_virtual(void) __attribute__ ((__noreturn__));

void __cxa_pure_virtual(void) {
  // We might want to write some diagnostics to uart in this case
  //std::terminate();
  abort();
    73de:	0e 94 52 3c 	call	0x78a4	; 0x78a4 <abort>

000073e2 <initVariant>:
initVariant():
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/main.cpp:28
int atexit(void (* /*func*/ )()) { return 0; }

// Weak empty variant initialization function.
// May be redefined by variant files.
void initVariant() __attribute__((weak));
void initVariant() { }
    73e2:	08 95       	ret

000073e4 <main>:
main():
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/main.cpp:35
//void setupUSB() __attribute__((weak));
//void setupUSB() { }

int main(void)
{
  init();
    73e4:	0e 94 ae 34 	call	0x695c	; 0x695c <init>
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/main.cpp:37

  initVariant();
    73e8:	0e 94 f1 39 	call	0x73e2	; 0x73e2 <initVariant>
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/main.cpp:43

#if defined(USBCON)
  USBDevice.attach();
#endif
  
  setup();
    73ec:	0e 94 af 03 	call	0x75e	; 0x75e <setup>
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/main.cpp:47
    
  for (;;) {
    loop();
    if (serialEventRun) serialEventRun();
    73f0:	c8 ee       	ldi	r28, 0xE8	; 232
    73f2:	d5 e3       	ldi	r29, 0x35	; 53
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/main.cpp:46
#endif
  
  setup();
    
  for (;;) {
    loop();
    73f4:	0e 94 07 05 	call	0xa0e	; 0xa0e <loop>
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/main.cpp:47
    if (serialEventRun) serialEventRun();
    73f8:	20 97       	sbiw	r28, 0x00	; 0
    73fa:	e1 f3       	breq	.-8      	; 0x73f4 <main+0x10>
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/main.cpp:47 (discriminator 1)
    73fc:	0e 94 e8 35 	call	0x6bd0	; 0x6bd0 <serialEventRun()>
    7400:	f9 cf       	rjmp	.-14     	; 0x73f4 <main+0x10>

00007402 <yield>:
__empty():
/Users/DS 1/Library/Arduino15/packages/MightyCore/hardware/avr/2.1.3/cores/MCUdude_corefiles/hooks.c:30
 * Its defined as a weak symbol and it can be redefined to implement a
 * real cooperative scheduler.
 */
static void __empty() {
  // Empty
}
    7402:	08 95       	ret

00007404 <__udivmodsi4>:
__udivmodsi4():
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1638
    7404:	a1 e2       	ldi	r26, 0x21	; 33
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1639
    7406:	1a 2e       	mov	r1, r26
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1640
    7408:	aa 1b       	sub	r26, r26
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1641
    740a:	bb 1b       	sub	r27, r27
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1642
    740c:	fd 01       	movw	r30, r26
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1644
    740e:	0d c0       	rjmp	.+26     	; 0x742a <__udivmodsi4_ep>

00007410 <__udivmodsi4_loop>:
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1646
    7410:	aa 1f       	adc	r26, r26
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1647
    7412:	bb 1f       	adc	r27, r27
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1648
    7414:	ee 1f       	adc	r30, r30
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1649
    7416:	ff 1f       	adc	r31, r31
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1650
    7418:	a2 17       	cp	r26, r18
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1651
    741a:	b3 07       	cpc	r27, r19
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1652
    741c:	e4 07       	cpc	r30, r20
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1653
    741e:	f5 07       	cpc	r31, r21
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1654
    7420:	20 f0       	brcs	.+8      	; 0x742a <__udivmodsi4_ep>
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1655
    7422:	a2 1b       	sub	r26, r18
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1656
    7424:	b3 0b       	sbc	r27, r19
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1657
    7426:	e4 0b       	sbc	r30, r20
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1658
    7428:	f5 0b       	sbc	r31, r21

0000742a <__udivmodsi4_ep>:
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1660
    742a:	66 1f       	adc	r22, r22
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1661
    742c:	77 1f       	adc	r23, r23
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1662
    742e:	88 1f       	adc	r24, r24
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1663
    7430:	99 1f       	adc	r25, r25
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1664
    7432:	1a 94       	dec	r1
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1665
    7434:	69 f7       	brne	.-38     	; 0x7410 <__udivmodsi4_loop>
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1667
    7436:	60 95       	com	r22
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1668
    7438:	70 95       	com	r23
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1669
    743a:	80 95       	com	r24
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1670
    743c:	90 95       	com	r25
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1672
    743e:	9b 01       	movw	r18, r22
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1674
    7440:	ac 01       	movw	r20, r24
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1676
    7442:	bd 01       	movw	r22, r26
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1678
    7444:	cf 01       	movw	r24, r30
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1680
    7446:	08 95       	ret

00007448 <__divmodsi4>:
__divmodsi4():
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1686
    7448:	05 2e       	mov	r0, r21
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1687
    744a:	97 fb       	bst	r25, 7
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1688
    744c:	1e f4       	brtc	.+6      	; 0x7454 <__divmodsi4+0xc>
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1689
    744e:	00 94       	com	r0
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1690
    7450:	0e 94 3b 3a 	call	0x7476	; 0x7476 <__negsi2>
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1692
    7454:	57 fd       	sbrc	r21, 7
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1693
    7456:	07 d0       	rcall	.+14     	; 0x7466 <__divmodsi4_neg2>
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1694
    7458:	0e 94 02 3a 	call	0x7404	; 0x7404 <__udivmodsi4>
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1695
    745c:	07 fc       	sbrc	r0, 7
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1696
    745e:	03 d0       	rcall	.+6      	; 0x7466 <__divmodsi4_neg2>
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1697
    7460:	4e f4       	brtc	.+18     	; 0x7474 <__divmodsi4_exit>
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1698
    7462:	0c 94 3b 3a 	jmp	0x7476	; 0x7476 <__negsi2>

00007466 <__divmodsi4_neg2>:
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1701
    7466:	50 95       	com	r21
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1702
    7468:	40 95       	com	r20
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1703
    746a:	30 95       	com	r19
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1704
    746c:	21 95       	neg	r18
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1705
    746e:	3f 4f       	sbci	r19, 0xFF	; 255
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1706
    7470:	4f 4f       	sbci	r20, 0xFF	; 255
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1707
    7472:	5f 4f       	sbci	r21, 0xFF	; 255

00007474 <__divmodsi4_exit>:
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1709
    7474:	08 95       	ret

00007476 <__negsi2>:
__negsi2():
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1718
    7476:	90 95       	com	r25
    7478:	80 95       	com	r24
    747a:	70 95       	com	r23
    747c:	61 95       	neg	r22
    747e:	7f 4f       	sbci	r23, 0xFF	; 255
    7480:	8f 4f       	sbci	r24, 0xFF	; 255
    7482:	9f 4f       	sbci	r25, 0xFF	; 255
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1719
    7484:	08 95       	ret

00007486 <__tablejump2__>:
__tablejump2__():
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2296
    7486:	ee 0f       	add	r30, r30
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2297
    7488:	ff 1f       	adc	r31, r31
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2304
    748a:	00 24       	eor	r0, r0
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2305
    748c:	00 1c       	adc	r0, r0
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2306
    748e:	0b be       	out	0x3b, r0	; 59
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2312
    7490:	07 90       	elpm	r0, Z+
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2313
    7492:	f6 91       	elpm	r31, Z
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2314
    7494:	e0 2d       	mov	r30, r0
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2319
    7496:	09 94       	ijmp

00007498 <malloc>:
malloc():
    7498:	0f 93       	push	r16
    749a:	1f 93       	push	r17
    749c:	cf 93       	push	r28
    749e:	df 93       	push	r29
    74a0:	82 30       	cpi	r24, 0x02	; 2
    74a2:	91 05       	cpc	r25, r1
    74a4:	10 f4       	brcc	.+4      	; 0x74aa <malloc+0x12>
    74a6:	82 e0       	ldi	r24, 0x02	; 2
    74a8:	90 e0       	ldi	r25, 0x00	; 0
    74aa:	e0 91 71 0b 	lds	r30, 0x0B71	; 0x800b71 <__flp>
    74ae:	f0 91 72 0b 	lds	r31, 0x0B72	; 0x800b72 <__flp+0x1>
    74b2:	30 e0       	ldi	r19, 0x00	; 0
    74b4:	20 e0       	ldi	r18, 0x00	; 0
    74b6:	b0 e0       	ldi	r27, 0x00	; 0
    74b8:	a0 e0       	ldi	r26, 0x00	; 0
    74ba:	30 97       	sbiw	r30, 0x00	; 0
    74bc:	99 f4       	brne	.+38     	; 0x74e4 <malloc+0x4c>
    74be:	21 15       	cp	r18, r1
    74c0:	31 05       	cpc	r19, r1
    74c2:	09 f4       	brne	.+2      	; 0x74c6 <malloc+0x2e>
    74c4:	4a c0       	rjmp	.+148    	; 0x755a <malloc+0xc2>
    74c6:	28 1b       	sub	r18, r24
    74c8:	39 0b       	sbc	r19, r25
    74ca:	24 30       	cpi	r18, 0x04	; 4
    74cc:	31 05       	cpc	r19, r1
    74ce:	d8 f5       	brcc	.+118    	; 0x7546 <malloc+0xae>
    74d0:	8a 81       	ldd	r24, Y+2	; 0x02
    74d2:	9b 81       	ldd	r25, Y+3	; 0x03
    74d4:	61 15       	cp	r22, r1
    74d6:	71 05       	cpc	r23, r1
    74d8:	89 f1       	breq	.+98     	; 0x753c <malloc+0xa4>
    74da:	fb 01       	movw	r30, r22
    74dc:	93 83       	std	Z+3, r25	; 0x03
    74de:	82 83       	std	Z+2, r24	; 0x02
    74e0:	fe 01       	movw	r30, r28
    74e2:	11 c0       	rjmp	.+34     	; 0x7506 <malloc+0x6e>
    74e4:	40 81       	ld	r20, Z
    74e6:	51 81       	ldd	r21, Z+1	; 0x01
    74e8:	02 81       	ldd	r16, Z+2	; 0x02
    74ea:	13 81       	ldd	r17, Z+3	; 0x03
    74ec:	48 17       	cp	r20, r24
    74ee:	59 07       	cpc	r21, r25
    74f0:	e0 f0       	brcs	.+56     	; 0x752a <malloc+0x92>
    74f2:	48 17       	cp	r20, r24
    74f4:	59 07       	cpc	r21, r25
    74f6:	99 f4       	brne	.+38     	; 0x751e <malloc+0x86>
    74f8:	10 97       	sbiw	r26, 0x00	; 0
    74fa:	61 f0       	breq	.+24     	; 0x7514 <malloc+0x7c>
    74fc:	12 96       	adiw	r26, 0x02	; 2
    74fe:	0c 93       	st	X, r16
    7500:	12 97       	sbiw	r26, 0x02	; 2
    7502:	13 96       	adiw	r26, 0x03	; 3
    7504:	1c 93       	st	X, r17
    7506:	32 96       	adiw	r30, 0x02	; 2
    7508:	cf 01       	movw	r24, r30
    750a:	df 91       	pop	r29
    750c:	cf 91       	pop	r28
    750e:	1f 91       	pop	r17
    7510:	0f 91       	pop	r16
    7512:	08 95       	ret
    7514:	00 93 71 0b 	sts	0x0B71, r16	; 0x800b71 <__flp>
    7518:	10 93 72 0b 	sts	0x0B72, r17	; 0x800b72 <__flp+0x1>
    751c:	f4 cf       	rjmp	.-24     	; 0x7506 <malloc+0x6e>
    751e:	21 15       	cp	r18, r1
    7520:	31 05       	cpc	r19, r1
    7522:	51 f0       	breq	.+20     	; 0x7538 <malloc+0xa0>
    7524:	42 17       	cp	r20, r18
    7526:	53 07       	cpc	r21, r19
    7528:	38 f0       	brcs	.+14     	; 0x7538 <malloc+0xa0>
    752a:	a9 01       	movw	r20, r18
    752c:	db 01       	movw	r26, r22
    752e:	9a 01       	movw	r18, r20
    7530:	bd 01       	movw	r22, r26
    7532:	df 01       	movw	r26, r30
    7534:	f8 01       	movw	r30, r16
    7536:	c1 cf       	rjmp	.-126    	; 0x74ba <malloc+0x22>
    7538:	ef 01       	movw	r28, r30
    753a:	f9 cf       	rjmp	.-14     	; 0x752e <malloc+0x96>
    753c:	90 93 72 0b 	sts	0x0B72, r25	; 0x800b72 <__flp+0x1>
    7540:	80 93 71 0b 	sts	0x0B71, r24	; 0x800b71 <__flp>
    7544:	cd cf       	rjmp	.-102    	; 0x74e0 <malloc+0x48>
    7546:	fe 01       	movw	r30, r28
    7548:	e2 0f       	add	r30, r18
    754a:	f3 1f       	adc	r31, r19
    754c:	81 93       	st	Z+, r24
    754e:	91 93       	st	Z+, r25
    7550:	22 50       	subi	r18, 0x02	; 2
    7552:	31 09       	sbc	r19, r1
    7554:	39 83       	std	Y+1, r19	; 0x01
    7556:	28 83       	st	Y, r18
    7558:	d7 cf       	rjmp	.-82     	; 0x7508 <malloc+0x70>
    755a:	20 91 6f 0b 	lds	r18, 0x0B6F	; 0x800b6f <__brkval>
    755e:	30 91 70 0b 	lds	r19, 0x0B70	; 0x800b70 <__brkval+0x1>
    7562:	23 2b       	or	r18, r19
    7564:	41 f4       	brne	.+16     	; 0x7576 <malloc+0xde>
    7566:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
    756a:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
    756e:	30 93 70 0b 	sts	0x0B70, r19	; 0x800b70 <__brkval+0x1>
    7572:	20 93 6f 0b 	sts	0x0B6F, r18	; 0x800b6f <__brkval>
    7576:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    757a:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    757e:	21 15       	cp	r18, r1
    7580:	31 05       	cpc	r19, r1
    7582:	41 f4       	brne	.+16     	; 0x7594 <malloc+0xfc>
    7584:	2d b7       	in	r18, 0x3d	; 61
    7586:	3e b7       	in	r19, 0x3e	; 62
    7588:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
    758c:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
    7590:	24 1b       	sub	r18, r20
    7592:	35 0b       	sbc	r19, r21
    7594:	e0 91 6f 0b 	lds	r30, 0x0B6F	; 0x800b6f <__brkval>
    7598:	f0 91 70 0b 	lds	r31, 0x0B70	; 0x800b70 <__brkval+0x1>
    759c:	e2 17       	cp	r30, r18
    759e:	f3 07       	cpc	r31, r19
    75a0:	a0 f4       	brcc	.+40     	; 0x75ca <malloc+0x132>
    75a2:	2e 1b       	sub	r18, r30
    75a4:	3f 0b       	sbc	r19, r31
    75a6:	28 17       	cp	r18, r24
    75a8:	39 07       	cpc	r19, r25
    75aa:	78 f0       	brcs	.+30     	; 0x75ca <malloc+0x132>
    75ac:	ac 01       	movw	r20, r24
    75ae:	4e 5f       	subi	r20, 0xFE	; 254
    75b0:	5f 4f       	sbci	r21, 0xFF	; 255
    75b2:	24 17       	cp	r18, r20
    75b4:	35 07       	cpc	r19, r21
    75b6:	48 f0       	brcs	.+18     	; 0x75ca <malloc+0x132>
    75b8:	4e 0f       	add	r20, r30
    75ba:	5f 1f       	adc	r21, r31
    75bc:	50 93 70 0b 	sts	0x0B70, r21	; 0x800b70 <__brkval+0x1>
    75c0:	40 93 6f 0b 	sts	0x0B6F, r20	; 0x800b6f <__brkval>
    75c4:	81 93       	st	Z+, r24
    75c6:	91 93       	st	Z+, r25
    75c8:	9f cf       	rjmp	.-194    	; 0x7508 <malloc+0x70>
    75ca:	f0 e0       	ldi	r31, 0x00	; 0
    75cc:	e0 e0       	ldi	r30, 0x00	; 0
    75ce:	9c cf       	rjmp	.-200    	; 0x7508 <malloc+0x70>

000075d0 <free>:
free():
    75d0:	cf 93       	push	r28
    75d2:	df 93       	push	r29
    75d4:	00 97       	sbiw	r24, 0x00	; 0
    75d6:	e9 f0       	breq	.+58     	; 0x7612 <free+0x42>
    75d8:	fc 01       	movw	r30, r24
    75da:	32 97       	sbiw	r30, 0x02	; 2
    75dc:	13 82       	std	Z+3, r1	; 0x03
    75de:	12 82       	std	Z+2, r1	; 0x02
    75e0:	a0 91 71 0b 	lds	r26, 0x0B71	; 0x800b71 <__flp>
    75e4:	b0 91 72 0b 	lds	r27, 0x0B72	; 0x800b72 <__flp+0x1>
    75e8:	ed 01       	movw	r28, r26
    75ea:	30 e0       	ldi	r19, 0x00	; 0
    75ec:	20 e0       	ldi	r18, 0x00	; 0
    75ee:	10 97       	sbiw	r26, 0x00	; 0
    75f0:	a1 f4       	brne	.+40     	; 0x761a <free+0x4a>
    75f2:	20 81       	ld	r18, Z
    75f4:	31 81       	ldd	r19, Z+1	; 0x01
    75f6:	82 0f       	add	r24, r18
    75f8:	93 1f       	adc	r25, r19
    75fa:	20 91 6f 0b 	lds	r18, 0x0B6F	; 0x800b6f <__brkval>
    75fe:	30 91 70 0b 	lds	r19, 0x0B70	; 0x800b70 <__brkval+0x1>
    7602:	28 17       	cp	r18, r24
    7604:	39 07       	cpc	r19, r25
    7606:	09 f0       	breq	.+2      	; 0x760a <free+0x3a>
    7608:	61 c0       	rjmp	.+194    	; 0x76cc <free+0xfc>
    760a:	f0 93 70 0b 	sts	0x0B70, r31	; 0x800b70 <__brkval+0x1>
    760e:	e0 93 6f 0b 	sts	0x0B6F, r30	; 0x800b6f <__brkval>
    7612:	df 91       	pop	r29
    7614:	cf 91       	pop	r28
    7616:	08 95       	ret
    7618:	ea 01       	movw	r28, r20
    761a:	ce 17       	cp	r28, r30
    761c:	df 07       	cpc	r29, r31
    761e:	e8 f5       	brcc	.+122    	; 0x769a <free+0xca>
    7620:	4a 81       	ldd	r20, Y+2	; 0x02
    7622:	5b 81       	ldd	r21, Y+3	; 0x03
    7624:	9e 01       	movw	r18, r28
    7626:	41 15       	cp	r20, r1
    7628:	51 05       	cpc	r21, r1
    762a:	b1 f7       	brne	.-20     	; 0x7618 <free+0x48>
    762c:	e9 01       	movw	r28, r18
    762e:	fb 83       	std	Y+3, r31	; 0x03
    7630:	ea 83       	std	Y+2, r30	; 0x02
    7632:	49 91       	ld	r20, Y+
    7634:	59 91       	ld	r21, Y+
    7636:	c4 0f       	add	r28, r20
    7638:	d5 1f       	adc	r29, r21
    763a:	ec 17       	cp	r30, r28
    763c:	fd 07       	cpc	r31, r29
    763e:	61 f4       	brne	.+24     	; 0x7658 <free+0x88>
    7640:	80 81       	ld	r24, Z
    7642:	91 81       	ldd	r25, Z+1	; 0x01
    7644:	02 96       	adiw	r24, 0x02	; 2
    7646:	84 0f       	add	r24, r20
    7648:	95 1f       	adc	r25, r21
    764a:	e9 01       	movw	r28, r18
    764c:	99 83       	std	Y+1, r25	; 0x01
    764e:	88 83       	st	Y, r24
    7650:	82 81       	ldd	r24, Z+2	; 0x02
    7652:	93 81       	ldd	r25, Z+3	; 0x03
    7654:	9b 83       	std	Y+3, r25	; 0x03
    7656:	8a 83       	std	Y+2, r24	; 0x02
    7658:	f0 e0       	ldi	r31, 0x00	; 0
    765a:	e0 e0       	ldi	r30, 0x00	; 0
    765c:	12 96       	adiw	r26, 0x02	; 2
    765e:	8d 91       	ld	r24, X+
    7660:	9c 91       	ld	r25, X
    7662:	13 97       	sbiw	r26, 0x03	; 3
    7664:	00 97       	sbiw	r24, 0x00	; 0
    7666:	b9 f5       	brne	.+110    	; 0x76d6 <free+0x106>
    7668:	2d 91       	ld	r18, X+
    766a:	3c 91       	ld	r19, X
    766c:	11 97       	sbiw	r26, 0x01	; 1
    766e:	cd 01       	movw	r24, r26
    7670:	02 96       	adiw	r24, 0x02	; 2
    7672:	82 0f       	add	r24, r18
    7674:	93 1f       	adc	r25, r19
    7676:	20 91 6f 0b 	lds	r18, 0x0B6F	; 0x800b6f <__brkval>
    767a:	30 91 70 0b 	lds	r19, 0x0B70	; 0x800b70 <__brkval+0x1>
    767e:	28 17       	cp	r18, r24
    7680:	39 07       	cpc	r19, r25
    7682:	39 f6       	brne	.-114    	; 0x7612 <free+0x42>
    7684:	30 97       	sbiw	r30, 0x00	; 0
    7686:	51 f5       	brne	.+84     	; 0x76dc <free+0x10c>
    7688:	10 92 72 0b 	sts	0x0B72, r1	; 0x800b72 <__flp+0x1>
    768c:	10 92 71 0b 	sts	0x0B71, r1	; 0x800b71 <__flp>
    7690:	b0 93 70 0b 	sts	0x0B70, r27	; 0x800b70 <__brkval+0x1>
    7694:	a0 93 6f 0b 	sts	0x0B6F, r26	; 0x800b6f <__brkval>
    7698:	bc cf       	rjmp	.-136    	; 0x7612 <free+0x42>
    769a:	d3 83       	std	Z+3, r29	; 0x03
    769c:	c2 83       	std	Z+2, r28	; 0x02
    769e:	40 81       	ld	r20, Z
    76a0:	51 81       	ldd	r21, Z+1	; 0x01
    76a2:	84 0f       	add	r24, r20
    76a4:	95 1f       	adc	r25, r21
    76a6:	c8 17       	cp	r28, r24
    76a8:	d9 07       	cpc	r29, r25
    76aa:	61 f4       	brne	.+24     	; 0x76c4 <free+0xf4>
    76ac:	4e 5f       	subi	r20, 0xFE	; 254
    76ae:	5f 4f       	sbci	r21, 0xFF	; 255
    76b0:	88 81       	ld	r24, Y
    76b2:	99 81       	ldd	r25, Y+1	; 0x01
    76b4:	48 0f       	add	r20, r24
    76b6:	59 1f       	adc	r21, r25
    76b8:	51 83       	std	Z+1, r21	; 0x01
    76ba:	40 83       	st	Z, r20
    76bc:	8a 81       	ldd	r24, Y+2	; 0x02
    76be:	9b 81       	ldd	r25, Y+3	; 0x03
    76c0:	93 83       	std	Z+3, r25	; 0x03
    76c2:	82 83       	std	Z+2, r24	; 0x02
    76c4:	21 15       	cp	r18, r1
    76c6:	31 05       	cpc	r19, r1
    76c8:	09 f0       	breq	.+2      	; 0x76cc <free+0xfc>
    76ca:	b0 cf       	rjmp	.-160    	; 0x762c <free+0x5c>
    76cc:	f0 93 72 0b 	sts	0x0B72, r31	; 0x800b72 <__flp+0x1>
    76d0:	e0 93 71 0b 	sts	0x0B71, r30	; 0x800b71 <__flp>
    76d4:	9e cf       	rjmp	.-196    	; 0x7612 <free+0x42>
    76d6:	fd 01       	movw	r30, r26
    76d8:	dc 01       	movw	r26, r24
    76da:	c0 cf       	rjmp	.-128    	; 0x765c <free+0x8c>
    76dc:	13 82       	std	Z+3, r1	; 0x03
    76de:	12 82       	std	Z+2, r1	; 0x02
    76e0:	d7 cf       	rjmp	.-82     	; 0x7690 <free+0xc0>

000076e2 <realloc>:
realloc():
    76e2:	4f 92       	push	r4
    76e4:	5f 92       	push	r5
    76e6:	6f 92       	push	r6
    76e8:	7f 92       	push	r7
    76ea:	8f 92       	push	r8
    76ec:	9f 92       	push	r9
    76ee:	af 92       	push	r10
    76f0:	bf 92       	push	r11
    76f2:	cf 92       	push	r12
    76f4:	df 92       	push	r13
    76f6:	ef 92       	push	r14
    76f8:	ff 92       	push	r15
    76fa:	0f 93       	push	r16
    76fc:	1f 93       	push	r17
    76fe:	cf 93       	push	r28
    7700:	df 93       	push	r29
    7702:	8c 01       	movw	r16, r24
    7704:	00 97       	sbiw	r24, 0x00	; 0
    7706:	99 f4       	brne	.+38     	; 0x772e <realloc+0x4c>
    7708:	cb 01       	movw	r24, r22
    770a:	df 91       	pop	r29
    770c:	cf 91       	pop	r28
    770e:	1f 91       	pop	r17
    7710:	0f 91       	pop	r16
    7712:	ff 90       	pop	r15
    7714:	ef 90       	pop	r14
    7716:	df 90       	pop	r13
    7718:	cf 90       	pop	r12
    771a:	bf 90       	pop	r11
    771c:	af 90       	pop	r10
    771e:	9f 90       	pop	r9
    7720:	8f 90       	pop	r8
    7722:	7f 90       	pop	r7
    7724:	6f 90       	pop	r6
    7726:	5f 90       	pop	r5
    7728:	4f 90       	pop	r4
    772a:	0c 94 4c 3a 	jmp	0x7498	; 0x7498 <malloc>
    772e:	fc 01       	movw	r30, r24
    7730:	e6 0f       	add	r30, r22
    7732:	f7 1f       	adc	r31, r23
    7734:	9c 01       	movw	r18, r24
    7736:	22 50       	subi	r18, 0x02	; 2
    7738:	31 09       	sbc	r19, r1
    773a:	e2 17       	cp	r30, r18
    773c:	f3 07       	cpc	r31, r19
    773e:	08 f4       	brcc	.+2      	; 0x7742 <realloc+0x60>
    7740:	ae c0       	rjmp	.+348    	; 0x789e <realloc+0x1bc>
    7742:	d9 01       	movw	r26, r18
    7744:	cd 91       	ld	r28, X+
    7746:	dc 91       	ld	r29, X
    7748:	11 97       	sbiw	r26, 0x01	; 1
    774a:	c6 17       	cp	r28, r22
    774c:	d7 07       	cpc	r29, r23
    774e:	20 f1       	brcs	.+72     	; 0x7798 <realloc+0xb6>
    7750:	c5 30       	cpi	r28, 0x05	; 5
    7752:	d1 05       	cpc	r29, r1
    7754:	78 f0       	brcs	.+30     	; 0x7774 <realloc+0x92>
    7756:	ce 01       	movw	r24, r28
    7758:	04 97       	sbiw	r24, 0x04	; 4
    775a:	86 17       	cp	r24, r22
    775c:	97 07       	cpc	r25, r23
    775e:	50 f0       	brcs	.+20     	; 0x7774 <realloc+0x92>
    7760:	c6 1b       	sub	r28, r22
    7762:	d7 0b       	sbc	r29, r23
    7764:	22 97       	sbiw	r28, 0x02	; 2
    7766:	c1 93       	st	Z+, r28
    7768:	d1 93       	st	Z+, r29
    776a:	6d 93       	st	X+, r22
    776c:	7c 93       	st	X, r23
    776e:	cf 01       	movw	r24, r30
    7770:	0e 94 e8 3a 	call	0x75d0	; 0x75d0 <free>
    7774:	c8 01       	movw	r24, r16
    7776:	df 91       	pop	r29
    7778:	cf 91       	pop	r28
    777a:	1f 91       	pop	r17
    777c:	0f 91       	pop	r16
    777e:	ff 90       	pop	r15
    7780:	ef 90       	pop	r14
    7782:	df 90       	pop	r13
    7784:	cf 90       	pop	r12
    7786:	bf 90       	pop	r11
    7788:	af 90       	pop	r10
    778a:	9f 90       	pop	r9
    778c:	8f 90       	pop	r8
    778e:	7f 90       	pop	r7
    7790:	6f 90       	pop	r6
    7792:	5f 90       	pop	r5
    7794:	4f 90       	pop	r4
    7796:	08 95       	ret
    7798:	5b 01       	movw	r10, r22
    779a:	ac 1a       	sub	r10, r28
    779c:	bd 0a       	sbc	r11, r29
    779e:	4c 01       	movw	r8, r24
    77a0:	8c 0e       	add	r8, r28
    77a2:	9d 1e       	adc	r9, r29
    77a4:	a0 91 71 0b 	lds	r26, 0x0B71	; 0x800b71 <__flp>
    77a8:	b0 91 72 0b 	lds	r27, 0x0B72	; 0x800b72 <__flp+0x1>
    77ac:	51 2c       	mov	r5, r1
    77ae:	41 2c       	mov	r4, r1
    77b0:	f1 2c       	mov	r15, r1
    77b2:	e1 2c       	mov	r14, r1
    77b4:	10 97       	sbiw	r26, 0x00	; 0
    77b6:	31 f5       	brne	.+76     	; 0x7804 <realloc+0x122>
    77b8:	80 91 6f 0b 	lds	r24, 0x0B6F	; 0x800b6f <__brkval>
    77bc:	90 91 70 0b 	lds	r25, 0x0B70	; 0x800b70 <__brkval+0x1>
    77c0:	88 15       	cp	r24, r8
    77c2:	99 05       	cpc	r25, r9
    77c4:	09 f0       	breq	.+2      	; 0x77c8 <realloc+0xe6>
    77c6:	5c c0       	rjmp	.+184    	; 0x7880 <realloc+0x19e>
    77c8:	46 16       	cp	r4, r22
    77ca:	57 06       	cpc	r5, r23
    77cc:	08 f0       	brcs	.+2      	; 0x77d0 <realloc+0xee>
    77ce:	58 c0       	rjmp	.+176    	; 0x7880 <realloc+0x19e>
    77d0:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    77d4:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    77d8:	00 97       	sbiw	r24, 0x00	; 0
    77da:	41 f4       	brne	.+16     	; 0x77ec <realloc+0x10a>
    77dc:	8d b7       	in	r24, 0x3d	; 61
    77de:	9e b7       	in	r25, 0x3e	; 62
    77e0:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
    77e4:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
    77e8:	84 1b       	sub	r24, r20
    77ea:	95 0b       	sbc	r25, r21
    77ec:	e8 17       	cp	r30, r24
    77ee:	f9 07       	cpc	r31, r25
    77f0:	08 f0       	brcs	.+2      	; 0x77f4 <realloc+0x112>
    77f2:	55 c0       	rjmp	.+170    	; 0x789e <realloc+0x1bc>
    77f4:	f0 93 70 0b 	sts	0x0B70, r31	; 0x800b70 <__brkval+0x1>
    77f8:	e0 93 6f 0b 	sts	0x0B6F, r30	; 0x800b6f <__brkval>
    77fc:	f9 01       	movw	r30, r18
    77fe:	71 83       	std	Z+1, r23	; 0x01
    7800:	60 83       	st	Z, r22
    7802:	b8 cf       	rjmp	.-144    	; 0x7774 <realloc+0x92>
    7804:	8d 91       	ld	r24, X+
    7806:	9c 91       	ld	r25, X
    7808:	11 97       	sbiw	r26, 0x01	; 1
    780a:	12 96       	adiw	r26, 0x02	; 2
    780c:	6c 90       	ld	r6, X
    780e:	12 97       	sbiw	r26, 0x02	; 2
    7810:	13 96       	adiw	r26, 0x03	; 3
    7812:	7c 90       	ld	r7, X
    7814:	13 97       	sbiw	r26, 0x03	; 3
    7816:	a8 15       	cp	r26, r8
    7818:	b9 05       	cpc	r27, r9
    781a:	59 f5       	brne	.+86     	; 0x7872 <realloc+0x190>
    781c:	6c 01       	movw	r12, r24
    781e:	42 e0       	ldi	r20, 0x02	; 2
    7820:	c4 0e       	add	r12, r20
    7822:	d1 1c       	adc	r13, r1
    7824:	ca 14       	cp	r12, r10
    7826:	db 04       	cpc	r13, r11
    7828:	20 f1       	brcs	.+72     	; 0x7872 <realloc+0x190>
    782a:	ac 01       	movw	r20, r24
    782c:	4a 19       	sub	r20, r10
    782e:	5b 09       	sbc	r21, r11
    7830:	da 01       	movw	r26, r20
    7832:	12 96       	adiw	r26, 0x02	; 2
    7834:	15 97       	sbiw	r26, 0x05	; 5
    7836:	80 f0       	brcs	.+32     	; 0x7858 <realloc+0x176>
    7838:	62 82       	std	Z+2, r6	; 0x02
    783a:	73 82       	std	Z+3, r7	; 0x03
    783c:	51 83       	std	Z+1, r21	; 0x01
    783e:	40 83       	st	Z, r20
    7840:	d9 01       	movw	r26, r18
    7842:	6d 93       	st	X+, r22
    7844:	7c 93       	st	X, r23
    7846:	e1 14       	cp	r14, r1
    7848:	f1 04       	cpc	r15, r1
    784a:	71 f0       	breq	.+28     	; 0x7868 <realloc+0x186>
    784c:	d7 01       	movw	r26, r14
    784e:	13 96       	adiw	r26, 0x03	; 3
    7850:	fc 93       	st	X, r31
    7852:	ee 93       	st	-X, r30
    7854:	12 97       	sbiw	r26, 0x02	; 2
    7856:	8e cf       	rjmp	.-228    	; 0x7774 <realloc+0x92>
    7858:	22 96       	adiw	r28, 0x02	; 2
    785a:	8c 0f       	add	r24, r28
    785c:	9d 1f       	adc	r25, r29
    785e:	f9 01       	movw	r30, r18
    7860:	91 83       	std	Z+1, r25	; 0x01
    7862:	80 83       	st	Z, r24
    7864:	f3 01       	movw	r30, r6
    7866:	ef cf       	rjmp	.-34     	; 0x7846 <realloc+0x164>
    7868:	f0 93 72 0b 	sts	0x0B72, r31	; 0x800b72 <__flp+0x1>
    786c:	e0 93 71 0b 	sts	0x0B71, r30	; 0x800b71 <__flp>
    7870:	81 cf       	rjmp	.-254    	; 0x7774 <realloc+0x92>
    7872:	48 16       	cp	r4, r24
    7874:	59 06       	cpc	r5, r25
    7876:	08 f4       	brcc	.+2      	; 0x787a <realloc+0x198>
    7878:	2c 01       	movw	r4, r24
    787a:	7d 01       	movw	r14, r26
    787c:	d3 01       	movw	r26, r6
    787e:	9a cf       	rjmp	.-204    	; 0x77b4 <realloc+0xd2>
    7880:	cb 01       	movw	r24, r22
    7882:	0e 94 4c 3a 	call	0x7498	; 0x7498 <malloc>
    7886:	7c 01       	movw	r14, r24
    7888:	00 97       	sbiw	r24, 0x00	; 0
    788a:	49 f0       	breq	.+18     	; 0x789e <realloc+0x1bc>
    788c:	ae 01       	movw	r20, r28
    788e:	b8 01       	movw	r22, r16
    7890:	0e 94 57 3c 	call	0x78ae	; 0x78ae <memcpy>
    7894:	c8 01       	movw	r24, r16
    7896:	0e 94 e8 3a 	call	0x75d0	; 0x75d0 <free>
    789a:	87 01       	movw	r16, r14
    789c:	6b cf       	rjmp	.-298    	; 0x7774 <realloc+0x92>
    789e:	10 e0       	ldi	r17, 0x00	; 0
    78a0:	00 e0       	ldi	r16, 0x00	; 0
    78a2:	68 cf       	rjmp	.-304    	; 0x7774 <realloc+0x92>

000078a4 <abort>:
abort():
    78a4:	81 e0       	ldi	r24, 0x01	; 1
    78a6:	90 e0       	ldi	r25, 0x00	; 0
    78a8:	f8 94       	cli
    78aa:	0c 94 a7 3c 	jmp	0x794e	; 0x794e <__do_global_dtors>

000078ae <memcpy>:
memcpy():
    78ae:	fb 01       	movw	r30, r22
    78b0:	dc 01       	movw	r26, r24
    78b2:	02 c0       	rjmp	.+4      	; 0x78b8 <memcpy+0xa>
    78b4:	01 90       	ld	r0, Z+
    78b6:	0d 92       	st	X+, r0
    78b8:	41 50       	subi	r20, 0x01	; 1
    78ba:	50 40       	sbci	r21, 0x00	; 0
    78bc:	d8 f7       	brcc	.-10     	; 0x78b4 <memcpy+0x6>
    78be:	08 95       	ret

000078c0 <strcpy>:
strcpy():
    78c0:	fb 01       	movw	r30, r22
    78c2:	dc 01       	movw	r26, r24
    78c4:	01 90       	ld	r0, Z+
    78c6:	0d 92       	st	X+, r0
    78c8:	00 20       	and	r0, r0
    78ca:	e1 f7       	brne	.-8      	; 0x78c4 <strcpy+0x4>
    78cc:	08 95       	ret

000078ce <itoa>:
itoa():
    78ce:	45 32       	cpi	r20, 0x25	; 37
    78d0:	51 05       	cpc	r21, r1
    78d2:	20 f4       	brcc	.+8      	; 0x78dc <itoa+0xe>
    78d4:	42 30       	cpi	r20, 0x02	; 2
    78d6:	10 f0       	brcs	.+4      	; 0x78dc <itoa+0xe>
    78d8:	0c 94 72 3c 	jmp	0x78e4	; 0x78e4 <__itoa_ncheck>
    78dc:	fb 01       	movw	r30, r22
    78de:	10 82       	st	Z, r1
    78e0:	cb 01       	movw	r24, r22
    78e2:	08 95       	ret

000078e4 <__itoa_ncheck>:
__itoa_ncheck():
    78e4:	bb 27       	eor	r27, r27
    78e6:	4a 30       	cpi	r20, 0x0A	; 10
    78e8:	31 f4       	brne	.+12     	; 0x78f6 <__itoa_ncheck+0x12>
    78ea:	99 23       	and	r25, r25
    78ec:	22 f4       	brpl	.+8      	; 0x78f6 <__itoa_ncheck+0x12>
    78ee:	bd e2       	ldi	r27, 0x2D	; 45
    78f0:	90 95       	com	r25
    78f2:	81 95       	neg	r24
    78f4:	9f 4f       	sbci	r25, 0xFF	; 255
    78f6:	0c 94 7e 3c 	jmp	0x78fc	; 0x78fc <__utoa_common>

000078fa <__utoa_ncheck>:
__utoa_ncheck():
    78fa:	bb 27       	eor	r27, r27

000078fc <__utoa_common>:
    78fc:	fb 01       	movw	r30, r22
    78fe:	55 27       	eor	r21, r21
    7900:	aa 27       	eor	r26, r26
    7902:	88 0f       	add	r24, r24
    7904:	99 1f       	adc	r25, r25
    7906:	aa 1f       	adc	r26, r26
    7908:	a4 17       	cp	r26, r20
    790a:	10 f0       	brcs	.+4      	; 0x7910 <__utoa_common+0x14>
    790c:	a4 1b       	sub	r26, r20
    790e:	83 95       	inc	r24
    7910:	50 51       	subi	r21, 0x10	; 16
    7912:	b9 f7       	brne	.-18     	; 0x7902 <__utoa_common+0x6>
    7914:	a0 5d       	subi	r26, 0xD0	; 208
    7916:	aa 33       	cpi	r26, 0x3A	; 58
    7918:	08 f0       	brcs	.+2      	; 0x791c <__utoa_common+0x20>
    791a:	a9 5d       	subi	r26, 0xD9	; 217
    791c:	a1 93       	st	Z+, r26
    791e:	00 97       	sbiw	r24, 0x00	; 0
    7920:	79 f7       	brne	.-34     	; 0x7900 <__utoa_common+0x4>
    7922:	b1 11       	cpse	r27, r1
    7924:	b1 93       	st	Z+, r27
    7926:	11 92       	st	Z+, r1
    7928:	cb 01       	movw	r24, r22
    792a:	0c 94 97 3c 	jmp	0x792e	; 0x792e <strrev>

0000792e <strrev>:
strrev():
    792e:	dc 01       	movw	r26, r24
    7930:	fc 01       	movw	r30, r24
    7932:	67 2f       	mov	r22, r23
    7934:	71 91       	ld	r23, Z+
    7936:	77 23       	and	r23, r23
    7938:	e1 f7       	brne	.-8      	; 0x7932 <strrev+0x4>
    793a:	32 97       	sbiw	r30, 0x02	; 2
    793c:	04 c0       	rjmp	.+8      	; 0x7946 <strrev+0x18>
    793e:	7c 91       	ld	r23, X
    7940:	6d 93       	st	X+, r22
    7942:	70 83       	st	Z, r23
    7944:	62 91       	ld	r22, -Z
    7946:	ae 17       	cp	r26, r30
    7948:	bf 07       	cpc	r27, r31
    794a:	c8 f3       	brcs	.-14     	; 0x793e <strrev+0x10>
    794c:	08 95       	ret

0000794e <__do_global_dtors>:
__do_global_dtors():
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2496
    794e:	13 e0       	ldi	r17, 0x03	; 3
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2497
    7950:	c2 e1       	ldi	r28, 0x12	; 18
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2498
    7952:	d3 e0       	ldi	r29, 0x03	; 3
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2502
    7954:	04 c0       	rjmp	.+8      	; 0x795e <__do_global_dtors+0x10>
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2508
    7956:	fe 01       	movw	r30, r28
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2509
    7958:	0e 94 43 3a 	call	0x7486	; 0x7486 <__tablejump2__>
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2510
    795c:	21 96       	adiw	r28, 0x01	; 1
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2515
    795e:	c4 31       	cpi	r28, 0x14	; 20
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2516
    7960:	d1 07       	cpc	r29, r17
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2521
    7962:	c9 f7       	brne	.-14     	; 0x7956 <__do_global_dtors+0x8>
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2278
    7964:	f8 94       	cli

00007966 <__stop_program>:
__stop_program():
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2280
    7966:	ff cf       	rjmp	.-2      	; 0x7966 <__stop_program>
